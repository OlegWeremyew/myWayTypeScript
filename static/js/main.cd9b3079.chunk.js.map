{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/messagesReducer.ts","components/Footer/Footer.module.css","components/MainWindow/News/News.module.css","components/MainWindow/Music/Music.module.css","components/MainWindow/Friends/Friends.module.css","components/MainWindow/Settings/Settings.module.css","components/MainWindow/Users/Users.module.css","common/Preloader/Preloader.module.css","Api/api.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/MainWindow/News/News.tsx","components/MainWindow/Music/Music.tsx","components/MainWindow/Friends/Friends.tsx","components/MainWindow/Settings/Settings.tsx","utils/objectsHellper.ts","redux/usersReducer.ts","common/Paginator/Paginator.tsx","assets/images/user.png","components/MainWindow/Users/User.tsx","components/MainWindow/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","redux/usersSelectors.ts","components/MainWindow/Users/UsersContainer.tsx","assets/images/logo.png","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","redux/AppReducer.ts","redux/sidebarPageReducer.ts","redux/reduxStore.ts","App.tsx","index.tsx","common/FormsControls/FormsControls.tsx","common/FormsControls/FormsControls.module.css","common/Paginator/Paginator.module.css","utils/validators/validators.tsx","App.module.css","components/Header/Header.module.css","redux/profileReducer.ts"],"names":["module","exports","ADD_MESSAGE","initialState","users","name","id","img","messages","message","messagesReducer","state","action","type","newMessage","Date","getTime","payload","newMessageText","addMessageCreator","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authApi","getAuth","login","email","password","rememberMe","logout","Navbar","className","c","nav","item","navData","isActive","activeLink","to","active","Footer","footer","News","news","Music","music","Friends","friends","Settings","settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","m","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","toggleIsFetching","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useEffect","cn","styles","paginator","onClick","filter","p","selectedPage","pageNumber","e","User","user","src","photos","small","userImage","userPhoto","alt","followed","disabled","some","Users","props","u","Preloader","preloader","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","requestUsers","this","React","Component","UsersContainer","compose","connect","page","dispatch","a","totalCount","count","Header","header","logo","title","loginBlock","isAuth","SET_USER_DATA","TOGGLE_IS_AUTH","setAuthUserData","getAuthUserData","resultCode","HeaderContainer","auth","Login","LoginReduxForm","onSubmit","reduxForm","form","handleSubmit","error","createField","required","Input","style","formSummaryError","LoginAPIContainer","LoginContainer","length","stopSubmit","_error","SET_INITIALIZED","initialized","rootReducer","combineReducers","profilePage","profileReducer","messagesPage","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","MessagesContainer","lazy","ProfileContainer","App","initializeApp","appContent","appContentWindow","path","element","AppContainer","promise","Promise","all","MainApp","Suspense","fallback","ReactDOM","render","document","getElementById","FormControl","meta","touched","children","hasError","styleError","formControl","Textarea","input","restProps","child","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","ADD_POST","DELETED_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","posts","likesCount","profile","newPost","newPostText","f","postId","addPost","setStatus","getUserProfile","getUserStatus","updateUserStatus","file"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,wHCD/EC,EAAc,sCAEdC,EAAe,CACjBC,MAAO,CACH,CACIC,KAAM,OACNC,GAAI,EACJC,IAAK,uHAET,CACIF,KAAM,QACNC,GAAI,EACJC,IAAK,uHAET,CAACF,KAAM,UAAWC,GAAI,EAAGC,IAAK,yDAC9B,CACIF,KAAM,QACNC,GAAI,EACJC,IAAK,gFAET,CACIF,KAAM,OACNC,GAAI,EACJC,IAAK,2HAET,CACIF,KAAM,QACNC,GAAI,EACJC,IAAK,wHAGbC,SAAU,CACN,CAACC,QAAS,KAAMH,GAAI,GACpB,CAACG,QAAS,KAAMH,GAAI,GACpB,CAACG,QAAS,KAAMH,GAAI,GACpB,CAACG,QAAS,KAAMH,GAAI,GACpB,CAACG,QAAS,MAAOH,GAAI,GACrB,CAACG,QAAS,MAAOH,GAAI,KAMhBI,EAAkB,WAA2F,IAA1FC,EAAyF,uDAA/DR,EAAcS,EAAiD,uCAErH,OAAQA,EAAOC,MACX,KAAKX,EACD,IAAIY,EAA0B,CAC1BR,IAAI,IAAIS,MAAOC,UACfP,QAASG,EAAOK,QAAQC,gBAE5B,OAAO,2BACAP,GADP,IAEIH,SAAS,GAAD,mBAAMG,EAAMH,UAAZ,CAAsBM,MAGtC,QACI,OAAOH,IAKNQ,EAAoB,SAACD,GAC9B,MAAO,CACHL,KAAMX,EACNe,QAAS,CACLC,qB,oBCjEZlB,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,UAAY,2B,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,gCCD9B,mHAEamB,EAFb,OAEwBC,EAAMC,OAAO,CACjCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACqC,IAAhDC,EAA+C,uDAAzB,EAAGC,EAAsB,uDAAH,EACjD,OAAOT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEnCC,OALoB,SAKbC,GACH,OAAOf,EAASgB,KAAT,iBAAwBD,IAAUJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEvEI,SARoB,SAQXF,GACL,OAAOf,EAASkB,OAAT,iBAA0BH,IAAUJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAIhEM,EAAa,CACtBC,WADsB,SACXL,GACP,OAAOf,EAASU,IAAT,kBAAwBK,KAEnCM,UAJsB,SAIZN,GACN,OAAOf,EAASU,IAAT,yBAA+BK,KAE1CO,aAPsB,SAOTC,GACT,OAAOvB,EAASwB,IAAT,iBAA+B,CAACD,YAE3CE,UAVsB,SAUZC,GAEN,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAElB1B,EAASwB,IAAT,gBAA8BG,EAAU,CAC3CtB,QAAS,CACL,eAAgB,2BAMnByB,EAAU,CACnBC,QADmB,WAEf,OAAO/B,EAASU,IAAT,YAEXsB,MAJmB,SAIbC,EAAeC,GAAgD,IAA9BC,EAA6B,wDAChE,OAAOnC,EAASgB,KAAT,aAA4B,CAACiB,QAAOC,WAAUC,gBAEzDC,OAPmB,WAQf,OAAOpC,EAASkB,OAAT,iB,6LCtBAmB,EA5BA,WACX,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAY,SAACI,GAAD,OAAaA,EAAQC,SAAUJ,IAAEK,WAAY,IAAIC,GAAG,WAAzE,uBAEJ,qBAAKP,UAAS,UAAMC,IAAEE,KAAR,YAAgBF,IAAEO,QAAhC,SACI,cAAC,IAAD,CAASR,UAAY,SAACI,GAAD,OAAaA,EAAQC,SAAUJ,IAAEK,WAAY,IAAIC,GAAG,YAAzE,uBAEJ,qBAAKP,UAAS,UAAMC,IAAEE,KAAR,YAAgBF,IAAEO,QAAhC,SACI,cAAC,IAAD,CAASR,UAAY,SAACI,GAAD,OAAaA,EAAQC,SAAUJ,IAAEK,WAAY,IAAIC,GAAG,SAAzE,qBAEJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAY,SAACI,GAAD,OAAaA,EAAQC,SAAUJ,IAAEK,WAAY,IAAIC,GAAG,QAAzE,oBAEJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAY,SAACI,GAAD,OAAaA,EAAQC,SAAUJ,IAAEK,WAAY,IAAIC,GAAG,SAAzE,qBAEJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAY,SAACI,GAAD,OAAaA,EAAQC,SAAUJ,IAAEK,WAAY,IAAIC,GAAG,YAAzE,wBAEJ,qBAAKP,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASH,UAAY,SAACI,GAAD,OAAaA,EAAQC,SAAUJ,IAAEK,WAAY,IAAIC,GAAG,WAAzE,2B,kBCfDE,EARA,WACX,OACJ,qBAAKT,UAAWC,IAAES,OAAlB,qB,yBCOeC,EATF,WACT,OACI,qBAAKX,UAAWC,IAAEW,KAAlB,mB,kBCOOC,EATD,WACV,OACI,qBAAKb,UAAWC,IAAEa,MAAlB,oB,kBCOOC,EATC,WACZ,OACI,qBAAKf,UAAWC,IAAEe,QAAlB,sB,kBCOOC,EATE,WACb,OACI,qBAAKjB,UAAWC,IAAEiB,SAAlB,uB,uDCJKC,EAAsB,SAACC,EAAcC,EAAgBC,EAAqBC,GACnF,OAAOH,EACFI,KAAI,SAAAC,GACD,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCFbC,EAAS,8BACTC,EAAW,gCACXC,EAAY,iCACZC,EAAmB,wCACnBC,EAAwB,6CACxBC,EAAqB,0CACrBC,EAAkC,uDAElCvF,EAAiC,CACnCC,MAAO,GACPyB,SAAU,EACV8D,gBAAiB,EACjB/D,YAAa,EACbgE,YAAY,EACZC,oBAAqB,IAkDZC,EAAgB,SAACC,GAC1B,MAAO,CACHlF,KAAMuE,EACNnE,QAAS,CACL8E,YAMCC,EAAkB,SAACD,GAC5B,MAAO,CACHlF,KAAMwE,EACNpE,QAAS,CACL8E,YAgBCE,EAAiB,SAACrE,GAC3B,MAAO,CACHf,KAAM0E,EACNtE,QAAS,CACLW,iBAgBCsE,EAAmB,SAACN,GAC7B,MAAO,CACH/E,KAAM4E,EACNxE,QAAS,CACL2E,gB,mEC/GCO,GAAY,SAAC,GAItB,IAJqH,IAA9FC,EAA6F,EAA7FA,gBAAiBvE,EAA4E,EAA5EA,SAAUD,EAAkE,EAAlEA,YAAayE,EAAqD,EAArDA,cAAqD,IAAtCC,mBAAsC,MAAxB,GAAwB,EAE9GC,EAAcC,KAAKC,KAAKL,EAAkBvE,GAC1C6E,EAAQ,GACLC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAME,EAAeL,KAAKC,KAAKF,EAAaD,GARwE,EAS1EQ,mBAAS,GATiE,oBAS7GC,EAT6G,KAS9FC,EAT8F,KAU9GC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAM/C,OAJAa,qBAAU,WACNH,EAAiBR,KAAKC,KAAK7E,EAAc0E,MAC1C,CAAC1E,IAGA,sBAAK8B,UAAW0D,KAAGC,KAAOC,WAA1B,UACKP,EAAgB,GACjB,wBAAQQ,QAAS,kBAAMP,EAAiBD,EAAgB,IAAxD,kBAGCL,EACIc,QAAO,SAAAC,GAAC,OAAIA,GAAKR,GAAyBQ,GAAKP,KAC/ChC,KAAI,SAAAuC,GACD,OACI,sBAAM/D,UAAW0D,KAAG,gBAAEC,KAAOK,aAAe9F,IAAgB6F,GAAIJ,KAAOM,YAEjEJ,QAAS,SAACK,GAAD,OAAOvB,EAAcoB,IAFpC,SAGKA,GAFMA,MAMtBZ,EAAeE,GAChB,wBAAQQ,QAAS,kBAAMP,EAAiBD,EAAgB,IAAxD,sB,qBC/CG,OAA0B,iCCa5Bc,GAAO,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,KAAK5F,EAA0D,EAA1DA,OAAOG,EAAmD,EAAnDA,SAASwD,EAA0C,EAA1CA,oBAEvC,OAAQ,gCACQ,iCACI,8BACI,cAAC,IAAD,CAAS5B,GAAI,YAAc6D,EAAKxH,GAAhC,SACA,qBAAKyH,IAA2B,OAAtBD,EAAKE,OAAOC,MAAiBH,EAAKE,OAAOC,MAAQC,GAAWxE,UAAWC,KAAEwE,UAC9EC,IAAI,cAGb,8BAEQN,EAAKO,SACC,wBAAQC,SAAUzC,EAAoB0C,MAAK,SAAAjI,GAAE,OAAIA,IAAOwH,EAAKxH,MACrDiH,QAAS,WACLlF,EAASyF,EAAKxH,KAF1B,sBAIA,wBAAQgI,SAAUzC,EAAoB0C,MAAK,SAAAjI,GAAE,OAAIA,IAAOwH,EAAKxH,MACrDiH,QAAS,WACLrF,EAAO4F,EAAKxH,KAFxB,yBAOlB,iCACI,iCACI,8BAAMwH,EAAKzH,OACX,8BAAMyH,EAAKnF,YAEf,iCACI,8BAAM,uBACN,8BAAM,8BC3BrB6F,GAAQ,SAAC,GAAuF,IAAtF7C,EAAqF,EAArFA,gBAAiB9D,EAAoE,EAApEA,SAAUD,EAA0D,EAA1DA,YAAayE,EAA6C,EAA7CA,cAAkBoC,EAA2B,6EAExG,OACI,gCACI,cAAC,GAAD,CACIrC,gBAAiBT,EACjB9D,SAAUA,EACVD,YAAaA,EACbyE,cAAeA,IAGfoC,EAAMrI,MAAM8E,KAAI,SAAAwD,GAAC,OAAI,cAAC,GAAD,CAEbZ,KAAMY,EACNxG,OAAQuG,EAAMvG,OACdG,SAAUoG,EAAMpG,SAChBwD,oBAAqB4C,EAAM5C,qBAJtB6C,EAAEpI,WC7BhB,OAA0B,sC,qBCI5BqI,GAAY,WACrB,OACI,8BACI,qBAAKZ,IAAKa,GAAWlF,UAAWC,KAAEiF,UAAWR,IAAI,iB,mBCChDzG,GAAWkH,cAJQ,SAAClI,GAC7B,OAAOA,EAAMmI,UAAU1I,SAG8B,SAACA,GACtD,OAAOA,EAAMoH,QAAO,SAAAkB,GAAC,OAAI,QAGhBK,GAAc,SAACpI,GACxB,OAAOA,EAAMmI,UAAUjH,UAGdmH,GAAqB,SAACrI,GAC/B,OAAOA,EAAMmI,UAAUnD,iBAGdsD,GAAiB,SAACtI,GAC3B,OAAOA,EAAMmI,UAAUlH,aAGdsH,GAAgB,SAACvI,GAC1B,OAAOA,EAAMmI,UAAUlD,YAGduD,GAAyB,SAACxI,GACnC,OAAOA,EAAMmI,UAAUjD,qBCWrBuD,G,4MAMF/C,cAAgB,SAACsB,GAAwB,IAC9B9F,EAAY,EAAK4G,MAAjB5G,SACP,EAAK4G,MAAMY,aAAa1B,EAAY9F,I,uDAPxC,WAAqB,IAAD,EACgByH,KAAKb,MAA9B7G,EADS,EACTA,YAAaC,EADJ,EACIA,SACpByH,KAAKb,MAAMY,aAAazH,EAAaC,K,oBAQzC,WACI,OACI,qCACKyH,KAAKb,MAAM7C,WAAa,cAAC,GAAD,IAAe,KACxC,cAAC,GAAD,CACID,gBAAiB2D,KAAKb,MAAM9C,gBAC5B9D,SAAUyH,KAAKb,MAAM5G,SACrBD,YAAa0H,KAAKb,MAAM7G,YACxByE,cAAeiD,KAAKjD,cACpBjG,MAAOkJ,KAAKb,MAAMrI,MAClB8B,OAAQoH,KAAKb,MAAM3C,cACnBzD,SAAUiH,KAAKb,MAAMzC,gBACrBH,oBAAqByD,KAAKb,MAAM5C,6B,GAvBpB0D,IAAMC,WAyC3BC,GAAiBC,aACxBC,aAZoB,SAAChJ,GACrB,MAAO,CACHP,MAAOuB,GAAShB,GAChBkB,SAAUkH,GAAYpI,GACtBgF,gBAAiBqD,GAAmBrI,GACpCiB,YAAaqH,GAAetI,GAC5BiF,WAAYsD,GAAcvI,GAC1BkF,oBAAqBsD,GAAuBxI,MAKvB,CACrBmF,gBACAE,kBACAC,iBACAoD,aRuDoB,SAACO,EAAc/H,GAAf,8CAAoC,WAAOgI,GAAP,eAAAC,EAAA,6DAC5DD,EAAS3D,GAAiB,IAC1B2D,EAAS5D,EAAe2D,IAFoC,SAIzClI,IAASC,SAASiI,EAAM/H,GAJiB,OAItDI,EAJsD,OAM5D4H,EAAS3D,GAAiB,IAC1B2D,GA3DqBzJ,EA2DH6B,EAAK6C,MA1DhB,CACHjE,KAAMyE,EACNrE,QAAS,CACLb,YAwDRyJ,GAxC+BE,EAwCH9H,EAAK8H,WAvC1B,CACHlJ,KAAM2E,EACNvE,QAAS,CACL+I,MAAOD,MA4B6C,iCAhC9B,IAACA,EApBV3J,IAoDuC,OAApC,yDQ5DAsJ,CAO1BN,I,oBCxFa,OAA0B,iCC2B1Ba,GAhBA,SAACxB,GAEZ,OACI,yBAAQ/E,UAAWC,KAAEuG,OAArB,UACI,qBAAKnC,IAAKoC,GAAM/B,IAAI,OAAOgC,MAAM,eACjC,qBAAK1G,UAAWC,KAAE0G,WAAlB,SAEQ5B,EAAM6B,OACA,gCAAM7B,EAAMrF,MAAZ,MAAqB,wBAAQmE,QAASkB,EAAMjF,OAAvB,uBACrB,cAAC,IAAD,CAASS,GAAI,SAAb,yB,SCfpBsG,GAAgB,oCAChB9E,GAAqB,yCACrB+E,GAAiB,qCAgCVC,GAAkB,SAACtI,EAAgBkB,EAAeD,EAAekH,GAC1E,MAAO,CACHzJ,KAAM0J,GACNtJ,QAAS,CACLkB,SACAkB,QACAD,QACAkH,YAyBCI,GAAkB,yDAAoB,WAAOb,GAAP,uBAAAC,EAAA,sEACxB5G,IAAQC,UADgB,OAEd,KAD3BnB,EADyC,QAElCC,KAAK0I,aAAmB,EACR3I,EAASC,KAAKA,KAAlC3B,EAD2B,EAC3BA,GAAI+C,EADuB,EACvBA,MAAOD,EADgB,EAChBA,MAChByG,EAASY,GAAgBnK,EAAI+C,EAAOD,GAAO,KAJA,2CAApB,uDA2C3BjD,GAAe,CACf8B,KAAM,GACN2D,YAAY,EACZ0E,QAAQ,GCrGNM,G,4JAEF,WAEI,OACI,cAAC,GAAD,CACIN,OAAQhB,KAAKb,MAAM6B,OACnBlH,MAAOkG,KAAKb,MAAMrF,MAClBI,OAAQ8F,KAAKb,MAAMjF,a,GARL+F,IAAMC,WAoBrBG,gBALS,SAAChJ,GAAD,MAA+C,CACnE2J,OAAQ3J,EAAMkK,KAAKP,OACnBlH,MAAOzC,EAAMkK,KAAK5I,KAAKmB,SAGa,CAACI,ODuDnB,yDAAM,WAAOqG,GAAP,SAAAC,EAAA,sEACD5G,IAAQM,SADP,OAES,IAFT,OAEXvB,KAAK0I,YACdd,EAASY,GAAgB,GAAI,GAAI,IAAI,IAHjB,2CAAN,wDCvDPd,CAAmCiB,I,gDC7BrCE,GAAQ,SAAC,GAAmD,IAAlDR,EAAiD,EAAjDA,OAAQlH,EAAyC,EAAzCA,MAAyC,mCAMpE,OAAIkH,EACO,cAAC,IAAD,CAAUrG,GAAI,aAIrB,gCACI,uCACA,cAAC8G,GAAD,CAAgBC,SAXP,SAACjI,GACdK,EAAML,EAASM,MAAON,EAASO,SAAUP,EAASQ,mBAgCpDwH,GAAiBE,aAAwB,CAACC,KAAM,SAA/BD,EAjBsC,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,aAAaC,EAAW,EAAXA,MACxE,OACI,uBAAMJ,SAAUG,EAAhB,UACSE,aAAY,QAAS,QAAS,CAACC,MAAWC,KAAO,CAAC1K,KAAM,QAAS,IACjEwK,aAAY,WAAY,WAAY,CAACC,MAAWC,KAAO,CAAC1K,KAAM,YAAa,IAC3EwK,aAAY,KAAM,aAAc,GAAIE,KAAO,CAAC1K,KAAM,YAAa,eAEhEuK,GACA,qBAAK1H,UAAW8H,KAAMC,iBAAtB,SAAyCL,IAE7C,8BACI,mDC9BVM,G,4JAEF,WACI,OACI,cAAC,GAAD,CACApB,OAAQhB,KAAKb,MAAM6B,OACnBlH,MAAOkG,KAAKb,MAAMrF,Y,GANEmG,IAAMC,WAgBzBmC,GAAiBhC,aAJN,SAAChJ,GAAD,MAA+C,CACnE2J,OAAQ3J,EAAMkK,KAAKP,UAGgC,CACnDlH,MHwDiB,SAACC,EAAeC,EAAkBC,GAAlC,8CAAwE,WAAOsG,GAAP,iBAAAC,EAAA,sEAClE5G,IAAQE,MAAMC,EAAOC,EAAUC,GADmC,OAExD,KAD3BvB,EADmF,QAE5EC,KAAK0I,WACdd,EAASa,OAELjK,EAAUuB,EAASC,KAAKzB,SAASoL,OAAS,EACxC5J,EAASC,KAAKzB,SAAS,GACvB,aACNqJ,EAASgC,aAAW,QAAS,CAACC,OAAQrL,MAR+C,2CAAxE,wDGzDSkJ,CAE3B+B,ICrBGK,GAAkB,qCAyCpB5L,GAAe,CACf6L,aAAa,G,mBC3CX7L,GAAe,G,oBCQR8L,GAAcC,aAAgB,CACvCC,YAAaC,KACbC,aAAc3L,KACd4L,QDT0B,WAAsD,IAArD3L,EAAoD,uDAA9BR,GACjD,OAAOQ,GCSPmI,UjBQwB,WAAyF,IAAxFnI,EAAuF,uDAA7DR,EAAcS,EAA+C,uCAChH,OAAQA,EAAOC,MACX,KAAKuE,EACD,OAAO,2BACAzE,GADP,IAEIP,MAAOyE,EAAoBlE,EAAMP,MAAOQ,EAAOK,QAAQ8E,OAAQ,KAAM,CAACsC,UAAU,MAGxF,KAAKhD,EACD,OAAO,2BACA1E,GADP,IAEIP,MAAOyE,EAAoBlE,EAAMP,MAAOQ,EAAOK,QAAQ8E,OAAQ,KAAM,CAACsC,UAAU,MAGxF,KAAK/C,EACD,OAAO,2BACA3E,GADP,IACcP,MAAM,YAAKQ,EAAOK,QAAQb,SAG5C,KAAKmF,EACD,OAAO,2BACA5E,GADP,IACciB,YAAahB,EAAOK,QAAQW,cAG9C,KAAK4D,EACD,OAAO,2BACA7E,GADP,IACcgF,gBAAiB/E,EAAOK,QAAQ+I,QAGlD,KAAKvE,EACD,OAAO,2BACA9E,GADP,IACciF,WAAYhF,EAAOK,QAAQ2E,aAG7C,KAAKF,EACD,OAAO,2BACA/E,GADP,IACckF,oBAAqBjF,EAAOK,QAAQ4E,oBAAf,sBACrBlF,EAAMkF,qBADe,CACMjF,EAAOK,QAAQkB,SAC9CxB,EAAMkF,oBAAoB2B,QAAO,SAAAlH,GAAE,OAAIA,IAAOM,EAAOK,QAAQkB,YAG3E,QACI,OAAOxB,IiBjDfkK,KNNuB,WAA8F,IAA7FlK,EAA4F,uDAAlER,GAAcS,EAAoD,uCACpH,OAAQA,EAAOC,MACX,KAAK0J,GACD,OAAO,2BACA5J,GADP,IAEIsB,KAAK,2BACEtB,EAAMsB,MADT,IAEAoB,MAAOzC,EAAOK,QAAQoC,MACtBD,MAAOxC,EAAOK,QAAQmC,MACtBjB,OAAQvB,EAAOK,QAAQkB,SAE3BmI,OAAQ1J,EAAOK,QAAQqJ,SAG/B,KAAK7E,GACD,OAAO,2BACA9E,GADP,IAEIiF,WAAYhF,EAAOK,QAAQ2E,aAEnC,KAAK4E,GACD,OAAO,2BACA7J,GADP,IAEI2J,OAAQ1J,EAAOK,QAAQqJ,SAE/B,QACI,OAAO3J,IMlBfuK,KAAMqB,KACNC,IFZsB,WAA6F,IAA5F7L,EAA2F,uDAAjER,GAAcS,EAAmD,uCAClH,OAAQA,EAAOC,MACX,KAAKkL,GACD,OAAO,2BACApL,GADP,IAEIqL,aAAa,IAGrB,QACI,OAAOrL,MEQR8L,GAAQC,aAAYT,GAAaU,aAAgBC,OCLtDC,GAAoBtD,IAAMuD,MAAK,kBAAM,iCACrCC,GAAmBxD,IAAMuD,MAAK,kBAAM,iCAEpCE,G,uKAEF,WACI1D,KAAKb,MAAMwE,kB,oBAGf,WACI,OAAK3D,KAAKb,MAAMuD,YAIZ,uBAAMtI,UAAWC,IAAEuJ,WAAnB,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,qBAAKxJ,UAAWC,IAAEwJ,iBAAlB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUpJ,GAAG,cACtC,cAAC,IAAD,CAAOmJ,KAAK,YAAYC,QAAS,cAACN,GAAD,IAAjC,SACI,cAAC,IAAD,CAAOK,KAAK,UAAUC,QAAS,cAACN,GAAD,QAGnC,cAAC,IAAD,CAAOK,KAAK,YAAYC,QAAS,cAACN,GAAD,IAAjC,SACI,cAAC,IAAD,CAAOK,KAAK,UAAUC,QAAS,cAACN,GAAD,QAGnC,cAAC,IAAD,CAAOK,KAAK,aAAaC,QAAS,cAACR,GAAD,IAAlC,SACI,cAAC,IAAD,CAAOO,KAAK,UAAUC,QAAS,cAACR,GAAD,QAGnC,cAAC,IAAD,CAAOO,KAAK,WAAWC,QAAS,cAAC5D,GAAD,MAChC,cAAC,IAAD,CAAO2D,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAElC,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC1B,GAAD,WAItC,cAAC,EAAD,OA/BG,cAAC,GAAD,Q,GARDpC,IAAMC,WAkDlB8D,GAAe3D,aAJG,SAAChJ,GAAD,MAA0B,CAC9CqL,YAAarL,EAAM6L,IAAIR,eAGmB,CAC1CiB,cH9CyB,kBAAoB,SAACpD,GAC9C,IAAI0D,EAAU1D,EAASa,MACvB8C,QAAQC,IAAI,CAACF,IACRxL,MAAK,WACF8H,EATD,CACHhJ,KAAMkL,WGiDOpC,CAElBqD,IAEUU,GAAU,WACnB,OACI,cAAC,IAAMC,SAAP,CAAgBC,SAAU,6CAA1B,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUnB,MAAOA,GAAjB,SACI,cAACa,GAAD,WC1EhBO,IAASC,OACG,cAAC,GAAD,IACRC,SAASC,eAAe,U,gMCH1BC,EAAc,SAAC,GAA6C,IAAD,IAA3CC,KAAOC,EAAoC,EAApCA,QAAS/C,EAA2B,EAA3BA,MAAQgD,EAAmB,EAAnBA,SAEpCC,EAAWF,GAAW/C,EACtBkD,EAAaD,EAAWhH,IAAO+D,MAAQ,GAE7C,OACI,sBAAK1H,UAAW2D,IAAOkH,YAAc,IAAMD,EAA3C,UACI,8BACKF,IAEL,8BACKC,GAAY,+BAAOjD,UAMvBoD,EAAW,SAAC/F,GAAgB,IAC9BgG,EAA6ChG,EAA7CgG,MAAgCC,GAAajG,EAAtCyF,KAAsCzF,EAAhCkG,MAAgClG,EAAzB4E,QADS,YACgB5E,EADhB,qCAEpC,OAAO,cAACwF,EAAD,2BAAiBxF,GAAjB,aAAwB,oDAAcgG,GAAWC,QAG/CnD,EAAQ,SAAC9C,GAAgB,IAC3BgG,EAA6ChG,EAA7CgG,MAAgCC,GAAajG,EAAtCyF,KAAsCzF,EAAhCkG,MAAgClG,EAAzB4E,QADM,YACmB5E,EADnB,qCAEjC,OAAO,cAACwF,EAAD,2BAAiBxF,GAAjB,aAAwB,iDAAWgG,GAAWC,QAG5CrD,EAAc,SAACuD,EAA4BvO,EAAcwO,EAAmBC,EAA0BrG,EAAyBsG,GACxI,OACI,gCACI,cAAC,IAAD,aACIH,YAAaA,EACbvO,KAAMA,EACNyO,UAAWA,EACXE,SAAUH,GACNpG,IANZ,IAOQsG,O,mBCvChB/O,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,gCCCrH,oEAAO,IAAMqL,EAAW,SAAC2D,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAuB,SAACF,GACpD,GAAIA,EAAMrD,OAASuD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCPlCnP,EAAOC,QAAU,CAAC,WAAa,wBAAwB,iBAAmB,gC,mBCA1ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,+RCGzDmP,EAAW,kCACXC,EAAe,sCACfC,EAAmB,0CACnBC,EAAa,oCACbC,EAAa,4CAIbrP,EAAe,CACjBsP,MAAO,CACH,CAAChP,QAAS,QAASiP,WAAY,GAAIpP,GAAI,GACvC,CAACG,QAAS,sBAAuBiP,WAAY,GAAIpP,GAAI,IAEzDqP,QAAS,KACThN,OAAQ,IAGCyJ,EAAiB,WAAyE,IAAxEzL,EAAuE,uDAA/DR,EAAcS,EAAiD,uCAElG,OAAQA,EAAOC,MACX,KAAKuO,EACD,IAAIQ,EAAoB,CACpBtP,IAAI,IAAIS,MAAOC,UACfP,QAASG,EAAOK,QAAQ4O,YACxBH,WAAY,IAEhB,OAAO,2BACA/O,GADP,IAEI8O,MAAM,GAAD,mBAAM9O,EAAM8O,OAAZ,CAAmBG,MAGhC,KAAKP,EACD,OAAO,2BACA1O,GADP,IAEI8O,MAAO9O,EAAM8O,MAAMjI,QAAO,SAAAsI,GAAC,OAAIA,EAAExP,KAAOM,EAAOK,QAAQ8O,YAG/D,KAAKT,EACD,OAAO,2BACA3O,GADP,IAEIgP,QAAS/O,EAAOK,QAAQ0O,UAGhC,KAAKJ,EACD,OAAO,2BACA5O,GADP,IAEIgC,OAAQ/B,EAAOK,QAAQ0B,SAG/B,KAAK6M,EACD,OAAO,2BACA7O,GADP,IAEIgP,QAAQ,2BAAKhP,EAAMgP,SAAZ,IAAqB3H,OAAQpH,EAAOK,QAAQ+G,WAG3D,QACI,OAAOrH,IAKNqP,EAAU,SAACH,GACpB,MAAO,CACHhP,KAAMuO,EACNnO,QAAS,CACL4O,iBA2BNI,EAAY,SAACtN,GACf,MAAO,CACH9B,KAAM0O,EACNtO,QAAS,CACL0B,YAiBCuN,EAAiB,SAAC/N,GAAD,8CAAoB,WAAO0H,GAAP,eAAAC,EAAA,sEACvBvH,IAAWC,WAAWL,GADC,OACxCH,EADwC,OAE9C6H,GAjCoB8F,EAiCI3N,EAASC,KAhC1B,CACHpB,KAAMyO,EACNrO,QAAS,CACL0O,cA2BsC,iCA/B3B,IAACA,IA+B0B,OAApB,uDAKjBQ,EAAgB,SAAChO,GAAD,8CAAoB,WAAO0H,GAAP,eAAAC,EAAA,sEACtBvH,IAAWE,UAAUN,GADC,OACvCH,EADuC,OAE7C6H,EAASoG,EAAUjO,EAASC,OAFiB,2CAApB,uDAKhBmO,EAAmB,SAACzN,GAAD,8CAAoB,WAAOkH,GAAP,SAAAC,EAAA,sEACzBvH,IAAWG,aAAaC,GADC,OAEf,IAFe,OAEnCV,KAAK0I,YACdd,EAASoG,EAAUtN,IAHyB,2CAApB,uDAOnBE,EAAY,SAACwN,GAAD,OAAgB,SAACxG,GACtCtH,IAAWM,UAAUwN,GAChBtO,MAAK,SAAAC,GA9BW,IAACgG,EA+BmB,IAA7BhG,EAASC,KAAK0I,YACdd,GAhCU7B,EAgCgBhG,EAASC,KAAKA,KAAK+F,OA/BlD,CACHnH,KAAM2O,EACNvO,QAAS,CACL+G,oB","file":"static/js/main.cd9b3079.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__zGsxM\",\"item\":\"Navbar_item__2xmeN\",\"activeLink\":\"Navbar_activeLink__y_Xhs\"};","const ADD_MESSAGE = \"SOCIAL_NETWORK/MESSAGES/ADD_MESSAGE\"\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            name: \"Oleg\",\r\n            id: 1,\r\n            img: \"https://avatars.mds.yandex.net/get-zen_doc/3986249/pub_607ecd1d13c71c1ca8a34192_607ee065330a4f14d551104b/scale_1200\"\r\n        },\r\n        {\r\n            name: \"Diana\",\r\n            id: 2,\r\n            img: \"https://avatars.mds.yandex.net/i?id=64b380ea3aa0d80cad94cb1a24a3b3f5-4233014-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n        {name: \"Fat cat\", id: 3, img: \"https://data.whicdn.com/images/310252363/original.jpg\"},\r\n        {\r\n            name: \"Dimka\",\r\n            id: 4,\r\n            img: \"https://i.pinimg.com/originals/b7/44/46/b744464dd3d970ad96745be8de69d755.jpg\"\r\n        },\r\n        {\r\n            name: \"Ella\",\r\n            id: 5,\r\n            img: \"https://st.depositphotos.com/1023162/5099/i/950/depositphotos_50991807-stock-photo-sexy-woman-in-fashion-sunglasses.jpg\"\r\n        },\r\n        {\r\n            name: \"Makar\",\r\n            id: 6,\r\n            img: \"https://avatars.mds.yandex.net/i?id=55d09aa1629f72a149098b2c3127e039-5222024-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n    ] as Array<UserType>,\r\n    messages: [\r\n        {message: \"Hi\", id: 1},\r\n        {message: \"Ho\", id: 2},\r\n        {message: \"He\", id: 3},\r\n        {message: \"Hu\", id: 4},\r\n        {message: \"Hio\", id: 5},\r\n        {message: \"Hia\", id: 6},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const messagesReducer = (state: initialStateType = initialState, action: ActionMessageTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.payload.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type addMessageCreatorType = ReturnType<typeof addMessageCreator>\r\nexport const addMessageCreator = (newMessageText: string) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        payload: {\r\n            newMessageText,\r\n        }\r\n    } as const\r\n}\r\n\r\n//Types ======================================\r\n\r\nexport type ActionMessageTypes = addMessageCreatorType\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    img: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2nTuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3ZQ1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__3SjCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__H41qZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__10Z1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1gO64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2b3PB\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f5a121b3-d5d2-4866-a73a-ab1418f0e4d8\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    savePhoto(photoFile: File) {\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n}\r\n\r\nexport const authApi = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n","import React from 'react';\r\nimport c from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/messages\">Message</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/friends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport c from \"./Footer.module.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n<div className={c.footer}>\r\n    Footer\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport c from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className={c.news}>\r\n            News\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport c from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div className={c.music}>\r\n            Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport c from \"./Friends.module.css\"\r\n\r\nconst Friends = () => {\r\n    return(\r\n        <div className={c.friends}>\r\n            Friends\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport c from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={c.settings}>\r\n            Settings\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;","\r\nexport const updateObjectInArray = (items: any[], itemId: string, objPropName: string, newObjProps: newObjPropsType) => {\r\n    return items\r\n        .map(m => {\r\n            if (m[objPropName] === itemId) {\r\n                return {...m, ...newObjProps}\r\n            }\r\n            return m\r\n        })\r\n}\r\ntype newObjPropsType = {\r\n    followed: boolean\r\n}","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../Api/api\";\r\nimport {ActionAllType} from \"./reduxStore\";\r\nimport {updateObjectInArray} from \"../utils/objectsHellper\";\r\n\r\nconst FOLLOW = \"SOCIAL_NETWORK/USERS/FOLLOW\"\r\nconst UNFOLLOW = \"SOCIAL_NETWORK/USERS/UNFOLLOW\"\r\nconst SET_USERS = \"SOCIAL_NETWORK/USERS/SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SOCIAL_NETWORK/USERS/SET-CURRENT-PAGE\"\r\nconst SET_TOTAL_USERS_COUNT = \"SOCIAL_NETWORK/USERS/SET-TOTAL-USERS-COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"SOCIAL_NETWORK/USERS/TOGGLE-IS-FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = \"SOCIAL_NETWORK/USERS/TOGGLE-IS-FOLLOWING-IN-PROGRESS\"\r\n\r\nconst initialState: initialStateType = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as string[],\r\n}\r\n\r\nexport const usersReducer = (state: initialStateType = initialState, action: ActionUsersTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userID, \"id\", {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userID, \"id\", {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state, users: [...action.payload.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.payload.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.payload.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.payload.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.payload.followingInProgress\r\n                    ? [...state.followingInProgress, action.payload.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.payload.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type followType = ReturnType<typeof followSuccess>\r\nexport const followSuccess = (userID: string) => {\r\n    return {\r\n        type: FOLLOW,\r\n        payload: {\r\n            userID,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type unFollowType = ReturnType<typeof unfollowSuccess>\r\nexport const unfollowSuccess = (userID: string) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        payload: {\r\n            userID,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        payload: {\r\n            users,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        payload: {\r\n            currentPage,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        payload: {\r\n            count: totalCount,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type setIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        payload: {\r\n            isFetching,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (followingInProgress: boolean, userId: string) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n        payload: {\r\n            followingInProgress,\r\n            userId,\r\n        }\r\n    } as const\r\n}\r\n\r\n//=======================thunk\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch<ActionAllType>) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n\r\n    const data = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispatch: any, userId: string, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: string) => async (dispatch: Dispatch<ActionAllType>) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unFollow = (userId: string) => async (dispatch: Dispatch<ActionAllType>) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\n\r\n//Types======================================================\r\n\r\nexport type ActionUsersTypes = followType\r\n    | unFollowType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setTotalUsersCountType\r\n    | setIsFetchingType\r\n    | toggleFollowingProgressType\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: string\r\n    uniqueUrlName: string\r\n    photos: { small: string, large: string }\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nexport type initialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\"\r\nimport cn from 'classnames'\r\n\r\ntype UsersPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}: UsersPropsType) => {\r\n\r\n    const pagesCount = (Math.ceil(totalItemsCount / pageSize))\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    return (\r\n        <div className={cn(styles.paginator)}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>\r\n                PREV\r\n            </button>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return (\r\n                        <span className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                              key={p}\r\n                              onClick={(e) => onPageChanged(p)}>\r\n                            {p}\r\n                        </span>\r\n                    )\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)\r\n            }>\r\n                NEXT\r\n            </button>}\r\n        </div>\r\n    )\r\n};\r\n","export default __webpack_public_path__ + \"static/media/user.00d92f05.png\";","import React from 'react';\r\nimport c from \"./Users.module.css\";\r\nimport userImage from \"../../../assets/images/user.png\";\r\nimport {UserType} from \"../../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    user: UserType\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    followingInProgress: Array<any>\r\n}\r\n\r\nexport const User = ({user,follow,unfollow,followingInProgress} : UsersPropsType) => {\r\n\r\n    return (<div>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + user.id}>\r\n                            <img src={user.photos.small !== null ? user.photos.small : userImage} className={c.userPhoto}\r\n                                 alt=\"photo\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                user.followed\r\n                                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n                                                  unfollow(user.id)\r\n                                              }}>Unfollow</button>\r\n                                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n                                                  follow(user.id)\r\n                                              }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"m.location.country\"}</div>\r\n                            <div>{\"m.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {UserType} from \"../../../redux/usersReducer\";\r\nimport {Paginator} from \"../../../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n\r\n    users: Array<UserType>\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    followingInProgress: Array<any>\r\n}\r\n\r\nexport const Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, ...props}: UsersPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n            {\r\n                props.users.map(u => <User\r\n                        key={u.id}\r\n                        user={u}\r\n                        follow={props.follow}\r\n                        unfollow={props.unfollow}\r\n                        followingInProgress={props.followingInProgress}\r\n                    />\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/preloader.1952935e.gif\";","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.gif\";\r\nimport c from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} className={c.preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n;","import {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\nimport {UserType} from \"./usersReducer\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users: UserType[]) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React, {ComponentType} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {\r\n    followSuccess,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    unfollowSuccess,\r\n    UserType\r\n} from \"../../../redux/usersReducer\";\r\nimport {Users} from './Users';\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../../redux/usersSelectors\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    followSuccess: (userID: string) => void\r\n    unfollowSuccess: (userID: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.followSuccess}\r\n                    unfollow={this.props.unfollowSuccess}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport let UsersContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        followSuccess,\r\n        unfollowSuccess,\r\n        setCurrentPage,\r\n        requestUsers,\r\n    })\r\n)(UsersAPIComponent)","export default __webpack_public_path__ + \"static/media/logo.cbfad428.png\";","import React from 'react';\r\nimport c from \"./Header.module.css\"\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n\r\n    return (\r\n        <header className={c.header}>\r\n            <img src={logo} alt='logo' title=\"image logo\"/>\r\n            <div className={c.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authApi} from \"../Api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ActionAllType, AppThunkType} from \"./reduxStore\";\r\n\r\nconst SET_USER_DATA = \"SOCIAL_NETWORK/AUTH/SET-USER-DATA\"\r\nconst TOGGLE_IS_FETCHING = 'SOCIAL_NETWORK/AUTH/TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_AUTH = 'SOCIAL_NETWORK/AUTH/TOGGLE-IS-AUTH'\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: ActionAuthReducerType): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA : {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    email: action.payload.email,\r\n                    login: action.payload.login,\r\n                    userId: action.payload.userId,\r\n                },\r\n                isAuth: action.payload.isAuth\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload.isFetching,\r\n            }\r\n        case TOGGLE_IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype setUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (userId: string, email: string, login: string, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {\r\n            userId,\r\n            email,\r\n            login,\r\n            isAuth\r\n        }\r\n    } as const\r\n}\r\n\r\ntype setToggleIsFetchingType = ReturnType<typeof setToggleIsFetching>\r\nexport const setToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        payload: {\r\n            isFetching,\r\n        }\r\n    } as const\r\n}\r\n\r\ntype setToggleIsAuthType = ReturnType<typeof setToggleIsAuth>\r\nexport const setToggleIsAuth = (isAuth: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_AUTH,\r\n        payload: {\r\n            isAuth,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserData = (): AppThunkType => async (dispatch: Dispatch<ActionAllType>) => {\r\n    const response = await authApi.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunkType => async (dispatch: any) => {\r\n    const response = await authApi.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0]\r\n            : \"Some error\"\r\n        dispatch(stopSubmit(\"Login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch<ActionAllType>) => {\r\n    const response = await authApi.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(\"\", \"\", \"\", false))\r\n    }\r\n}\r\n\r\n\r\n//Types========================================\r\n\r\nexport type initialStateType = {\r\n    data: dataType\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\n\r\ntype dataType = {\r\n    userId: string\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState = {\r\n    data: {} as dataType,\r\n    isFetching: true,\r\n    isAuth: false,\r\n}\r\n\r\nexport type ActionAuthReducerType = setUserDataType\r\n    | setToggleIsFetchingType\r\n    | setToggleIsAuthType","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype HeaderContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype mapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, HeaderContainerType> {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport const Login = ({isAuth, login, ...restProps}: LoginPropsType) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit,error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", [required], Input, {type: \"text\"}, \"\")}\r\n                {createField(\"Password\", \"password\", [required], Input, {type: \"password\"}, \"\")}\r\n                {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember me\")}\r\n            {\r\n                error &&\r\n                <div className={style.formSummaryError}>{error}</div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: \"Login\"})(LoginForm)\r\n\r\n\r\n//Types==============================================\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype LoginPropsType = {\r\n    isAuth?: boolean\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {Login} from \"./Login\";\r\n\r\nclass LoginAPIContainer extends React.Component<LoginContainerType, LoginContainerType> {\r\n\r\n    render() {\r\n        return (\r\n            <Login\r\n            isAuth={this.props.isAuth}\r\n            login={this.props.login}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const LoginContainer = connect(mapStateToProps, {\r\n    login\r\n})(LoginAPIContainer)\r\n\r\n\r\n//Types================================================================\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype LoginContainerType = mapStateToPropsType & mapDispatchToPropsType","import {getAuthUserData} from \"./authReducer\";\r\nimport {AppThunkType} from \"./reduxStore\";\r\n\r\nconst SET_INITIALIZED = \"SOCIAL_NETWORK/APP/SET-INITIALIZED\"\r\n\r\nexport const appReducer = (state: initialStateType = initialState, action: ActionAppReducerType): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED : {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype initializedSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: SET_INITIALIZED,\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = (): AppThunkType => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\n//Types======================================\r\n\r\n\r\nexport type ActionAppReducerType = initializedSuccessType\r\n\r\n\r\nexport type initialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}","import {sidebarType} from \"./store\";\r\n\r\nconst initialState = {}\r\n\r\nexport const sidebarReducer = (state: sidebarType  = initialState, action: any) => {\r\n    return state\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ActionProfileTypes, profileReducer} from \"./profileReducer\";\r\nimport {ActionMessageTypes, messagesReducer} from \"./messagesReducer\";\r\nimport {sidebarReducer} from \"./sidebarPageReducer\";\r\nimport {ActionUsersTypes, usersReducer} from \"./usersReducer\";\r\nimport {ActionAuthReducerType, authReducer} from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport {ActionAppReducerType, appReducer} from \"./AppReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type ActionAllType = ActionProfileTypes\r\n    | ActionMessageTypes\r\n    | ActionUsersTypes\r\n    | ActionAuthReducerType\r\n    | ActionAppReducerType\r\n\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, ActionAllType>","import React from 'react';\r\nimport c from './App.module.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport {BrowserRouter, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport News from \"./components/MainWindow/News/News\";\r\nimport Music from \"./components/MainWindow/Music/Music\";\r\nimport Friends from \"./components/MainWindow/Friends/Friends\";\r\nimport Settings from \"./components/MainWindow/Settings/Settings\";\r\nimport {UsersContainer} from \"./components/MainWindow/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {LoginContainer} from \"./components/Login/LoginContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/AppReducer\";\r\nimport {AppStateType, store} from \"./redux/reduxStore\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\n\r\nconst MessagesContainer = React.lazy(() => import('./components/MainWindow/Messages/MessagesContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/MainWindow/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component<AppContainerType, AppContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <main className={c.appContent}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={c.appContentWindow}>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Navigate to=\"profile\"/>}/>\r\n                        <Route path=\"/profile/\" element={<ProfileContainer/>}>\r\n                            <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/profile/\" element={<ProfileContainer/>}>\r\n                            <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/messages/\" element={<MessagesContainer/>}>\r\n                            <Route path=\":userId\" element={<MessagesContainer/>}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/users/*\" element={<UsersContainer/>}/>\r\n                        <Route path=\"/news/*\" element={<News/>}/>\r\n                        <Route path=\"/music/*\" element={<Music/>}/>\r\n                        <Route path=\"/settings/*\" element={<Settings/>}/>\r\n                        <Route path=\"/friends/*\" element={<Friends/>}/>\r\n\r\n                        <Route path=\"/login\" element={<LoginContainer/>}/>\r\n\r\n                    </Routes>\r\n                </div>\r\n                <Footer/>\r\n            </main>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = connect(mapStateToProps, {\r\n    initializeApp,\r\n})(App);\r\n\r\nexport const MainApp = () => {\r\n    return (\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <AppContainer/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\n\r\n//Types=====================================================================\r\n\r\ntype mapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype AppContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {MainApp} from './App';\r\n\r\n    ReactDOM.render(\r\n                <MainApp/>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport {Field, WrappedFieldProps} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}: any) => {\r\n\r\n    const hasError = touched && error\r\n    const styleError = hasError ? styles.error : \"\"\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + styleError}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: string | null, name: string, validators: any[], component: componentType, props: { type: string }, text: string) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                component={component}\r\n                validate={validators}\r\n                {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\ntype componentType = \"input\" | \"select\" | \"textarea\" | ComponentType<WrappedFieldProps> | undefined","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2cXxA\",\"error\":\"FormsControls_error__2-n7d\",\"formSummaryError\":\"FormsControls_formSummaryError__2_YSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3XowW\",\"pageNumber\":\"Paginator_pageNumber__3JwWW\",\"selectedPage\":\"Paginator_selectedPage__39HY2\"};","import React from 'react';\r\n\r\nexport const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContent\":\"App_appContent__2gPXN\",\"appContentWindow\":\"App_appContentWindow__1qq2V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1zGus\",\"loginBlock\":\"Header_loginBlock__2pgow\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../Api/api\";\r\nimport {ActionAllType} from \"./reduxStore\";\r\n\r\nconst ADD_POST = \"SOCIAL_NETWORK/PROFILE/ADD_POST\"\r\nconst DELETED_POST = \"SOCIAL_NETWORK/PROFILE/DELETED_POST\"\r\nconst SET_USER_PROFILE = \"SOCIAL_NETWORK/PROFILE/SET-USER-PROFILE\"\r\nconst SET_STATUS = \"SOCIAL_NETWORK/PROFILE/SET-STATUS\"\r\nconst SAVE_PHOTO = \"SOCIAL_NETWORK/PROFILE/SAVE_PHOTO_SUCCESS\"\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {message: \"Hello\", likesCount: 12, id: 1},\r\n        {message: \"Dinosaurs are great\", likesCount: 17, id: 2}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionProfileTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.payload.newPostText,\r\n                likesCount: 12\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case DELETED_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(f => f.id !== action.payload.postId),\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.payload.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.payload.photos} as ProfileType\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type addPostType = ReturnType<typeof addPost>\r\nexport const addPost = (newPostText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        payload: {\r\n            newPostText,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type deletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => {\r\n    return {\r\n        type: DELETED_POST,\r\n        payload: {\r\n            postId,\r\n        }\r\n    } as const\r\n}\r\n\r\n\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nconst setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        payload: {\r\n            profile,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type setProfileStatusType = ReturnType<typeof setStatus>\r\nconst setStatus = (status: string) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        payload: {\r\n            status,\r\n        }\r\n    } as const\r\n}\r\n\r\nexport type savePhotoSuccessType = ReturnType<typeof savePhotoSuccess>\r\nconst savePhotoSuccess = (photos: PhotosType) => {\r\n    return {\r\n        type: SAVE_PHOTO,\r\n        payload: {\r\n            photos,\r\n        },\r\n    } as const\r\n}\r\n\r\n\r\n// thunks=========================================================\r\nexport const getUserProfile = (userId: string) => async (dispatch: Dispatch<ActionAllType>) => {\r\n    const response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getUserStatus = (userId: string) => async (dispatch: Dispatch<ActionAllType>) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => async (dispatch: Dispatch<ActionAllType>) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File) => (dispatch: Dispatch<ActionAllType>) => {\r\n    profileAPI.savePhoto(file)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n            }\r\n        })\r\n}\r\n\r\n\r\n//Types=========================================================\r\nexport type ActionProfileTypes = addPostType\r\n    | setUserProfileType\r\n    | setProfileStatusType\r\n    | deletePostType\r\n    | savePhotoSuccessType\r\n\r\n\r\nexport type PostType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        website: string\r\n        vk: string\r\n        twitter: string\r\n        instagram: string\r\n        youtube: string\r\n        github: string\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: string\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotosType\r\n} | null\r\n\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}"],"sourceRoot":""}