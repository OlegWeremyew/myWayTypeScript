{"version":3,"sources":["components/MainWindow/News/News.module.scss","components/MainWindow/News/NewsItem/NewsItem.module.scss","components/MainWindow/News/NewsItem/NewsItem.tsx","components/MainWindow/News/News.tsx"],"names":["module","exports","NewsItem","news","dispatch","useDispatch","useState","titleEditMode","setTitleEditMode","textEditMode","setTextEditMode","titleChangeHandler","textChangeHandler","className","style","newsBlock__item","newsBlock__itemBlock","image","src","alt","main","main__title","onDoubleClick","type","autoFocus","value","title","onChange","e","newsID","id","currentTarget","NewsActions","changeNewsTitle","main__text","text","changeNewsText","button__group","form__btn","onClick","newsId","deleteNews","News","EMPTY_STRING","setTitle","error","setError","activateAddMode","setActivateAddMode","newsArray","useSelector","getNewsSelector","isFetching","getIsFetching","onChangeHandler","news__title","newsBlock","map","addNewsForm","ErrorBlock","placeholder","addNewsError","trim","addNews"],"mappings":"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","file":"static/js/10.65bc967b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__2R0N-\",\"news__title\":\"News_news__title__1t8Ld\",\"newsBlock\":\"News_newsBlock__3bc9i\",\"addNewsForm\":\"News_addNewsForm__vWH9C\",\"ErrorBlock\":\"News_ErrorBlock__1kRAT\",\"addNewsError\":\"News_addNewsError__3SB2V\",\"button__group\":\"News_button__group__2yDzl\",\"form__btn\":\"News_form__btn__12mT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsBlock__item\":\"NewsItem_newsBlock__item__17MHj\",\"newsBlock__itemBlock\":\"NewsItem_newsBlock__itemBlock__hlrjo\",\"image\":\"NewsItem_image__3mlwW\",\"main\":\"NewsItem_main__1kYXU\",\"main__title\":\"NewsItem_main__title__3jCAQ\",\"main__text\":\"NewsItem_main__text__sb-QF\",\"button__group\":\"NewsItem_button__group__3Dp4I\",\"form__btn\":\"NewsItem_form__btn__1LONx\"};","import React, {useState} from 'react';\r\nimport style from \"./NewsItem.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NewsActions, NewsType} from \"../../../../redux/NewsReducer\";\r\nimport {ReturnComponentType} from \"../../../../types/ReturnComponentType\";\r\n\r\nexport const NewsItem: React.FC<PropsType> = ({news}): ReturnComponentType => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [titleEditMode, setTitleEditMode] = useState<boolean>(false)\r\n    const [textEditMode, setTextEditMode] = useState<boolean>(false)\r\n\r\n    const titleChangeHandler = (): void => {\r\n        setTitleEditMode(!titleEditMode)\r\n        setTextEditMode(false)\r\n    }\r\n\r\n    const textChangeHandler = (): void => {\r\n        setTextEditMode(!textEditMode)\r\n        setTitleEditMode(false)\r\n    }\r\n\r\n    const deleteNewsHandler = (newsId: string): void => {\r\n        dispatch(NewsActions.deleteNews(newsId))\r\n    }\r\n\r\n    const changeTitle = (newsID: string, title: string): void => {\r\n        dispatch(NewsActions.changeNewsTitle(newsID, title))\r\n    }\r\n\r\n    const changeText = (newsID: string, text: string): void => {\r\n        dispatch(NewsActions.changeNewsText(newsID, text))\r\n    }\r\n\r\n    return (\r\n        <div className={style.newsBlock__item}>\r\n            <div className={style.newsBlock__itemBlock}>\r\n                <img className={style.image}\r\n                     src={news.image}\r\n                     alt=\"news\"\r\n                />\r\n            </div>\r\n            <div className={style.main}>\r\n\r\n                <div>\r\n                    <div\r\n                        className={style.main__title}\r\n                        onDoubleClick={titleChangeHandler}\r\n                    >\r\n                        {\r\n                            titleEditMode\r\n                                ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        autoFocus\r\n                                        value={news.title}\r\n                                        onChange={(e) => changeTitle(news.id, e.currentTarget.value)}\r\n                                    />\r\n                                ) : (\r\n                                    <span>{news.title}</span>\r\n                                )\r\n                        }\r\n                    </div>\r\n\r\n                    <div\r\n                        className={style.main__text}\r\n                        onDoubleClick={textChangeHandler}\r\n                    >\r\n                        {\r\n                            textEditMode\r\n                                ? <textarea\r\n                                    autoFocus\r\n                                    value={news.text}\r\n                                    onChange={(e) => changeText(news.id, e.currentTarget.value)}\r\n                                />\r\n                                : <span>{news.text}</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.button__group}>\r\n                    {\r\n                        titleEditMode\r\n                            ? (\r\n                                <div className={style.form__btn} onClick={titleChangeHandler}>\r\n                                    <button type=\"button\">Save</button>\r\n                                </div>\r\n                            ) : (\r\n                                <div className={style.form__btn} onClick={titleChangeHandler}>\r\n                                    <button type=\"button\">Edit title</button>\r\n                                </div>\r\n                            )\r\n                    }\r\n                    {\r\n                        textEditMode\r\n                            ? (\r\n                                <div className={style.form__btn} onClick={textChangeHandler}>\r\n                                    <button type=\"button\">Save</button>\r\n                                </div>\r\n                            ) : (\r\n                                <div className={style.form__btn} onClick={textChangeHandler}>\r\n                                    <button type=\"button\">Edit text</button>\r\n                                </div>\r\n                            )\r\n\r\n                    }\r\n                    <div className={style.form__btn} onClick={() => deleteNewsHandler(news.id)}>\r\n                        <button type=\"button\">Delete news</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PropsType = {\r\n    news: NewsType\r\n}\r\n","import React, {useState} from 'react';\r\nimport style from \"./News.module.scss\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {NewsItem} from \"./NewsItem/NewsItem\";\r\nimport {NewsActions, NewsType} from \"../../../redux/NewsReducer\";\r\nimport {EMPTY_STRING} from \"../../../constants\";\r\nimport {ReturnComponentType} from \"../../../types/ReturnComponentType\";\r\nimport {getIsFetching, getNewsSelector} from \"../../../selectors\";\r\nimport {Preloader} from \"../../../common\";\r\n\r\nconst News = (): ReturnComponentType => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [title, setTitle] = useState<string>(EMPTY_STRING)\r\n    const [error, setError] = useState<string>(EMPTY_STRING)\r\n    const [activateAddMode, setActivateAddMode] = useState<boolean>(false)\r\n\r\n    const newsArray: NewsType[] = useSelector(getNewsSelector)\r\n    const isFetching: boolean = useSelector(getIsFetching)\r\n\r\n    const activateAddModeHandler = (): void => {\r\n        setActivateAddMode(!activateAddMode)\r\n    }\r\n\r\n    const onChangeHandler = (title: string): void => {\r\n        setError(EMPTY_STRING)\r\n        setTitle(title)\r\n    }\r\n    const addNews = (): void => {\r\n        if (title.trim()) {\r\n            dispatch(NewsActions.addNews(title))\r\n            setError(EMPTY_STRING)\r\n            setTitle(EMPTY_STRING)\r\n        } else {\r\n            const error = \"Field is required\"\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n    const cancelHandler = (): void => {\r\n        setActivateAddMode(!activateAddMode)\r\n        setError(EMPTY_STRING)\r\n    }\r\n\r\n    return (\r\n        <section className={style.news}>\r\n            {isFetching ? <Preloader/> : null}\r\n            <h3 className={style.news__title}>News</h3>\r\n            <div className={style.newsBlock}>\r\n                {\r\n                    newsArray.map(news => {\r\n                        return (\r\n                            <NewsItem key={news.id} news={news}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            {\r\n                activateAddMode\r\n                    ? (\r\n                        <div className={style.addNewsForm}>\r\n                            {\r\n                                error\r\n                                    ? (\r\n                                        <div className={style.ErrorBlock}>\r\n                                            <textarea\r\n                                                onChange={(e) => onChangeHandler(e.currentTarget.value)}\r\n                                                value={title}\r\n                                                placeholder=\"write news title\"\r\n                                            />\r\n                                            <div className={style.addNewsError}>\r\n                                                {error}\r\n                                            </div>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <textarea\r\n                                            onChange={(e) => onChangeHandler(e.currentTarget.value)}\r\n                                            value={title}\r\n                                            placeholder=\"write news title\"\r\n                                        />\r\n                                    )\r\n                            }\r\n                            <div className={style.button__group}>\r\n                                <div className={style.form__btn} onClick={addNews}>\r\n                                    <button type=\"button\">Save</button>\r\n                                </div>\r\n                                <div className={style.form__btn} onClick={cancelHandler}>\r\n                                    <button type=\"button\">Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className={style.form__btn} onClick={activateAddModeHandler}>\r\n                            <button type=\"button\">Add new news</button>\r\n                        </div>\r\n                    )\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default News\r\n"],"sourceRoot":""}