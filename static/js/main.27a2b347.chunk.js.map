{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Footer/Footer.module.css","components/MainWindow/News/News.module.css","components/MainWindow/Music/Music.module.css","components/MainWindow/Friends/Friends.module.css","components/MainWindow/Settings/Settings.module.css","components/MainWindow/Messages/Message/Message.module.css","components/MainWindow/Messages/DialogItem/DialogsItem.module.css","common/Preloader/Preloader.module.css","components/MainWindow/Profile/Profile.module.css","Api/api.ts","redux/profileReducer.ts","redux/messagesReducer.ts","redux/sidebarPageReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/reduxStore.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/MainWindow/News/News.tsx","components/MainWindow/Music/Music.tsx","components/MainWindow/Friends/Friends.tsx","components/MainWindow/Settings/Settings.tsx","components/MainWindow/Messages/Message/Message.tsx","components/MainWindow/Messages/DialogItem/DialogsItem.tsx","common/FormsControls/FormsControls.tsx","utils/validators/validators.tsx","components/MainWindow/Messages/AddMessageForm/AddMessageForm.tsx","hoc/withAuthRedirect/withAuthRedirect.tsx","components/MainWindow/Messages/MessagesContainer.tsx","components/MainWindow/Messages/Messages.tsx","assets/images/user.png","components/MainWindow/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","components/MainWindow/Users/UsersContainer.tsx","assets/images/avatar_for_profile.jpg","components/MainWindow/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/MainWindow/Profile/ProfileInfo/ProfileInfo.tsx","components/MainWindow/Profile/MyPosts/Post/Post.tsx","components/MainWindow/Profile/MyPosts/MyPosts.tsx","components/MainWindow/Profile/MyPosts/MyPostsContainer.tsx","components/MainWindow/Profile/Profile.tsx","components/MainWindow/Profile/ProfileContaeiner.tsx","hoc/withRouter/withRouter.tsx","assets/images/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","App.tsx","index.tsx","common/FormsControls/FormsControls.module.css","components/MainWindow/Messages/Messages.module.css","components/MainWindow/Profile/ProfileInfo/ProfileInfo.module.css","App.module.css","components/MainWindow/Users/Users.module.css","components/MainWindow/Profile/MyPosts/MyPosts.module.css","components/MainWindow/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","profileAPI","userId","status","put","authApi","email","password","rememberMe","post","delete","initialState","posts","message","likesCount","id","profile","setStatus","type","users","name","img","messages","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","toggleIsFetching","toggleFollowingProgress","isAuth","setAuthUserData","login","payload","getAuthUserData","dispatch","resultCode","rootReducer","combineReducers","profilePage","state","action","newPost","Date","getTime","newPostText","messagesPage","newMessage","newMessageText","sidebar","usersPage","map","m","followed","count","filter","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","c","nav","item","navData","isActive","activeLink","to","active","Footer","footer","News","news","Music","music","Friends","friends","Settings","settings","Message","props","DialogsItem","path","dialog","src","FormControl","input","meta","child","element","hasError","touched","error","styleError","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","ReduxAddMessageForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","mapStateToProps","withAuthRedirect","WrappedComponent","connect","MessagesContainer","compose","addMessage","addMessageCreator","dialogsItem","u","dialogs","dialogItem","values","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","onPageChanged","photos","small","user","userPhoto","alt","disabled","some","unfollow","follow","Preloader","preloader","UsersAPIComponent","pageNumber","getUsers","this","unfollowSuccess","React","Component","UsersContainer","setCurrentPage","items","totalCount","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","e","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","avatarBlock","avatar","large","avatarDefault","Post","title","itemText","ReduxAddNewPostForm","MyPostsContainer","onAddPost","addPost","myPosts","AddNewPost","Profile","ProfileAPIContainer","authorizedUserID","getUserProfile","getUserStatus","ProfileContainer","params","useParams","location","useLocation","Header","header","logo","loginBlock","logout","HeaderContainer","Login","LoginReduxForm","formData","style","formSummuryError","LoginAPIContainer","LoginContainer","stopSubmit","_error","App","appContent","appContentWindow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27a2b347.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fdz2\",\"item\":\"Navbar_item__1onIf\",\"activeLink\":\"Navbar_activeLink__f94mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__mhg74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__37yFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__JnEwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2_1Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__Wu77x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1_lWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__26p68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3C5_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3rowZ\",\"ava\":\"Profile_ava__3qkus\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f5a121b3-d5d2-4866-a73a-ab1418f0e4d8\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n}\r\n\r\nexport const authApi = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../Api/api\";\r\nimport {ActionAllType} from \"./reduxStore\";\r\n\r\nexport type ActionProfileTypes = addPostType\r\n    | setUserProfileType\r\n    | setProfileStatusType\r\n\r\n\r\nexport type PostType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string,\r\n    \"contacts\": {\r\n        \"facebook\": string,\r\n        \"website\": string,\r\n        \"vk\": string,\r\n        \"twitter\": string,\r\n        \"instagram\": string,\r\n        \"youtube\": string,\r\n        \"github\": string,\r\n        \"mainLink\": string\r\n    },\r\n    \"lookingForAJob\": string,\r\n    \"lookingForAJobDescription\": string,\r\n    \"fullName\": string,\r\n    \"userId\": number,\r\n    \"photos\": {\r\n        \"small\": string,\r\n        \"large\": string\r\n    }\r\n} | null\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {message: \"Hello\", likesCount: 12, id: 1},\r\n        {message: \"Dinosaurs are great\", likesCount: 17, id: 2}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType,\r\n    status: \"\",\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: ActionProfileTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_POST\": {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 12\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case \"SET-STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport type addPostType = ReturnType<typeof addPost>\r\nexport const addPost = (newPostText: string) => {\r\n    return {\r\n        type: \"ADD_POST\",\r\n        newPostText,\r\n    } as const\r\n}\r\n\r\n\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nconst setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: \"SET-USER-PROFILE\",\r\n        profile,\r\n    } as const\r\n}\r\n\r\nexport type setProfileStatusType = ReturnType<typeof setStatus>\r\nconst setStatus = (status: string) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        status,\r\n    } as const\r\n}\r\n\r\n// thunks -----------------------------------------------\r\nexport const getUserProfile = (userId: string) => (dispatch: Dispatch<ActionAllType>) => {\r\n    profileAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n}\r\n\r\nexport const getUserStatus = (userId: string) => (dispatch: Dispatch<ActionAllType>) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data))\r\n        })\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => (dispatch: Dispatch<ActionAllType>) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\n","export type ActionMessageTypes = addMessageCreatorType\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    img: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            name: \"Oleg\",\r\n            id: 1,\r\n            img: \"https://avatars.mds.yandex.net/get-zen_doc/3986249/pub_607ecd1d13c71c1ca8a34192_607ee065330a4f14d551104b/scale_1200\"\r\n        },\r\n        {\r\n            name: \"Diana\",\r\n            id: 2,\r\n            img: \"https://avatars.mds.yandex.net/i?id=64b380ea3aa0d80cad94cb1a24a3b3f5-4233014-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n        {name: \"Fat cat\", id: 3, img: \"https://data.whicdn.com/images/310252363/original.jpg\"},\r\n        {\r\n            name: \"Dimka\",\r\n            id: 4,\r\n            img: \"https://i.pinimg.com/originals/b7/44/46/b744464dd3d970ad96745be8de69d755.jpg\"\r\n        },\r\n        {\r\n            name: \"Ella\",\r\n            id: 5,\r\n            img: \"https://st.depositphotos.com/1023162/5099/i/950/depositphotos_50991807-stock-photo-sexy-woman-in-fashion-sunglasses.jpg\"\r\n        },\r\n        {\r\n            name: \"Makar\",\r\n            id: 6,\r\n            img: \"https://avatars.mds.yandex.net/i?id=55d09aa1629f72a149098b2c3127e039-5222024-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n    ] as Array<UserType>,\r\n    messages: [\r\n        {message: \"Hi\", id: 1},\r\n        {message: \"Ho\", id: 2},\r\n        {message: \"He\", id: 3},\r\n        {message: \"Hu\", id: 4},\r\n        {message: \"Hio\", id: 5},\r\n        {message: \"Hia\", id: 6},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const messagesReducer = (state: initialStateType = initialState, action: ActionMessageTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\": {\r\n            let newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type addMessageCreatorType = ReturnType<typeof addMessageCreator>\r\nexport const addMessageCreator = (newMessageText: string) => {\r\n    return {\r\n        type: \"ADD_MESSAGE\",\r\n        newMessageText\r\n    } as const\r\n}\r\n\r\n","import {sidebarType} from \"./store\";\r\n\r\nconst initialState = {}\r\n\r\nexport const sidebarReducer = (state: sidebarType  = initialState, action: any) => {\r\n    return state\r\n}","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../Api/api\";\r\nimport {ActionAllType} from \"./reduxStore\";\r\n\r\nexport type ActionUsersTypes = followType\r\n    | unFollowType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setTotalUsersCountType\r\n    | setIsFetchingType\r\n    | toggleFollowingProgressType\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: string\r\n    uniqueUrlName: string\r\n    photos: { small: string, large: string }\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nexport type initialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as string[],\r\n}\r\n\r\nexport const usersReducer = (state: initialStateType = initialState, action: ActionUsersTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)\r\n            }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"TOGGLE-IS-FOLLOWING-IN-PROGRESS\": {\r\n            return {\r\n                ...state, followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type followType = ReturnType<typeof followSuccess>\r\nexport const followSuccess = (userID: string) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type unFollowType = ReturnType<typeof unfollowSuccess>\r\nexport const unfollowSuccess = (userID: string) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: \"SET-USERS\",\r\n        users,\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        currentPage,\r\n    } as const\r\n}\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: \"SET-TOTAL-USERS-COUNT\",\r\n        count: totalCount,\r\n    } as const\r\n}\r\n\r\nexport type setIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FETCHING\",\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\nexport type toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (followingInProgress: boolean, userId: string) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FOLLOWING-IN-PROGRESS\",\r\n        followingInProgress,\r\n        userId,\r\n    } as const\r\n}\r\n\r\n//=======================thunk\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return (dispatch: Dispatch<ActionAllType>) => {\r\n\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const follow = (userId: string) => {\r\n\r\n    return (dispatch: Dispatch<ActionAllType>) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: string) => {\r\n\r\n    return (dispatch: Dispatch<ActionAllType>) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n","import {authApi} from \"../Api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ActionAllType, AppThunkType} from \"./reduxStore\";\r\n\r\nexport type initialStateType = {\r\n    data: dataType\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\n\r\ntype dataType = {\r\n    userId: string\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState = {\r\n    data: {} as dataType,\r\n    isFetching: true,\r\n    isAuth: false,\r\n}\r\n\r\nexport type ActionAuthReducerType = setUserDataType\r\n    | setToggleIsFetchingType\r\n    | setToggleIsAuthType\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: ActionAuthReducerType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\" : {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    email: action.payload.email,\r\n                    login: action.payload.login,\r\n                    userId: action.payload.userId,\r\n                },\r\n                isAuth: action.payload.isAuth\r\n            }\r\n        }\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case 'TOGGLE-IS-AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype setUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (userId: string, email: string, login: string, isAuth: boolean) => {\r\n    return {\r\n        type: \"SET-USER-DATA\",\r\n        payload: {\r\n            userId,\r\n            email,\r\n            login,\r\n            isAuth\r\n        },\r\n    } as const\r\n}\r\n\r\ntype setToggleIsFetchingType = ReturnType<typeof setToggleIsFetching>\r\nexport const setToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching: isFetching\r\n    } as const\r\n}\r\n\r\ntype setToggleIsAuthType = ReturnType<typeof setToggleIsAuth>\r\nexport const setToggleIsAuth = (isAuth: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-AUTH',\r\n        isAuth: isAuth\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserData = (): AppThunkType => (dispatch: Dispatch<ActionAllType>) => {\r\n    authApi.getAuth()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n        })\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunkType => (dispatch: any) => {\r\n    authApi.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0\r\n                    ? response.data.messages[0]\r\n                    : \"Some error\"\r\n                dispatch(stopSubmit(\"Login\", {_error: message}))\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch: Dispatch<ActionAllType>) => {\r\n    authApi.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(\"\", \"\", \"\", false))\r\n            }\r\n        })\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ActionProfileTypes, profileReducer} from \"./profileReducer\";\r\nimport {ActionMessageTypes, messagesReducer} from \"./messagesReducer\";\r\nimport {sidebarReducer} from \"./sidebarPageReducer\";\r\nimport {ActionUsersTypes, usersReducer} from \"./usersReducer\";\r\nimport {ActionAuthReducerType, authReducer} from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type ActionAllType = ActionProfileTypes\r\n    | ActionMessageTypes\r\n    | ActionUsersTypes\r\n    | ActionAuthReducerType\r\n\r\n\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, ActionAllType>","import React from 'react';\r\nimport c from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/messages\">Message</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/friends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport c from \"./Footer.module.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n<div className={c.footer}>\r\n    Footer\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport c from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className={c.news}>\r\n            News\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport c from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div className={c.music}>\r\n            Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport c from \"./Friends.module.css\"\r\n\r\nconst Friends = () => {\r\n    return(\r\n        <div className={c.friends}>\r\n            Friends\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport c from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={c.settings}>\r\n            Settings\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport c from \"./Message.module.css\"\r\nimport {MessageType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst Message = (props: MessageType) => {\r\n\r\n    return (\r\n        <div className={c.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport c from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst DialogsItem = (props: UserType) => {\r\n\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={c.dialog}>\r\n            <div>\r\n                <img src={props.img}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, element, ...props}: any) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    const styleError = hasError ? styles.error : \"\"\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + styleError}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","import React from 'react';\r\n\r\nexport const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {FormMessagesType} from \"../Messages\";\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormMessagesType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"newMessageText\"}\r\n                    placeholder={\"Write your message\"}\r\n                    validate={[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ReduxAddMessageForm = reduxForm<FormMessagesType>({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(WrappedComponent: React.ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Navigate to={'/login'}/>\r\n        }\r\n        return <WrappedComponent {...restProps as T} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","import React, {ComponentType} from 'react';\r\nimport {addMessageCreator, initialStateType} from \"../../../redux/messagesReducer\";\r\nimport {Messages} from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    messagesPage: initialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) : MapStateToPropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessage: (newMessageText: string) => {\r\n            dispatch(addMessageCreator(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport let MessagesContainer = compose<ComponentType>(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Messages)\r\n","import React, {ChangeEvent} from 'react';\r\nimport c from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport {UsersPropsType} from \"./MessagesContainer\";\r\nimport {ReduxAddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport type FormMessagesType = {\r\n    newMessageText: string\r\n}\r\n\r\nexport const Messages = (props: UsersPropsType) => {\r\n\r\n    let dialogsItem = props.messagesPage.users\r\n        .map(u => <DialogsItem key={u.id} name={u.name} id={u.id} img={u.img}/>)\r\n    let message = props.messagesPage.messages\r\n        .map(m => <Message key={m.id} message={m.message} id={m.id}/>)\r\n\r\n    const addMessage = (values: FormMessagesType) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogItem}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {message}\r\n            </div>\r\n            <ReduxAddMessageForm onSubmit={addMessage}/>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/user.00d92f05.png\";","import React from 'react';\r\nimport c from \"./Users.module.css\";\r\nimport user from \"../../../assets/images/user.png\";\r\nimport {UserType} from \"../../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    toggleFollowingProgress: (followingInProgress: boolean, userId: number) => void\r\n    followingInProgress: Array<any>\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = (Math.ceil(props.totalUsersCount / props.pageSize)) / 200\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n\r\n                    return <span key={p} className={(props.currentPage) === p ? c.selectedPage : \"\"}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(m => <div key={m.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + m.id}>\r\n                            <img src={m.photos.small !== null ? m.photos.small : user} className={c.userPhoto}\r\n                                 alt=\"photo\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                m.followed\r\n                                    ? <button disabled={props.followingInProgress.some(id => id === m.id)}\r\n                                              onClick={() => {\r\n                                                  props.unfollow(m.id)\r\n                                              }}>Unfollow</button>\r\n                                    : <button disabled={props.followingInProgress.some(id => id === m.id)}\r\n                                              onClick={() => {\r\n                                                  props.follow(m.id)\r\n                                              }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{m.name}</div>\r\n                            <div>{m.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"m.location.country\"}</div>\r\n                            <div>{\"m.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.1952935e.gif\";","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.gif\";\r\nimport c from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} className={c.preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {ComponentType} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {\r\n    followSuccess,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess,\r\n    UserType\r\n} from \"../../../redux/usersReducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    followSuccess: (userID: string) => void\r\n    unfollowSuccess: (userID: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingProgress: (followingInProgress: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.followSuccess}\r\n                    unfollow={this.props.unfollowSuccess}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport let UsersContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        followSuccess,\r\n        unfollowSuccess,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsers,\r\n    }), withAuthRedirect)(UsersAPIComponent)","export default __webpack_public_path__ + \"static/media/avatar_for_profile.e4c1e159.jpg\";","import React, {ChangeEvent} from 'react';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\ntype stateType = {\r\n    editMode: boolean\r\n    status: string\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<ProfileStatusType> {\r\n\r\n    state: stateType = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ProfileStatusType, prevState: boolean) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                    status: this.props.status,\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>}\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus value={this.state.status}\r\n                        onBlur={this.deactivateEditMode}\r\n                    />\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport c from \"./ProfileInfo.module.css\"\r\nimport avatarDefault from '../../../../assets/images/avatar_for_profile.jpg'\r\nimport {ProfileType} from \"../../../../redux/profileReducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n{/*            <div className={c.ground}>\r\n                <img\r\n                    src=\"https://img.lovepik.com/photo/50066/7884.jpg_wh860.jpg\" alt=\"fon image\" title=\"fon image\"/>\r\n            </div>*/}\r\n            <div className={c.avatarBlock}>\r\n                <div className={c.avatar}>\r\n                    <img alt='ava'\r\n                         src={props.profile && props.profile.photos.large !== null ? props.profile.photos.large : avatarDefault}/>\r\n                </div>\r\n                <ProfileStatus\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../../redux/profileReducer\";\r\n\r\nconst Post = (props: PostType) => {\r\n\r\n    return (\r\n        <div key={props.id} className={c.item}>\r\n            <img\r\n                src=\"https://slovami.net/wp-content/uploads/thumbs_dir/the-most-beautiful-guys-russia-4-1-nwkkkydf2f1mhw9a4ijzfs2ktasvevyjiyi4xibqis.jpg\"\r\n                alt=\"ava\" title=\"ava\"/>\r\n            <div className={c.itemText}>\r\n                {props.message}\r\n                <div>\r\n                    <span>like: {props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport c from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {UsersPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\n\r\ntype AddNewPostFormType = {\r\n    AddNewPost: string\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nexport const MyPosts = (props: UsersPropsType) => {\r\n\r\n    let post = props.profilePage.posts.map(p => <Post key={p.id}\r\n                                                      message={p.message}\r\n                                                      likesCount={p.likesCount}\r\n                                                      id={p.id}/>)\r\n\r\n    let addPost = (values: AddNewPostFormType) => {\r\n        props.onAddPost(values.AddNewPost)\r\n    }\r\n\r\n    return (\r\n        <div className={c.myPosts}>\r\n            <h3>My posts</h3>\r\n            <ReduxAddNewPostForm onSubmit={addPost}/>\r\n            <div className={c.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<AddNewPostFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"AddNewPost\"}\r\n                    placeholder={\"Write your message\"}\r\n                    validate={[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddNewPostForm = reduxForm<AddNewPostFormType>({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n","import React from 'react';\r\nimport {addPost, initialStateType} from \"../../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: initialStateType\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    onAddPost: (newPostText: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: (newPostText: string) => {\r\n            dispatch(addPost(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n","import React from 'react';\r\nimport c from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {ComponentType} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserStatus,\r\n    getUserProfile,\r\n    ProfileType,\r\n    updateUserStatus\r\n} from \"../../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {compose} from \"redux\";\r\nimport {InjectedProps, withRouter2} from \"../../../hoc/withRouter/withRouter\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserID: string\r\n}\r\ntype MapDispatchToProps = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps & InjectedProps\r\n\r\nclass ProfileAPIContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId: string = this.props.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserID;\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateUserStatus={this.props.updateUserStatus}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.data.userId,\r\n    }\r\n}\r\n\r\nexport const ProfileContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n    }),\r\n    withRouter2,\r\n    withAuthRedirect\r\n)(ProfileAPIContainer);\r\n","import React from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\n\r\nexport type locationType = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    state: object | null\r\n}\r\n\r\nexport type WrappedComponentWithRouterPropsType = {\r\n    userId: string\r\n    location: locationType\r\n}\r\n\r\nexport const withRouter = (WrappedComponent: typeof React.Component) => (props: object) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props}\r\n            userId={params.userId}\r\n            location={location}\r\n        />\r\n    );\r\n}\r\n\r\nexport type InjectedProps = {\r\n    userId : string\r\n}\r\n\r\n\r\nexport const withRouter2 = <T  extends object> (WrappedComponent: React.ComponentType<T>) => (props: T) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props as T}\r\n            userId={params.userId}\r\n            location={location}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.cbfad428.png\";","import React from 'react';\r\nimport c from \"./Header.module.css\"\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n\r\n    return (\r\n        <header className={c.header}>\r\n            <img src={logo} alt='logo' title=\"image logo\"/>\r\n            <div className={c.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype HeaderContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getAuthUserData: () => void\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, HeaderContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer)\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype LoginPropsType = {\r\n    isAuth?: boolean\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nexport const Login = ({isAuth, login, ...restProps}: LoginPropsType) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={\"Email\"}\r\n                    name={\"email\"}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={\"Password\"}\r\n                    name={\"password\"}\r\n                    type={\"password\"}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    component={\"input\"}\r\n                    name={\"rememberMe\"}\r\n                    type=\"checkbox\"\r\n                /> Remember me\r\n            </div>\r\n            {\r\n                props.error &&\r\n                <div className={style.formSummuryError}>{props.error}</div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: \"Login\"})(LoginForm)\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {Login} from \"./Login\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype LoginContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass LoginAPIContainer extends React.Component<LoginContainerType, LoginContainerType> {\r\n\r\n    render() {\r\n        return (\r\n            <Login\r\n            isAuth={this.props.isAuth}\r\n            login={this.props.login}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const LoginContainer = connect(mapStateToProps, {\r\n    login\r\n})(LoginAPIContainer)","import React from 'react';\r\nimport c from './App.module.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport News from \"./components/MainWindow/News/News\";\r\nimport Music from \"./components/MainWindow/Music/Music\";\r\nimport Friends from \"./components/MainWindow/Friends/Friends\";\r\nimport Settings from \"./components/MainWindow/Settings/Settings\";\r\nimport {MessagesContainer} from \"./components/MainWindow/Messages/MessagesContainer\";\r\nimport {UsersContainer} from \"./components/MainWindow/Users/UsersContainer\";\r\nimport {ProfileContainer} from \"./components/MainWindow/Profile/ProfileContaeiner\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {LoginContainer} from \"./components/Login/LoginContainer\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <main className={c.appContent}>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={c.appContentWindow}>\r\n                <Routes>\r\n                    <Route path=\"/profile/\" element={<ProfileContainer/>}>\r\n                        <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                    </Route>\r\n\r\n                    <Route path=\"/messages/\" element={<MessagesContainer/>}>\r\n                        <Route path=\":userId\" element={<MessagesContainer/>}/>\r\n                    </Route>\r\n\r\n                    <Route path=\"/users/*\" element={<UsersContainer/>}/>\r\n                    <Route path=\"/news/*\" element={<News/>}/>\r\n                    <Route path=\"/music/*\" element={<Music/>}/>\r\n                    <Route path=\"/settings/*\" element={<Settings/>}/>\r\n                    <Route path=\"/friends/*\" element={<Friends/>}/>\r\n\r\n                    <Route path=\"/login\" element={<LoginContainer/>}/>\r\n\r\n                </Routes>\r\n            </div>\r\n            <Footer/>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {store} from \"./redux/reduxStore\";\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3bb8c\",\"error\":\"FormsControls_error__17NH9\",\"formSummuryError\":\"FormsControls_formSummuryError__7wSbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__2a5ir\",\"dialogItem\":\"Messages_dialogItem__1fljT\",\"dialog\":\"Messages_dialog__amYKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ground\":\"ProfileInfo_ground__tDaWn\",\"ava\":\"ProfileInfo_ava__9e5p9\",\"avatar\":\"ProfileInfo_avatar__WJ8zq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContent\":\"App_appContent__4mg9X\",\"appContentWindow\":\"App_appContentWindow__dnoS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__33a3z\",\"selectedPage\":\"Users_selectedPage__3noiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Dxws\",\"posts\":\"MyPosts_posts__1WTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3IYxb\",\"itemText\":\"Post_itemText__rOuHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3WLj3\",\"loginBlock\":\"Header_loginBlock__3D_es\"};"],"sourceRoot":""}