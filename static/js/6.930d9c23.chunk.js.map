{"version":3,"sources":["components/Login/Login.module.scss","components/MainWindow/UsersPage/Users/User/User.module.scss","components/MainWindow/UsersPage/Users/Users.module.scss","components/MainWindow/UsersPage/Users/UsersSearchForm/UsersSearchForm.module.scss","components/MainWindow/UsersPage/UsersPage.module.scss","components/MainWindow/UsersPage/Users/User/User.tsx","components/MainWindow/UsersPage/Users/UsersSearchForm/UsersSearchForm.tsx","components/MainWindow/UsersPage/Users/Users.tsx","components/MainWindow/UsersPage/UsersPage.tsx"],"names":["module","exports","User","user","followingInProgress","dispatch","useDispatch","className","style","userBlock","to","PATH","PROFILE","id","userPhoto","src","photos","small","userImage","alt","name","followed","user__btn","onClick","userID","unFollow","type","disabled","some","user__btn_unFollow","follow","userInfo","userName","user__text","userStatus","status","slice","usersSearchFormValidate","values","UsersSearchForm","React","memo","onFilterChanged","filter","useSelector","getUsersFilter","search","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","isSubmitting","searchForm","searchForm__block","searchForm__item__input","placeholder","searchForm__item__select","as","value","s","form__btn","Users","navigate","useNavigate","useSearchParams","searchParams","parsedPage","get","parsedTerm","parsedFriend","totalUsersCount","getTotalUsersCount","currentPage","getCurrentPage","pageSize","getPageSize","users","getUsers","getFollowingInProgress","useEffect","actualPage","actualFilter","Number","requestUsers","query","page","friends","navigatePath","searchResult","map","totalItemsCount","onPageChanged","pageNumber","UsersPage","isFetching","getIsFetching"],"mappings":"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","file":"static/js/6.930d9c23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"Login_login__block__2h76V\",\"login__title\":\"Login_login__title__3yyRU\",\"input__form\":\"Login_input__form__dPp6f\",\"checkbox__form\":\"Login_checkbox__form__3rk2n\",\"form__btn\":\"Login_form__btn__cQeTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__2Pgh_\",\"userPhoto\":\"User_userPhoto__2IJmc\",\"user__btn\":\"User_user__btn__3HSm4\",\"user__btn_unFollow\":\"User_user__btn_unFollow__3cxyA\",\"userInfo\":\"User_userInfo__iy0Za\",\"user__text\":\"User_user__text__BYHaG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3S8CH\",\"searchResult\":\"Users_searchResult__3MxiP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"UsersSearchForm_search__3PVi5\",\"searchForm\":\"UsersSearchForm_searchForm__3rPLN\",\"searchForm__block\":\"UsersSearchForm_searchForm__block__1dAsY\",\"searchForm__item__input\":\"UsersSearchForm_searchForm__item__input__Yg97o\",\"searchForm__item__select\":\"UsersSearchForm_searchForm__item__select__3soMl\",\"form__btn\":\"UsersSearchForm_form__btn__13vij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"UsersPage_page__2blhX\"};","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport userImage from '../../../../../assets/images/user.png';\nimport { PATH } from '../../../../../enums';\nimport { follow, unFollow } from '../../../../../redux/usersReducer';\nimport { UserType } from '../../../../../redux/usersReducer/types';\nimport { ReturnComponentType } from '../../../../../types/ReturnComponentType';\n\nimport style from './User.module.scss';\n\nexport const User: React.FC<UsersPropsType> = ({\n  user,\n  followingInProgress,\n}): ReturnComponentType => {\n  const dispatch = useDispatch();\n\n  const followHandler = (userID: string): void => {\n    dispatch(follow(userID));\n  };\n\n  const unfollowHandler = (userID: string): void => {\n    dispatch(unFollow(userID));\n  };\n\n  return (\n    <div className={style.userBlock}>\n      <div>\n        <div>\n          <NavLink to={`${PATH.PROFILE}/${user.id}`}>\n            <img\n              className={style.userPhoto}\n              src={user.photos.small !== null ? user.photos.small : userImage}\n              alt={`${user.name} photo`}\n            />\n          </NavLink>\n        </div>\n        {user.followed ? (\n          <div className={style.user__btn} onClick={() => unfollowHandler(user.id)}>\n            <button\n              type=\"button\"\n              disabled={followingInProgress.some(id => id === user.id)}\n            >\n              Unfollow\n            </button>\n          </div>\n        ) : (\n          <div\n            className={style.user__btn_unFollow}\n            onClick={() => followHandler(user.id)}\n          >\n            <button\n              type=\"button\"\n              disabled={followingInProgress.some(id => id === user.id)}\n            >\n              Follow\n            </button>\n          </div>\n        )}\n      </div>\n      <div>\n        <div className={style.userInfo}>\n          <NavLink to={`${PATH.PROFILE}/${user.id}`}>\n            <div className={style.userName}>\n              User name : <span className={style.user__text}>{user.name}</span>\n            </div>\n          </NavLink>\n          <div className={style.userStatus}>\n            User status :\n            <span className={style.user__text}>\n              {user.status ? user.status.slice(0, 50) : ' empty'}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// type\n\ntype UsersPropsType = {\n  user: UserType;\n  followingInProgress: string[];\n};\n","import React from 'react';\n\nimport { Form, Formik, Field } from 'formik';\nimport { useSelector } from 'react-redux';\n\nimport { FilterType } from '../../../../../redux/usersReducer/types';\nimport { getUsersFilter } from '../../../../../selectors';\nimport { ReturnComponentType } from '../../../../../types/ReturnComponentType';\nimport s from '../../../../Login/Login.module.scss';\n\nimport { FormType, FriendFormType, PropsType } from './types';\nimport style from './UsersSearchForm.module.scss';\n\nconst usersSearchFormValidate = (values: {\n  term: string;\n  friend: FriendFormType;\n}): object => {\n  const errors = {};\n  return errors;\n};\n\nexport const UsersSearchForm: React.FC<PropsType> = React.memo(\n  ({ onFilterChanged }): ReturnComponentType => {\n    const filter: FilterType = useSelector(getUsersFilter);\n\n    const submit = (\n      values: FormType,\n      { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void },\n    ): void => {\n      const filter: FilterType = {\n        term: values.term,\n        friend: values.friend === 'null' ? null : values.friend === 'true',\n      };\n      onFilterChanged(filter);\n      setSubmitting(false);\n    };\n\n    return (\n      <div className={style.search}>\n        <Formik\n          enableReinitialize\n          initialValues={{\n            term: filter.term,\n            friend: String(filter.friend) as FriendFormType,\n          }}\n          validate={usersSearchFormValidate}\n          onSubmit={submit}\n        >\n          {({ isSubmitting }) => (\n            <Form className={style.searchForm}>\n              <div className={style.searchForm__block}>\n                <Field\n                  className={style.searchForm__item__input}\n                  type=\"text\"\n                  name=\"term\"\n                  placeholder=\"Write user name 🔎\"\n                />\n                <Field\n                  className={style.searchForm__item__select}\n                  name=\"friend\"\n                  as=\"select\"\n                >\n                  <option value=\"null\">All</option>\n                  <option value=\"true\">Only followed</option>\n                  <option value=\"false\">Only unfollowed</option>\n                </Field>\n              </div>\n              <div className={s.form__btn}>\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Find users 🔎\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  },\n);\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { Paginator } from '../../../../common';\nimport { requestUsers } from '../../../../redux/usersReducer';\nimport { FilterType, UserType } from '../../../../redux/usersReducer/types';\nimport { ReturnComponentType } from '../../../../types/ReturnComponentType';\n\nimport { User } from './User';\nimport style from './Users.module.scss';\nimport { UsersSearchForm } from './UsersSearchForm';\n\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n  getUsersFilter,\n} from 'selectors/usersSelectors/usersSelectors';\n\nexport const Users = (): ReturnComponentType => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [searchParams] = useSearchParams();\n\n  const parsedPage = searchParams.get('page');\n  const parsedTerm = searchParams.get('term');\n  const parsedFriend = searchParams.get('friend');\n\n  const totalUsersCount: number = useSelector(getTotalUsersCount);\n  const currentPage: number = useSelector(getCurrentPage);\n  const pageSize: number = useSelector(getPageSize);\n  const filter: FilterType = useSelector(getUsersFilter);\n  const users: Array<UserType> = useSelector(getUsers);\n  const followingInProgress: Array<string> = useSelector(getFollowingInProgress);\n  const pageValue: number = 1;\n\n  const onPageChanged = (pageNumber: number): void => {\n    dispatch(requestUsers(pageNumber, pageSize, filter));\n  };\n\n  const onFilterChanged = (filter: FilterType): void => {\n    dispatch(requestUsers(pageValue, pageSize, filter));\n  };\n\n  useEffect(() => {\n    let actualPage = currentPage;\n    let actualFilter = filter;\n\n    if (parsedPage) actualPage = Number(parsedPage);\n    if (parsedTerm) actualFilter = { ...actualFilter, term: parsedTerm as string };\n\n    switch (parsedFriend) {\n      case 'null':\n        actualFilter = { ...actualFilter, friend: null };\n        break;\n      case 'true':\n        actualFilter = { ...actualFilter, friend: true };\n        break;\n      case 'false':\n        actualFilter = { ...actualFilter, friend: false };\n        break;\n    }\n\n    dispatch(requestUsers(actualPage, pageSize, actualFilter));\n  }, []);\n\n  useEffect(() => {\n    const query = {} as queryObjType;\n\n    if (parsedTerm) query.term = parsedTerm;\n    if (currentPage !== pageValue) query.page = String(currentPage);\n    if (parsedFriend !== null) query.friends = String(parsedFriend);\n\n    const navigatePath = `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`;\n    navigate(navigatePath);\n  }, [filter, currentPage]);\n\n  return (\n    <div className={style.users}>\n      <UsersSearchForm onFilterChanged={onFilterChanged} />\n      <div className={style.searchResult}>\n        {users.map(user => (\n          <div key={user.id}>\n            <User user={user} followingInProgress={followingInProgress} />\n          </div>\n        ))}\n      </div>\n      <Paginator\n        totalItemsCount={totalUsersCount}\n        pageSize={pageSize}\n        currentPage={currentPage}\n        onPageChanged={onPageChanged}\n      />\n    </div>\n  );\n};\n\n// types====\n\ntype queryObjType = {\n  term: string;\n  page: string;\n  friends: string;\n};\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { Preloader } from '../../../common';\nimport { getIsFetching } from '../../../selectors';\nimport { ReturnComponentType } from '../../../types/ReturnComponentType';\n\nimport { Users } from './Users';\nimport style from './UsersPage.module.scss';\n\nconst UsersPage = (): ReturnComponentType => {\n  const isFetching: boolean = useSelector(getIsFetching);\n\n  return (\n    <section className={style.page}>\n      {isFetching ? <Preloader /> : null}\n      <Users />\n    </section>\n  );\n};\n\nexport default UsersPage;\n"],"sourceRoot":""}