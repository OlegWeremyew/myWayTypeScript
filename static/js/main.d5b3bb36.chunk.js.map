{"version":3,"sources":["redux/authReducer.ts","Api/authApi.ts","Api/securityApi.ts","redux/AppReducer.ts","redux/sidebarPageReducer.ts","redux/reduxStore.ts","components/MainWindow/News/News.tsx","components/MainWindow/Music/Music.tsx","components/MainWindow/Friends/Friends.tsx","components/MainWindow/Settings/Settings.tsx","assets/images/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/PageNotFound/PageNotFound.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx","App.module.css","components/Header/Header.module.css","assets/images/preloader.gif","common/Preloader/Preloader.tsx","redux/profileReducer.ts","Api/profileAPI.ts","Api/api.ts","redux/messagesReducer.ts","redux/usersReducer.ts","utils/objectsHellper.ts","Api/usersAPI.ts","components/Navbar/Navbar.module.css","components/MainWindow/News/News.module.css","components/MainWindow/Music/Music.module.css","components/MainWindow/Friends/Friends.module.css","components/MainWindow/Settings/Settings.module.css","common/Preloader/Preloader.module.css","components/Footer/Footer.module.css"],"names":["AuthReducerEnum","authApi","instance","get","then","res","data","email","password","rememberMe","captcha","post","delete","securityApi","initialState","isFetching","isAuth","userID","login","captchaUrl","authReducer","state","action","type","SET_USER_DATA","payload","userId","GET_CAPTCHA_URL_SUCCESS","AuthActions","getAuthUserData","dispatch","a","MyData","resultCode","ResultCodesEnum","Success","id","loginData","Error","getCaptchaUrl","message","messages","length","stopSubmit","_error","captchaData","url","logout","UserReducerEnum","initialAppState","initialized","AppAction","SET_INITIALIZED","rootReducer","combineReducers","profilePage","profileReducer","messagesPage","messagesReducer","sidebar","usersPage","usersReducer","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","News","className","style","news","Music","music","Friends","friends","Settings","settings","Header","props","c","header","src","logo","alt","title","loginBlock","onClick","to","HeaderContainer","this","React","Component","connect","PageNotFound","Navbar","nav","item","navData","isActive","activeLink","active","Footer","footer","MessagesContainer","lazy","ProfileContainer","UsersContainer","LoginContainer","App","initializeApp","appContent","appContentWindow","path","element","Preloader","AppContainer","promise","Promise","all","MainApp","Suspense","fallback","ReactDOM","render","document","getElementById","module","exports","preloader","ProfileReducerEnum","profileAPI","status","put","photoFile","formData","FormData","append","headers","profile","posts","likesCount","ADD_POST","newPost","Date","getTime","newPostText","DELETED_POST","filter","f","postId","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO","photos","ProfileActions","addPost","deletePost","setUserProfile","setStatus","savePhotoSuccess","getUserProfile","getProfileData","getUserStatus","getStatusData","updateUserStatus","console","log","savePhoto","file","response","saveProfile","getState","saveProfileData","reject","axios","create","withCredentials","baseURL","users","name","img","ADD_MESSAGE","newMessage","newMessageText","MessageActions","addMessage","updateObjectInArray","items","itemId","objPropName","newObjProps","map","m","usersAPI","getUsers","currentPage","pageSize","follow","unfollow","totalUsersCount","followingInProgress","FOLLOW","followed","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","count","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","UserActions","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","toggleFollowingProgress","requestUsers","page","getUsersData"],"mappings":"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","file":"static/js/main.d5b3bb36.chunk.js","sourcesContent":["import {ResultCodesEnum} from \"../Api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {authApi} from \"../Api/authApi\";\r\nimport {securityApi} from \"../Api/securityApi\";\r\n\r\nexport enum AuthReducerEnum {\r\n    SET_USER_DATA = \"SOCIAL_NETWORK/AUTH/SET-USER-DATA\",\r\n    GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\",\r\n}\r\n\r\nconst initialState = {\r\n    data: {} as dataType,\r\n    isFetching: true,\r\n    isAuth: false,\r\n    userID: null as (string | null),\r\n    email: null as (string | null),\r\n    login: null as (string | null),\r\n    captchaUrl: null as (string | null),\r\n}\r\n\r\nexport const authReducer = (state: initialAuthStateType = initialState, action: ActionAuthReducerType): initialAuthStateType => {\r\n    switch (action.type) {\r\n        case AuthReducerEnum.SET_USER_DATA : {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    email: action.payload.email,\r\n                    login: action.payload.login,\r\n                    userId: action.payload.userId,\r\n                },\r\n                userID: action.payload.userId,\r\n                isAuth: action.payload.isAuth,\r\n            }\r\n        }\r\n        case AuthReducerEnum.GET_CAPTCHA_URL_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst AuthActions = {\r\n    setAuthUserData: (userId: string | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n        return {type: AuthReducerEnum.SET_USER_DATA, payload: {userId, email, login, isAuth}} as const\r\n    },\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => {\r\n        return {type: AuthReducerEnum.GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}} as const\r\n    },\r\n}\r\n\r\n//Thunk\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    const MyData = await authApi.getAuth()\r\n    if (MyData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, email, login} = MyData.data\r\n        dispatch(AuthActions.setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch: any) => {\r\n    const loginData = await authApi.login(email, password, rememberMe, captcha)\r\n    if (loginData.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (loginData.resultCode === ResultCodesEnum.Error) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = loginData.messages.length > 0\r\n            ? loginData.messages[0]\r\n            : \"Some error\"\r\n        dispatch(stopSubmit(\"Login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const captchaData = await securityApi.getCaptchaUrl()\r\n    const captchaUrl = captchaData.url\r\n    dispatch(AuthActions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch: Dispatch<ActionAuthReducerType>) => {\r\n    const logoutData = await authApi.logout()\r\n    if (logoutData.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(AuthActions.setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\n//Types========================================\r\ntype ThunkType = BaseThunkType<ActionAuthReducerType | FormAction>\r\n\r\nexport type initialAuthStateType = typeof initialState\r\n\r\nexport type ActionAuthReducerType = InferActionTypes<typeof AuthActions>\r\n\r\ntype dataType = {\r\n    userId: string | null\r\n    email: string | null\r\n    login: string | null\r\n}","import {instance, APIResponseType} from \"./api\";\r\n\r\nexport const authApi = {\r\n    getAuth() {\r\n        return instance.get<APIResponseType<MeResponseType>>(`auth/me`)\r\n            .then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete<APIResponseType>(`auth/login`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\n//types===\r\n\r\ntype MeResponseType = {\r\n    id: string\r\n    email: string\r\n    login: string\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n","import {instance} from \"./api\";\r\n\r\nexport const securityApi = {\r\n    getCaptchaUrl() {\r\n        return instance.get<captchaType>(`security/get-captcha-url`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\n//types\r\n\r\ntype captchaType = {\r\n    url: string\r\n}","import {getAuthUserData} from \"./authReducer\";\r\nimport {InferActionTypes} from \"./reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialAppState = {\r\n    initialized: false\r\n}\r\n\r\nexport enum UserReducerEnum {\r\n    SET_INITIALIZED = \"SOCIAL_NETWORK/APP/SET-INITIALIZED\",\r\n}\r\n\r\nexport const appReducer = (state: initialStateAppType = initialAppState, action: ActionAppReducerType): initialStateAppType => {\r\n    switch (action.type) {\r\n        case UserReducerEnum.SET_INITIALIZED : {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst AppAction = {\r\n    initializedSuccess : () => {return {type: UserReducerEnum.SET_INITIALIZED} as const}\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: Dispatch<any>) => {\r\n    const promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(AppAction.initializedSuccess())\r\n        })\r\n}\r\n\r\n//Types======================================\r\nexport type ActionAppReducerType = InferActionTypes<typeof AppAction>\r\n\r\nexport type initialStateAppType = typeof initialAppState","const initialState = {}\r\n\r\nexport const sidebarReducer = (state: initialStateSidebarType  = initialState, action: ActionSidebarType): initialStateSidebarType => {\r\n    return state\r\n}\r\n\r\n//Types===============\r\n\r\nexport type initialStateSidebarType = typeof initialState\r\n\r\nexport type ActionSidebarType = any","import {Action, applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {messagesReducer} from \"./messagesReducer\";\r\nimport {sidebarReducer} from \"./sidebarPageReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport {appReducer} from \"./AppReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\n\r\nexport type InferActionTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport type BaseThunkType<A extends Action, RT = Promise<void>> = ThunkAction<RT, AppStateType, unknown, A>\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport style from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={style.news}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport style from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={style.music}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport style from \"./Friends.module.css\"\r\n\r\nconst Friends = () => {\r\n    return (\r\n        <div className={style.friends}>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from 'react';\r\nimport style from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={style.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","export default __webpack_public_path__ + \"static/media/logo.cbfad428.png\";","import React from 'react';\r\nimport c from \"./Header.module.css\"\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n\r\n    return (\r\n        <header className={c.header}>\r\n            <img src={logo} alt='logo' title=\"image logo\"/>\r\n            <div className={c.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n//types==========\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login,\r\n})\r\n\r\nexport default connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n    logout\r\n})(HeaderContainer)\r\n\r\n//types====================\r\ntype HeaderContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <h1>404. Page not found</h1>\r\n    )\r\n}\r\n\r\nexport default PageNotFound","import React from 'react';\r\nimport c from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/messages\">Message</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/friends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport style from \"./Footer.module.css\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={style.footer}>\r\n            Footer\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport style from './App.module.css';\r\nimport {BrowserRouter, Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {AppStateType, store} from \"./redux/reduxStore\";\r\n\r\nimport News from \"./components/MainWindow/News/News\";\r\nimport Music from \"./components/MainWindow/Music/Music\";\r\nimport Friends from \"./components/MainWindow/Friends/Friends\";\r\nimport Settings from \"./components/MainWindow/Settings/Settings\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {initializeApp} from \"./redux/AppReducer\";\r\nimport {Preloader} from \"./common/Preloader/Preloader\";\r\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nconst MessagesContainer = React.lazy(() => import('./components/MainWindow/Messages/MessagesContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/MainWindow/Profile/ProfileContainer'))\r\nconst UsersContainer = React.lazy(() => import('./components/MainWindow/Users/UsersContainer'))\r\nconst LoginContainer = React.lazy(() => import('./components/Login/LoginContainer'))\r\n\r\nclass App extends React.Component<AppContainerType, AppContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <main className={style.appContent}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={style.appContentWindow}>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Navigate to=\"profile\"/>}/>\r\n                        <Route path=\"/profile/\" element={<ProfileContainer/>}>\r\n                            <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/messages/\" element={<MessagesContainer/>}>\r\n                            <Route path=\":userId\" element={<MessagesContainer/>}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/users/*\" element={<UsersContainer/>}/>\r\n                        <Route path=\"/news/*\" element={<News/>}/>\r\n                        <Route path=\"/music/*\" element={<Music/>}/>\r\n                        <Route path=\"/settings/*\" element={<Settings/>}/>\r\n                        <Route path=\"/friends/*\" element={<Friends/>}/>\r\n                        <Route path=\"/login\" element={<LoginContainer/>}/>\r\n                        <Route path=\"*\" element={<PageNotFound/>}/>\r\n                    </Routes>\r\n                </div>\r\n                <Footer/>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n    initializeApp,\r\n})(App)\r\n\r\nexport const MainApp = () => {\r\n    return (\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <AppContainer/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.Suspense>\r\n    )\r\n}\r\n\r\n\r\n//Types=====================================================================\r\n\r\ntype mapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype AppContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {MainApp} from './App';\r\n\r\nReactDOM.render(\r\n    <MainApp/>,\r\n    document.getElementById('root')\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContent\":\"App_appContent__4mg9X\",\"appContentWindow\":\"App_appContentWindow__dnoS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3WLj3\",\"loginBlock\":\"Header_loginBlock__3D_es\"};","export default __webpack_public_path__ + \"static/media/preloader.1952935e.gif\";","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.gif\";\r\nimport style from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} className={style.preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {ResultCodesEnum} from \"../Api/api\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {profileAPI} from \"../Api/profileAPI\";\r\n\r\nexport enum ProfileReducerEnum {\r\n    ADD_POST = \"SOCIAL_NETWORK/PROFILE/ADD_POST\",\r\n    DELETED_POST = \"SOCIAL_NETWORK/PROFILE/DELETED_POST\",\r\n    SET_USER_PROFILE = \"SOCIAL_NETWORK/PROFILE/SET-USER-PROFILE\",\r\n    SET_STATUS = \"SOCIAL_NETWORK/PROFILE/SET-STATUS\",\r\n    SAVE_PHOTO = \"SOCIAL_NETWORK/PROFILE/SAVE_PHOTO_SUCCESS\",\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {message: \"Hello\", likesCount: 12, id: 1},\r\n        {message: \"Dinosaurs are great\", likesCount: 17, id: 2}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action: ActionProfileTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ProfileReducerEnum.ADD_POST: {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.payload.newPostText,\r\n                likesCount: 12\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case ProfileReducerEnum.DELETED_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(f => f.id !== action.payload.postId),\r\n            }\r\n        }\r\n        case ProfileReducerEnum.SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.payload.profile\r\n            }\r\n        }\r\n        case ProfileReducerEnum.SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        }\r\n        case ProfileReducerEnum.SAVE_PHOTO: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.payload.photos} as ProfileType\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const ProfileActions = {\r\n    addPost: (newPostText: string) => {\r\n        return {type: ProfileReducerEnum.ADD_POST, payload: {newPostText}} as const\r\n    },\r\n    deletePost: (postId: number) => {\r\n        return {type: ProfileReducerEnum.DELETED_POST, payload: {postId}} as const\r\n    },\r\n    setUserProfile: (profile: ProfileType) => {\r\n        return {type: ProfileReducerEnum.SET_USER_PROFILE, payload: {profile}} as const\r\n    },\r\n    setStatus: (status: string) => {\r\n        return {type: ProfileReducerEnum.SET_STATUS, payload: {status}} as const\r\n    },\r\n    savePhotoSuccess: (photos: PhotosType) => {\r\n        return {type: ProfileReducerEnum.SAVE_PHOTO, payload: {photos}} as const\r\n    },\r\n}\r\n\r\n// thunks=========================================================\r\nexport const getUserProfile = (userId: string): ThunkType => async (dispatch) => {\r\n    const getProfileData = await profileAPI.getProfile(userId)\r\n    dispatch(ProfileActions.setUserProfile(getProfileData))\r\n}\r\n\r\nexport const getUserStatus = (userId: string): ThunkType => async (dispatch) => {\r\n    const getStatusData = await profileAPI.getStatus(userId)\r\n    dispatch(ProfileActions.setStatus(getStatusData))\r\n}\r\n\r\nexport const updateUserStatus = (status: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        const updateStatusData = await profileAPI.updateStatus(status)\r\n        if (updateStatusData.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(ProfileActions.setStatus(status))\r\n        } else {\r\n            console.log('resultCode < 0')\r\n        }\r\n    } catch (error) {\r\n        console.log('error')\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File) => (dispatch: Dispatch<ActionProfileTypes>) => {\r\n    profileAPI.savePhoto(file)\r\n        .then(response => {\r\n            if (response.resultCode === ResultCodesEnum.Success) {\r\n                dispatch(ProfileActions.savePhotoSuccess(response.data.photos))\r\n            }\r\n        })\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch: Dispatch<any>, getState: any) => {\r\n    const userId = getState().auth.userID\r\n    const saveProfileData = await profileAPI.saveProfile(profile)\r\n\r\n    if (saveProfileData.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: saveProfileData.messages[0]}))\r\n        return Promise.reject(saveProfileData.messages[0])\r\n    }\r\n}\r\n\r\n//Types=========================================================\r\ntype ThunkType = BaseThunkType<ActionProfileTypes | ReturnType<typeof stopSubmit>>\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport type ActionProfileTypes = InferActionTypes<typeof ProfileActions>\r\n\r\nexport type PostType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotosType\r\n} | null\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}","import {PhotosType, ProfileType} from \"../redux/profileReducer\";\r\nimport {instance, APIResponseType} from \"./api\";\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status})\r\n            .then(res => res.data)\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data)\r\n    },\r\n}\r\n\r\n//types\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}","import axios from \"axios\";\r\nimport {UserType} from \"../redux/usersReducer\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f5a121b3-d5d2-4866-a73a-ab1418f0e4d8\",\r\n    },\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1,\r\n    CaptchaIsRequired = 10,\r\n}\r\n\r\n//types==========================\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    resultCode: RC\r\n    messages: string[]\r\n}\r\n\r\nexport type GetItemType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}","import {InferActionTypes} from \"./reduxStore\";\r\n\r\nexport enum UserReducerEnum {\r\n    ADD_MESSAGE = \"SOCIAL_NETWORK/MESSAGES/ADD_MESSAGE\"\r\n}\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            name: \"Oleg\",\r\n            id: 1,\r\n            img: \"https://avatars.mds.yandex.net/get-zen_doc/3986249/pub_607ecd1d13c71c1ca8a34192_607ee065330a4f14d551104b/scale_1200\"\r\n        },\r\n        {\r\n            name: \"Diana\",\r\n            id: 2,\r\n            img: \"https://avatars.mds.yandex.net/i?id=64b380ea3aa0d80cad94cb1a24a3b3f5-4233014-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n        {name: \"Fat cat\", id: 3, img: \"https://data.whicdn.com/images/310252363/original.jpg\"},\r\n        {\r\n            name: \"Dmitriy\",\r\n            id: 4,\r\n            img: \"https://i.pinimg.com/originals/b7/44/46/b744464dd3d970ad96745be8de69d755.jpg\"\r\n        },\r\n        {\r\n            name: \"Ella\",\r\n            id: 5,\r\n            img: \"https://st.depositphotos.com/1023162/5099/i/950/depositphotos_50991807-stock-photo-sexy-woman-in-fashion-sunglasses.jpg\"\r\n        },\r\n        {\r\n            name: \"Marat\",\r\n            id: 6,\r\n            img: \"https://avatars.mds.yandex.net/i?id=55d09aa1629f72a149098b2c3127e039-5222024-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n    ] as Array<UserType>,\r\n    messages: [\r\n        {message: \"Hi\", id: 1},\r\n        {message: \"Ho\", id: 2},\r\n        {message: \"He\", id: 3},\r\n        {message: \"Hu\", id: 4},\r\n        {message: \"Hio\", id: 5},\r\n        {message: \"Hia\", id: 6},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const messagesReducer = (state: initialStateType = initialState, action: ActionMessageTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case UserReducerEnum.ADD_MESSAGE: {\r\n            let newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.payload.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const MessageActions = {\r\n    addMessage : (newMessageText: string) => {\r\n        return {type: UserReducerEnum.ADD_MESSAGE, payload: {newMessageText,}} as const\r\n    }\r\n}\r\n\r\n//Types ======================================\r\nexport type ActionMessageTypes = InferActionTypes<typeof MessageActions>\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    img: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}","import {APIResponseType, ResultCodesEnum} from \"../Api/api\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {updateObjectInArray} from \"../utils/objectsHellper\";\r\nimport {usersAPI} from \"../Api/usersAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport enum UserReducerEnum {\r\n    FOLLOW = \"SOCIAL_NETWORK/USERS/FOLLOW\",\r\n    UNFOLLOW = \"SOCIAL_NETWORK/USERS/UNFOLLOW\",\r\n    SET_USERS = \"SOCIAL_NETWORK/USERS/SET_USERS\",\r\n    SET_CURRENT_PAGE = \"SOCIAL_NETWORK/USERS/SET-CURRENT-PAGE\",\r\n    SET_TOTAL_USERS_COUNT = \"SOCIAL_NETWORK/USERS/SET-TOTAL-USERS-COUNT\",\r\n    TOGGLE_IS_FETCHING = \"SOCIAL_NETWORK/USERS/TOGGLE-IS-FETCHING\",\r\n    TOGGLE_IS_FOLLOWING_IN_PROGRESS = \"SOCIAL_NETWORK/USERS/TOGGLE-IS-FOLLOWING-IN-PROGRESS\",\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as string[],\r\n}\r\n\r\nexport const usersReducer = (state: initialStateType = initialState, action: ActionUsersTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case UserReducerEnum.FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userID, \"id\", {followed: true})\r\n            }\r\n        }\r\n        case UserReducerEnum.UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userID, \"id\", {followed: false})\r\n            }\r\n        }\r\n        case UserReducerEnum.SET_USERS: {\r\n            return {\r\n                ...state, users: [...action.payload.users]\r\n            }\r\n        }\r\n        case UserReducerEnum.SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state, currentPage: action.payload.currentPage\r\n            }\r\n        }\r\n        case UserReducerEnum.SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state, totalUsersCount: action.payload.count\r\n            }\r\n        }\r\n        case UserReducerEnum.TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state, isFetching: action.payload.isFetching\r\n            }\r\n        }\r\n        case UserReducerEnum.TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.payload.followingInProgress\r\n                    ? [...state.followingInProgress, action.payload.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.payload.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const UserActions = {\r\n    followSuccess: (userID: string) => {\r\n        return {\r\n            type: UserReducerEnum.FOLLOW,\r\n            payload: {\r\n                userID,\r\n            }\r\n        } as const\r\n    },\r\n    unfollowSuccess: (userID: string) => {\r\n        return {\r\n            type: UserReducerEnum.UNFOLLOW,\r\n            payload: {\r\n                userID,\r\n            }\r\n        } as const\r\n    },\r\n    setUsers: (users: Array<UserType>) => {\r\n        return {\r\n            type: UserReducerEnum.SET_USERS,\r\n            payload: {\r\n                users,\r\n            }\r\n        } as const\r\n    },\r\n    setCurrentPage: (currentPage: number) => {\r\n        return {\r\n            type: UserReducerEnum.SET_CURRENT_PAGE,\r\n            payload: {\r\n                currentPage,\r\n            }\r\n        } as const\r\n    },\r\n    setTotalUsersCount: (totalCount: number) => {\r\n        return {\r\n            type: UserReducerEnum.SET_TOTAL_USERS_COUNT,\r\n            payload: {\r\n                count: totalCount,\r\n            }\r\n        } as const\r\n    },\r\n    toggleIsFetching: (isFetching: boolean) => {\r\n        return {\r\n            type: UserReducerEnum.TOGGLE_IS_FETCHING,\r\n            payload: {\r\n                isFetching,\r\n            }\r\n        } as const\r\n    },\r\n    toggleFollowingProgress: (followingInProgress: boolean, userId: string) => {\r\n        return {\r\n            type: UserReducerEnum.TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n            payload: {\r\n                followingInProgress,\r\n                userId,\r\n            }\r\n        } as const\r\n    },\r\n}\r\n\r\n//=======================thunk\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => async (dispatch) => {\r\n    dispatch(UserActions.toggleIsFetching(true))\r\n    dispatch(UserActions.setCurrentPage(page))\r\n\r\n    const getUsersData = await usersAPI.getUsers(page, pageSize)\r\n\r\n    dispatch(UserActions.toggleIsFetching(false))\r\n    dispatch(UserActions.setUsers(getUsersData.items))\r\n    dispatch(UserActions.setTotalUsersCount(getUsersData.totalCount))\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispatch: Dispatch<ActionUsersTypes>, userId: string, apiMethod: (userId: string)=> Promise<APIResponseType>, actionCreator: (userId: string) => ActionUsersTypes) => {\r\n    dispatch(UserActions.toggleFollowingProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n\r\n    if (response.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(UserActions.toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: string): ThunkType => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), UserActions.followSuccess)\r\n}\r\n\r\nexport const unFollow = (userId: string): ThunkType => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), UserActions.unfollowSuccess)\r\n}\r\n\r\n//Types======================================================\r\ntype ThunkType = BaseThunkType<ActionUsersTypes>\r\n\r\nexport type initialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\nexport type ActionUsersTypes = InferActionTypes<typeof UserActions>\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: string\r\n    uniqueUrlName: string\r\n    photos: { small: string | null, large: string | null }\r\n    status: string\r\n    followed: boolean\r\n}\r\n","export const updateObjectInArray = (items: any[], itemId: string, objPropName: string, newObjProps: newObjPropsType) => {\r\n    return items\r\n        .map(m => {\r\n            if (m[objPropName] === itemId) {\r\n                return {...m, ...newObjProps}\r\n            }\r\n            return m\r\n        })\r\n}\r\n\r\ntype newObjPropsType = {\r\n    followed: boolean\r\n}","import {GetItemType, instance, APIResponseType} from \"./api\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get<GetItemType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data)\r\n    },\r\n    follow(userId: string) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n    unfollow(userId: string) {\r\n        return instance.delete<APIResponseType>(`follow/${userId}`)\r\n            .then(res => res.data)\r\n    },\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fdz2\",\"item\":\"Navbar_item__1onIf\",\"activeLink\":\"Navbar_activeLink__f94mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__37yFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__JnEwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2_1Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__Wu77x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3C5_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__mhg74\"};"],"sourceRoot":""}