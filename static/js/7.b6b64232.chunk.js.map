{"version":3,"sources":["components/MainWindow/DialogsContainer/Dialogs/AddMessageForm/AddMessageForm.module.scss","components/MainWindow/DialogsContainer/Dialogs/Dialog/Dialog.module.scss","components/MainWindow/DialogsContainer/Dialogs/DialogItem/DialogsItem.module.scss","components/MainWindow/DialogsContainer/Dialogs/Dialogs.module.scss","components/MainWindow/DialogsContainer/Dialogs/AddMessageForm/AddMessageForm.tsx","components/MainWindow/DialogsContainer/Dialogs/Dialog/Dialog.tsx","components/MainWindow/DialogsContainer/Dialogs/DialogItem/DialogsItem.tsx","components/MainWindow/DialogsContainer/DialogsContainer.tsx","components/MainWindow/DialogsContainer/Dialogs/Dialogs.tsx"],"names":["module","exports","maxLength","maxLengthCreator","ReduxAddMessageForm","reduxForm","form","handleSubmit","reset","className","style","addMessage","onSubmit","values","Field","component","Textarea","name","placeholder","validate","required","form__btn","type","Dialog","message","id","dispatch","useDispatch","message__item","onClick","MessageActions","deleteMessage","deletePostHandler","delete__btn","DialogsItem","img","dialog","src","alt","dialog__name","DialogsContainer","compose","connect","state","messagesPage","getMessagesPageSelector","withAuthRedirect","dialogsItem","users","map","user","messages","dialogs","dialogs__dialog","dialogItem","newMessageText"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,UAAY,kCAAkC,UAAY,oC,oBCA5HD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,cAAgB,8BAA8B,YAAc,8B,oBCAhHD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,aAAe,oC,oBCAtED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAkB,iCAAiC,WAAa,4BAA4B,SAAW,4B,6ICUtJC,EAAYC,YAAiB,IA4BtBC,EAAsBC,YAA4B,CAC7DC,KAAM,wBAD2BD,EA1BmC,SAAC,GAG3C,IAF1BE,EAEyB,EAFzBA,aACAC,EACyB,EADzBA,MAOA,OACE,uBAAMC,UAAWC,IAAMC,WAAYC,SANpB,SAACC,GAChBN,EAAaM,GACbL,KAIA,UACE,8BACE,cAACM,EAAA,EAAD,CACEC,UAAWC,IACXC,KAAK,iBACLC,YAAY,4BACZC,SAAU,CAACC,IAAUlB,OAGzB,qBAAKO,UAAWC,IAAMW,UAAtB,SACE,wBAAQC,KAAK,SAAb,iC,kBCvBKC,EAAgC,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,GACjDC,EAAWC,cAMjB,OACE,sBAAKlB,UAAWC,IAAMc,QAAtB,UACE,qBAAKf,UAAWC,IAAMkB,cAAtB,SAAsCJ,IACtC,qBAAKK,QAAS,kBAPQ,SAACJ,GACzBC,EAASI,IAAeC,cAAcN,IAMhBO,CAAkBP,IAAKhB,UAAWC,IAAMuB,YAA5D,wB,kBCbOC,EAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKlB,EAAR,EAAQA,KAAR,OAC7C,sBAAKR,UAAWC,IAAM0B,OAAtB,UACE,8BACE,qBAAKC,IAAKF,EAAKG,IAAI,mBAErB,qBAAK7B,UAAWC,IAAM6B,aAAtB,SAAqCtB,Q,kBCKnCuB,EAAmBC,YACvBC,aALsB,SAACC,GAAD,MAA+C,CACrEC,aAAcC,YAAwBF,MAMpC,CACEhC,WAAYmB,IAAenB,aAG/BmC,IAPuBL,ECNyB,SAAC,GAGvB,IAF1BG,EAEyB,EAFzBA,aACAjC,EACyB,EADzBA,WAEMoC,EAAcH,EAAaI,MAAMC,KAAI,SAAAC,GAAI,OAC7C,cAAC,EAAD,CAA2BjC,KAAMiC,EAAKjC,KAAMQ,GAAIyB,EAAKzB,GAAIU,IAAKe,EAAKf,KAAjDe,EAAKzB,OAGnBD,EAAUoB,EAAaO,SAASF,KAAI,SAAAzB,GAAO,OAC/C,cAAC,EAAD,CAAyBA,QAASA,EAAQA,QAASC,GAAID,EAAQC,IAAlDD,EAAQC,OAOvB,OACE,0BAAShB,UAAWC,IAAM0C,QAA1B,UACE,sBAAK3C,UAAWC,IAAM2C,gBAAtB,UACE,qBAAK5C,UAAWC,IAAM4C,WAAtB,SAAmCP,IACnC,qBAAKtC,UAAWC,IAAMyC,SAAtB,SAAiC3B,OAEnC,cAACpB,EAAD,CAAqBQ,SAVH,SAACC,GACrBF,EAAWE,EAAO0C,yBDGPf","file":"static/js/7.b6b64232.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessage\":\"AddMessageForm_addMessage__Jk99u\",\"textField\":\"AddMessageForm_textField__2qgnD\",\"form__btn\":\"AddMessageForm_form__btn__kn9zT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Dialog_message__2K7sb\",\"message__item\":\"Dialog_message__item___XUEr\",\"delete__btn\":\"Dialog_delete__btn__3gWDn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__xBqvr\",\"dialog__name\":\"DialogsItem_dialog__name__17Ft7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3gXj6\",\"dialogs__dialog\":\"Dialogs_dialogs__dialog__2Ykfx\",\"dialogItem\":\"Dialogs_dialogItem__9uiOW\",\"messages\":\"Dialogs_messages__2D_f1\"};","import React, { SyntheticEvent } from 'react';\n\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { Textarea } from '../../../../../common';\nimport { ReturnComponentType } from '../../../../../types/ReturnComponentType';\nimport { maxLengthCreator, required } from '../../../../../utils';\nimport { FormMessagesType } from '../types';\n\nimport style from './AddMessageForm.module.scss';\n\nconst maxLength = maxLengthCreator(30);\n\nconst AddMessageForm: React.FC<InjectedFormProps<FormMessagesType>> = ({\n  handleSubmit,\n  reset,\n}): ReturnComponentType => {\n  const onSubmit = (values: SyntheticEvent<any, Event>): void => {\n    handleSubmit(values);\n    reset();\n  };\n\n  return (\n    <form className={style.addMessage} onSubmit={onSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          name=\"newMessageText\"\n          placeholder=\"Write your message ✉\"\n          validate={[required, maxLength]}\n        />\n      </div>\n      <div className={style.form__btn}>\n        <button type=\"submit\">Add message</button>\n      </div>\n    </form>\n  );\n};\n\nexport const ReduxAddMessageForm = reduxForm<FormMessagesType>({\n  form: 'dialogAddMessageForm',\n})(AddMessageForm);\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { MessageActions } from '../../../../../redux/messagesReducer';\nimport { MessageType } from '../../../../../redux/messagesReducer/types';\nimport { ReturnComponentType } from '../../../../../types/ReturnComponentType';\n\nimport style from './Dialog.module.scss';\n\nexport const Dialog: React.FC<MessageType> = ({ message, id }): ReturnComponentType => {\n  const dispatch = useDispatch();\n\n  const deletePostHandler = (id: number): void => {\n    dispatch(MessageActions.deleteMessage(id));\n  };\n\n  return (\n    <div className={style.message}>\n      <div className={style.message__item}>{message}</div>\n      <div onClick={() => deletePostHandler(id)} className={style.delete__btn}>\n        ❌\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { UserType } from '../../../../../redux/messagesReducer/types';\nimport { ReturnComponentType } from '../../../../../types/ReturnComponentType';\n\nimport style from './DialogsItem.module.scss';\n\nexport const DialogsItem: React.FC<UserType> = ({ img, name }): ReturnComponentType => (\n  <div className={style.dialog}>\n    <div>\n      <img src={img} alt=\"dialogs item\" />\n    </div>\n    <div className={style.dialog__name}>{name}</div>\n  </div>\n);\n","import { ComponentType } from 'react';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { MessageActions } from '../../../redux/messagesReducer';\nimport { AppStateType } from '../../../redux/types';\nimport { getMessagesPageSelector } from '../../../selectors';\nimport { withAuthRedirect } from '../../../utils';\n\nimport { Dialogs } from './Dialogs';\nimport { MapDispatchToPropsType, MapStateToPropsType } from './types';\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n  messagesPage: getMessagesPageSelector(state),\n});\n\nconst DialogsContainer = compose<ComponentType>(\n  connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStateType>(\n    mapStateToProps,\n    {\n      addMessage: MessageActions.addMessage,\n    },\n  ),\n  withAuthRedirect,\n)(Dialogs);\n\nexport default DialogsContainer;\n","import React from 'react';\n\nimport { ReturnComponentType } from '../../../../types/ReturnComponentType';\nimport { DialogPropsType } from '../types';\n\nimport { ReduxAddMessageForm } from './AddMessageForm';\nimport { Dialog } from './Dialog';\nimport { DialogsItem } from './DialogItem';\nimport style from './Dialogs.module.scss';\nimport { FormMessagesType } from './types';\n\nexport const Dialogs: React.FC<DialogPropsType> = ({\n  messagesPage,\n  addMessage,\n}): ReturnComponentType => {\n  const dialogsItem = messagesPage.users.map(user => (\n    <DialogsItem key={user.id} name={user.name} id={user.id} img={user.img} />\n  ));\n\n  const message = messagesPage.messages.map(message => (\n    <Dialog key={message.id} message={message.message} id={message.id} />\n  ));\n\n  const addNewMessage = (values: FormMessagesType): void => {\n    addMessage(values.newMessageText);\n  };\n\n  return (\n    <section className={style.dialogs}>\n      <div className={style.dialogs__dialog}>\n        <div className={style.dialogItem}>{dialogsItem}</div>\n        <div className={style.messages}>{message}</div>\n      </div>\n      <ReduxAddMessageForm onSubmit={addNewMessage} />\n    </section>\n  );\n};\n"],"sourceRoot":""}