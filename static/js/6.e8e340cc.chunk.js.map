{"version":3,"sources":["components/Login/Login.module.css","components/MainWindow/Users/User/User.module.css","components/MainWindow/Users/Users.module.css","common/Paginator/Paginator.module.css","components/MainWindow/Users/UsersSearchForm/UsersSearchForm.module.css","common/Paginator/Paginator.tsx","components/MainWindow/Users/User/User.tsx","redux/usersSelectors.ts","components/MainWindow/Users/UsersSearchForm/UsersSearchForm.tsx","components/MainWindow/Users/Users.tsx","components/MainWindow/Users/UsersPage.tsx"],"names":["module","exports","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useEffect","className","cn","styles","paginator","style","user__btn","onClick","filter","page","map","selectedPage","pageNumber","User","user","followingInProgress","dispatch","useDispatch","userBlock","to","PATH","PROFILE","id","src","photos","small","userImage","userPhoto","alt","title","name","followed","disabled","some","userID","unFollow","follow","userInfo","userName","user__text","userStatus","status","slice","getUsers","createSelector","state","usersPage","users","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","usersSearchFormValidate","values","UsersSearchForm","React","memo","onFilterChanged","useSelector","search","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","isSubmitting","searchForm","searchForm__block","searchForm__item__input","type","placeholder","searchForm__item__select","as","value","s","form__btn","Users","navigate","useNavigate","useSearchParams","searchParams","parsedPage","get","parsedTerm","parsedFriend","actualPage","actualFilter","Number","requestUsers","query","friends","searchResult","UsersPage","Preloader"],"mappings":"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","file":"static/js/6.e8e340cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"Login_login__block__3Z2Z2\",\"login__title\":\"Login_login__title__r9PbQ\",\"input__form\":\"Login_input__form__3jRkt\",\"checkbox__form\":\"Login_checkbox__form__2CVW5\",\"form__btn\":\"Login_form__btn__22JJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__2sjWQ\",\"userBlock\":\"User_userBlock__36S8q\",\"user__btn\":\"User_user__btn__1etat\",\"userInfo\":\"User_userInfo__krqka\",\"user__text\":\"User_user__text__28Av2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__xCHdX\",\"searchResult\":\"Users_searchResult__3QvNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__PwQWk\",\"pageNumber\":\"Paginator_pageNumber__1k8yn\",\"selectedPage\":\"Paginator_selectedPage__3QcoJ\",\"user__btn\":\"Paginator_user__btn__1rLFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"UsersSearchForm_search__14qgv\",\"searchForm\":\"UsersSearchForm_searchForm__3CETL\",\"searchForm__block\":\"UsersSearchForm_searchForm__block__RUP-Z\",\"searchForm__item__input\":\"UsersSearchForm_searchForm__item__input__1apqa\",\"searchForm__item__select\":\"UsersSearchForm_searchForm__item__select__1Pq4c\",\"form__btn\":\"UsersSearchForm_form__btn__1LJlB\"};","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\"\r\nimport style from \"../../components/MainWindow/Users/User/User.module.css\";\r\nimport cn from 'classnames'\r\n\r\nexport const Paginator: React.FC<UsersPropsType> = ({\r\n                                                        totalItemsCount,\r\n                                                        pageSize,\r\n                                                        currentPage,\r\n                                                        onPageChanged,\r\n                                                        portionSize = 10\r\n                                                    }) => {\r\n\r\n    const pagesCount = (Math.ceil(totalItemsCount / pageSize))\r\n    const pages: number[] = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    return (\r\n        <div className={cn(styles.paginator)}>\r\n            <div>\r\n                {\r\n                    portionNumber > 1\r\n                    && <div className={style.user__btn}>\r\n                        <button onClick={() => setPortionNumber(portionNumber - 1)}>\r\n                            PREV\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    pages\r\n                        .filter(page => (page >= leftPortionPageNumber) && (page <= rightPortionPageNumber))\r\n                        .map(page => {\r\n                            return (\r\n                                <span className={cn({[styles.selectedPage]: currentPage === page}, styles.pageNumber)}\r\n                                      key={page}\r\n                                      onClick={() => onPageChanged(page)}>\r\n                            {page}\r\n                        </span>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    portionCount > portionNumber\r\n                    && <div className={style.user__btn}>\r\n                        <button onClick={() => setPortionNumber(portionNumber + 1)}>\r\n                            NEXT\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// types=========\r\n\r\ntype UsersPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n","import React from 'react';\r\nimport style from \"./User.module.css\";\r\nimport userImage from \"../../../../assets/images/user.png\";\r\nimport {follow, unFollow, UserType} from \"../../../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {PATH} from \"../../../../common/RouterPath/RouterPath\";\r\n\r\nexport const User: React.FC<UsersPropsType> = ({user, followingInProgress}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const followHandler = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    const unfollowHandler = (userID: string) => {\r\n        dispatch(unFollow(userID))\r\n    }\r\n\r\n    return (\r\n        <div className={style.userBlock}>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={`${PATH.PROFILE}${user.id}`}>\r\n                        <img\r\n                            src={user.photos.small !== null ? user.photos.small : userImage}\r\n                            className={style.userPhoto}\r\n                            alt=\"photo\"\r\n                            title={user.name}\r\n                        />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={style.user__btn}>\r\n                    {\r\n                        user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => unfollowHandler(user.id)}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => followHandler(user.id)}>Follow</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className={style.userInfo}>\r\n                    <div className={style.userName}>User name : <span className={style.user__text}>{user.name}</span>\r\n                    </div>\r\n                    <div className={style.userStatus}>User status :\r\n                        <span className={style.user__text}>\r\n                                {\r\n                                    user.status\r\n                                        ? user.status.slice(0, 50)\r\n                                        : \" empty\"\r\n                                }\r\n                                </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//type\r\n\r\ntype UsersPropsType = {\r\n    user: UserType\r\n    followingInProgress: string[]\r\n}","import {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\nimport {UserType} from \"./usersReducer\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users: UserType[]) => {\r\n    return users.filter(user => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}","import React from \"react\";\r\nimport {Form, Formik, Field} from \"formik\";\r\nimport style from './UsersSearchForm.module.css'\r\n\r\nimport {FilterType} from \"../../../../redux/usersReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\nimport {getUsersFilter} from \"../../../../redux/usersSelectors\";\r\nimport s from \"../../../Login/Login.module.css\";\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo(({onFilterChanged}) => {\r\n\r\n    const filter = useSelector<AppStateType, FilterType>(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <div className={style.search}>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {\r\n                    ({isSubmitting}) => (\r\n                        <Form className={style.searchForm}>\r\n                            <div className={style.searchForm__block}>\r\n                                <Field\r\n                                    className={style.searchForm__item__input}\r\n                                    type=\"text\"\r\n                                    name=\"term\"\r\n                                    placeholder=\"write user name\"\r\n                                />\r\n                                <Field className={style.searchForm__item__select} name=\"friend\" as=\"select\">\r\n                                    <option value=\"null\">All</option>\r\n                                    <option value=\"true\">Only followed</option>\r\n                                    <option value=\"false\">Only unfollowed</option>\r\n                                </Field>\r\n                            </div>\r\n                            <div className={s.form__btn}>\r\n                                <button type=\"submit\" disabled={isSubmitting}>\r\n                                    Find\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\n//types\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}","import React, {useEffect} from 'react';\r\nimport style from './Users.module.css'\r\n\r\nimport {FilterType, requestUsers, UserType} from \"../../../redux/usersReducer\";\r\nimport {Paginator} from \"../../../common/Paginator/Paginator\";\r\nimport {User} from \"./User/User\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm/UsersSearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../../redux/usersSelectors\";\r\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\r\n\r\nexport const Users: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    const parsedPage = searchParams.get('page')\r\n    const parsedTerm = searchParams.get('term')\r\n    const parsedFriend = searchParams.get('friend')\r\n\r\n    const totalUsersCount = useSelector<AppStateType, number>(getTotalUsersCount)\r\n    const currentPage = useSelector<AppStateType, number>(getCurrentPage)\r\n    const pageSize = useSelector<AppStateType, number>(getPageSize)\r\n    const filter = useSelector<AppStateType, FilterType>(getUsersFilter)\r\n    const users = useSelector<AppStateType, Array<UserType>>(getUsers)\r\n    const followingInProgress = useSelector<AppStateType, Array<string>>(getFollowingInProgress)\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsedPage) actualPage = Number(parsedPage)\r\n        if (!!parsedTerm) actualFilter = {...actualFilter, term: parsedTerm as string}\r\n\r\n        switch (parsedFriend) {\r\n            case \"null\" :\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break\r\n            case \"true\" :\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break\r\n            case \"false\" :\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        const query = {} as queryObjType\r\n\r\n        if (!!parsedTerm) query.term = parsedTerm\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n        if (parsedFriend !== null) query.friends = String(parsedFriend)\r\n\r\n        navigate(`?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`)\r\n\r\n    }, [filter, currentPage])\r\n\r\n    return (\r\n        <div className={style.users}>\r\n            <UsersSearchForm\r\n                onFilterChanged={onFilterChanged}\r\n            />\r\n            <div  className={style.searchResult}>\r\n                {\r\n                    users.map(user => {\r\n                            return (\r\n                                <div key={user.id}>\r\n                                    <User\r\n                                        user={user}\r\n                                        followingInProgress={followingInProgress}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n            <Paginator\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n//types====\r\n\r\ntype queryObjType = {\r\n    term: string\r\n    page: string\r\n    friends: string\r\n}\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {Users} from './Users';\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../../redux/usersSelectors\";\r\n\r\n\r\nconst UsersPage: React.FC = () => {\r\n\r\n    const isFetching = useSelector<AppStateType, boolean>(getIsFetching)\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersPage\r\n"],"sourceRoot":""}