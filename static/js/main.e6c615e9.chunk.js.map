{"version":3,"sources":["components/MainWindow/Profile/ProfileInfo/ProfileInfo.module.css","components/MainWindow/Messages/Messages.module.css","App.module.css","components/MainWindow/Users/Users.module.css","components/MainWindow/Profile/MyPosts/MyPosts.module.css","components/MainWindow/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","components/Navbar/Navbar.module.css","components/MainWindow/News/News.module.css","components/MainWindow/Music/Music.module.css","components/MainWindow/Friends/Friends.module.css","components/MainWindow/Settings/Settings.module.css","components/MainWindow/Messages/Message/Message.module.css","components/MainWindow/Messages/DialogItem/DialogsItem.module.css","common/Preloader/Preloader.module.css","components/MainWindow/Profile/Profile.module.css","redux/profileReducer.ts","redux/messagesReducer.ts","redux/sidebarPageReducer.ts","redux/usersReducer.ts","redux/reduxStore.ts","assets/images/logo.png","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/MainWindow/News/News.tsx","components/MainWindow/Music/Music.tsx","components/MainWindow/Friends/Friends.tsx","components/MainWindow/Settings/Settings.tsx","components/MainWindow/Messages/Message/Message.tsx","components/MainWindow/Messages/DialogItem/DialogsItem.tsx","components/MainWindow/Messages/Messages.tsx","components/MainWindow/Messages/MessagesContainer.tsx","assets/images/user.png","components/MainWindow/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","common/api.ts","components/MainWindow/Users/UsersContainer.tsx","assets/images/avatar_for_profile.jpg","components/MainWindow/Profile/ProfileInfo/ProfileInfo.tsx","components/MainWindow/Profile/MyPosts/Post/Post.tsx","components/MainWindow/Profile/MyPosts/MyPosts.tsx","components/MainWindow/Profile/MyPosts/MyPostsContainer.tsx","components/MainWindow/Profile/Profile.tsx","components/MainWindow/Profile/ProfileContaeiner.tsx","common/withRouter/withRouter.tsx","App.tsx","index.tsx"],"names":["module","exports","initialState","posts","message","likesCount","id","newPostText","profile","addPost","type","updateNewPostText","newText","users","name","img","messages","newMessageText","onMessagePostCreator","newMessage","pageSize","totalUsersCount","currentPage","isFetching","rootReducer","combineReducers","profilePage","state","action","newPost","Date","getTime","messagesPage","sidebar","usersPage","map","m","userID","followed","count","store","createStore","Header","className","c","header","src","logo","alt","title","Navbar","nav","item","navData","isActive","activeLink","to","active","Footer","footer","News","news","Music","music","Friends","friends","Settings","settings","Message","props","DialogsItem","path","dialog","Messages","dialogsItem","u","dialogs","dialogItem","onChange","e","currentTarget","value","onMessagePost","rows","cols","placeholder","disabled","trim","onClick","addMessage","MessagesContainer","connect","dispatch","text","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onPageChanged","photos","small","user","userPhoto","unfollow","follow","status","Preloader","preloader","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","then","response","data","UsersAPIComponent","pageNumber","setCurrentPage","toggleIsFetching","setUsers","items","this","setTotalUsersCount","totalCount","React","Component","UsersContainer","ProfileInfo","ground","avatarBlock","avatar","large","avatarDefault","Post","itemText","MyPosts","post","myPosts","onAddPost","MyPostsContainer","Profile","ProfileAPIContainer","userId","setUserProfile","ProfileContainer","compose","WrappedComponent","params","useParams","location","useLocation","App","appContent","appContentWindow","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6c615e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ground\":\"ProfileInfo_ground__1iuZd\",\"ava\":\"ProfileInfo_ava__1jSav\",\"avatar\":\"ProfileInfo_avatar__22Iyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__3WgMj\",\"dialogItem\":\"Messages_dialogItem__3jFPD\",\"dialog\":\"Messages_dialog__GFzRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContent\":\"App_appContent__31heF\",\"appContentWindow\":\"App_appContentWindow__2gnhC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__jEelu\",\"selectedPage\":\"Users_selectedPage__2nEHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__FQQlZ\",\"posts\":\"MyPosts_posts__YPrmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1LZi-\",\"itemText\":\"Post_itemText__3jxIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2rKXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3XO3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ySm9p\",\"item\":\"Navbar_item__2xv0e\",\"activeLink\":\"Navbar_activeLink__1hYAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__16Ki9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__20urC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2fVYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__ZkkZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1KS8B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__2sybv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1Oc1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3Z-pR\",\"ava\":\"Profile_ava__3Hnfg\"};","export type PostType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string,\r\n    \"contacts\": {\r\n        \"facebook\": string,\r\n        \"website\": string,\r\n        \"vk\": string,\r\n        \"twitter\": string,\r\n        \"instagram\": string,\r\n        \"youtube\": string,\r\n        \"github\": string,\r\n        \"mainLink\": string\r\n    },\r\n    \"lookingForAJob\": string,\r\n    \"lookingForAJobDescription\": string,\r\n    \"fullName\": string,\r\n    \"userId\": number,\r\n    \"photos\": {\r\n        \"small\": string,\r\n        \"large\": string\r\n    }\r\n} | null\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {message: \"Hello\", likesCount: 12, id: 1},\r\n        {message: \"Dinosaurus are great\", likesCount: 17, id: 2}\r\n    ] as Array<PostType>,\r\n    newPostText: \"\" as string,\r\n    profile: null as ProfileType,\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_POST\": {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: state.newPostText,\r\n                likesCount: 12\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case \"UPDATE_NEW_POST_TEXT\": {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionTypes = addPostType\r\n    | updateNewPostTextType\r\n    | setUserProfileType\r\n\r\nexport type addPostType = ReturnType<typeof addPost>\r\nexport const addPost = () => {\r\n    return {\r\n        type: \"ADD_POST\",\r\n    } as const\r\n}\r\n\r\nexport type updateNewPostTextType = ReturnType<typeof updateNewPostText>\r\nexport const updateNewPostText = (newText: string) => {\r\n    return {\r\n        type: \"UPDATE_NEW_POST_TEXT\",\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: \"SET-USER-PROFILE\",\r\n        profile,\r\n    } as const\r\n}\r\n\r\n","\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    img: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            name: \"Oleg\",\r\n            id: 1,\r\n            img: \"https://avatars.mds.yandex.net/get-zen_doc/3986249/pub_607ecd1d13c71c1ca8a34192_607ee065330a4f14d551104b/scale_1200\"\r\n        },\r\n        {\r\n            name: \"Diana\",\r\n            id: 2,\r\n            img: \"https://avatars.mds.yandex.net/i?id=64b380ea3aa0d80cad94cb1a24a3b3f5-4233014-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n        {name: \"Fat cat\", id: 3, img: \"https://data.whicdn.com/images/310252363/original.jpg\"},\r\n        {\r\n            name: \"Dimka\",\r\n            id: 4,\r\n            img: \"https://i.pinimg.com/originals/b7/44/46/b744464dd3d970ad96745be8de69d755.jpg\"\r\n        },\r\n        {\r\n            name: \"Ella\",\r\n            id: 5,\r\n            img: \"https://st.depositphotos.com/1023162/5099/i/950/depositphotos_50991807-stock-photo-sexy-woman-in-fashion-sunglasses.jpg\"\r\n        },\r\n        {\r\n            name: \"Makar\",\r\n            id: 6,\r\n            img: \"https://avatars.mds.yandex.net/i?id=55d09aa1629f72a149098b2c3127e039-5222024-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n    ] as Array<UserType>,\r\n    messages: [\r\n        {message: \"Hi\", id: 1},\r\n        {message: \"Ho\", id: 2},\r\n        {message: \"He\", id: 3},\r\n        {message: \"Hu\", id: 4},\r\n        {message: \"Hio\", id: 5},\r\n        {message: \"Hia\", id: 6},\r\n    ] as Array<MessageType>,\r\n    newMessageText: \"\" as string\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const messagesReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\": {\r\n            let newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: state.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: \"\"\r\n            }\r\n        }\r\n        case \"UPDATE_NEW_MESSAGE_TEXT\": {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newMessage\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionTypes = addMessageCreatorType | onMessagePostCreatorType\r\n\r\nexport type addMessageCreatorType = ReturnType<typeof addMessageCreator>\r\nexport const addMessageCreator = () => {\r\n    return {\r\n        type: \"ADD_MESSAGE\",\r\n    } as const\r\n}\r\nexport type onMessagePostCreatorType = ReturnType<typeof onMessagePostCreator>\r\nexport const onMessagePostCreator = (newMessage: string) => {\r\n    return {\r\n        type: \"UPDATE_NEW_MESSAGE_TEXT\",\r\n        newMessage: newMessage\r\n    } as const\r\n}\r\n\r\n\r\n","import {sidebarType} from \"./store\";\r\n\r\nconst initialState = {}\r\n\r\nexport const sidebarReducer = (state: sidebarType  = initialState, action: any) => {\r\n    return state\r\n}","import {PostType} from \"./profileReducer\";\r\nimport React from \"react\";\r\n\r\nconst initialState: initialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string\r\n    photos: { small: any, large: any }\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nexport type initialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\n\r\nexport const usersReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)\r\n            }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = followType\r\n    | unFollowType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setTotalUsersCountType\r\n    | setIsFetchingType\r\n\r\nexport type followType = ReturnType<typeof follow>\r\nexport const follow = (userID: number) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type unFollowType = ReturnType<typeof unfollow>\r\nexport const unfollow = (userID: number) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: \"SET-USERS\",\r\n        users,\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        currentPage,\r\n    } as const\r\n}\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: \"SET-TOTAL-USERS-COUNT\",\r\n        count: totalCount,\r\n    } as const\r\n}\r\n\r\nexport type setIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FETCHING\",\r\n        isFetching,\r\n    } as const\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {messagesReducer} from \"./messagesReducer\";\r\nimport {sidebarReducer} from \"./sidebarPageReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(rootReducer)","export default __webpack_public_path__ + \"static/media/logo.cbfad428.png\";","import React from 'react';\r\nimport c from\"./Header.module.css\"\r\nimport logo from \"../../assets/images/logo.png\"\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header className={c.header}>\r\n        <img src={logo} alt='logo' title=\"image logo\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport c from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/messages\">Message</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/friends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport c from \"./Footer.module.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n<div className={c.footer}>\r\n    Footer\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport c from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className={c.news}>\r\n            News\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport c from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div className={c.music}>\r\n            Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport c from \"./Friends.module.css\"\r\n\r\nconst Friends = () => {\r\n    return(\r\n        <div className={c.friends}>\r\n            Friends\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport c from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={c.settings}>\r\n            Settings\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport c from \"./Message.module.css\"\r\nimport {MessageType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst Message = (props: MessageType) => {\r\n\r\n    return (\r\n        <div className={c.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport c from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst DialogsItem = (props: UserType) => {\r\n\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={c.dialog}>\r\n            <div>\r\n                <img src={props.img}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;","import React, {ChangeEvent} from 'react';\r\nimport c from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport {UsersPropsType} from \"./MessagesContainer\";\r\n\r\nconst Messages = (props: UsersPropsType) => {\r\n\r\n    let addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    let onMessagePost = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let newText = e.currentTarget.value\r\n        props.onMessagePost(newText)\r\n    }\r\n\r\n    let dialogsItem = props.messagesPage.users.map(u => <DialogsItem key={u.id} name={u.name} id={u.id}\r\n                                                                           img={u.img}/>)\r\n    let message = props.messagesPage.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>)\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogItem}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {message}\r\n                <div>\r\n                    <textarea onChange={onMessagePost} value={props.messagesPage.newMessageText}\r\n                              rows={10} cols={44} placeholder={'Write your message'}/>\r\n                </div>\r\n                <div>\r\n                    <button disabled={props.messagesPage.newMessageText.trim()===''} onClick={addMessage}>Add message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {addMessageCreator, initialStateType, onMessagePostCreator} from \"../../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    messagesPage: initialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    onMessagePost: (text: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) : MapStateToPropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageCreator())\r\n        },\r\n        onMessagePost: (text: string) => {\r\n            text ? dispatch(onMessagePostCreator(text)) :\r\n                dispatch(onMessagePostCreator(\"\"));\r\n        },\r\n    }\r\n}\r\n\r\nexport let MessagesContainer: any = connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n","export default __webpack_public_path__ + \"static/media/user.00d92f05.png\";","import React from 'react';\r\nimport c from \"./Users.module.css\";\r\nimport user from \"../../../assets/images/user.png\";\r\nimport {UserType} from \"../../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = (Math.ceil(props.totalUsersCount / props.pageSize)) / 200\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p ? c.selectedPage : \"\"}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(m => <div key={m.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + m.id}>\r\n                            <img src={m.photos.small !== null ? m.photos.small : user} className={c.userPhoto}\r\n                                 alt=\"photo\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                m.followed\r\n                                    ? <button onClick={() => props.unfollow(m.id)}>Unfollow</button>\r\n                                    : <button onClick={() => props.follow(m.id)}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{m.name}</div>\r\n                            <div>{m.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"m.location.country\"}</div>\r\n                            <div>{\"m.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.1952935e.gif\";","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.gif\";\r\nimport c from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} className={c.preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f5a121b3-d5d2-4866-a73a-ab1418f0e4d8\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}` )\r\n            .then(response => response.data)\r\n    },\r\n/*    follow(id: string) {\r\n        return instance.post(`follow/${id}`).then(response => response.data)\r\n    },\r\n    unFollow(id:string){\r\n        return instance.delete(`follow/${id}`).then(response => response.data)\r\n    },*/\r\n}\r\n\r\nexport const authApi = {\r\n    getAuth() {\r\n        return  instance.get(`auth/me`).then(response => response.data)\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers, toggleIsFetching,\r\n    unfollow,\r\n    UserType\r\n} from \"../../../redux/usersReducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {usersAPI} from \"../../../common/api\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (currentPage: number) => void\r\n    toggleIsFetching: (isFetching: boolean)  => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        usersAPI.getUsers(1, this.props.pageSize)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.items)\r\n                this.props.setTotalUsersCount(response.totalCount)\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(response => {\r\n                this.props.setUsers(response.items)\r\n                this.props.toggleIsFetching(false)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/>: null}\r\n                <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n            />\r\n            </>\r\n        )}\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\nexport let UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n})(UsersAPIComponent)","export default __webpack_public_path__ + \"static/media/avatar_for_profile.e4c1e159.jpg\";","import React from 'react';\r\nimport c from \"./ProfileInfo.module.css\"\r\nimport avatarDefault from '../../../../assets/images/avatar_for_profile.jpg'\r\nimport {ProfileType} from \"../../../../redux/profileReducer\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n            <div className={c.ground}>\r\n                <img\r\n                    src=\"https://img.lovepik.com/photo/50066/7884.jpg_wh860.jpg\" alt=\"fon image\" title=\"fon image\"/>\r\n            </div>\r\n            <div className={c.avatarBlock}>\r\n                <div className={c.avatar}>\r\n                    <img alt='ava'\r\n                         src={props.profile && props.profile.photos.large !== null ? props.profile.photos.large : avatarDefault}/>\r\n                </div>\r\n                <div>\r\n                    ava + description\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../../redux/profileReducer\";\r\n\r\nconst Post = (props: PostType) => {\r\n\r\n    return (\r\n        <div key={props.id} className={c.item}>\r\n            <img\r\n                src=\"https://slovami.net/wp-content/uploads/thumbs_dir/the-most-beautiful-guys-russia-4-1-nwkkkydf2f1mhw9a4ijzfs2ktasvevyjiyi4xibqis.jpg\"\r\n                alt=\"ava\" title=\"ava\"/>\r\n            <div className={c.itemText}>\r\n                {props.message}\r\n                <div>\r\n                    <span>like: {props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport c from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {ProfilePageType} from \"../../../../redux/store\";\r\nimport {UsersPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: UsersPropsType) => {\r\n\r\n    let post = props.profilePage.posts.map(p => <Post key={p.id}\r\n                                                      message={p.message}\r\n                                                      likesCount={p.likesCount}\r\n                                                      id={p.id}/>)\r\n\r\n    let addPost = () => {\r\n        props.onAddPost()\r\n    }\r\n\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let newText = e.currentTarget.value\r\n        props.updateNewPostText(newText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={c.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} value={props.profilePage.newPostText}\r\n                              placeholder={'Write your message'}/>\r\n                </div>\r\n                <div>\r\n                    <button disabled={props.profilePage.newPostText.trim() === ''} onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost, initialStateType, updateNewPostText} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: initialStateType\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    onAddPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addPost())\r\n        },\r\n        updateNewPostText: (newText: string) => {\r\n            newText ? dispatch(updateNewPostText(newText)) :\r\n                dispatch(updateNewPostText(\"\"))\r\n        },\r\n    }\r\n}\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n","import React from 'react';\r\nimport c from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {ComponentType} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, ProfileType, setUserProfile, updateNewPostText} from \"../../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {compose} from \"redux\";\r\nimport {InjectedProps, withRouter2} from \"../../../common/withRouter/withRouter\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n}\r\ntype MapDispatchToProps = {\r\n    setUserProfile: (profile: ProfileType) => void\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps & InjectedProps\r\n\r\nclass ProfileAPIContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId: string = this.props.userId\r\n        if (!userId) {\r\n            userId = '2';\r\n        }\r\n\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n            .then(response => {\r\n                this.props.setUserProfile(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n    }\r\n}\r\n\r\n\r\nexport const ProfileContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        setUserProfile,\r\n        addPost,\r\n        updateNewPostText,\r\n    }),\r\n    withRouter2)(ProfileAPIContainer);","import React from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\n\r\nexport type locationType = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    state: object | null\r\n}\r\n\r\nexport type WrappedComponentWithRouterPropsType = {\r\n    userId: string\r\n    location: locationType\r\n}\r\n\r\nexport const withRouter = (WrappedComponent: typeof React.Component) => (props: object) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props}\r\n            userId={params.userId}\r\n            location={location}\r\n        />\r\n    );\r\n}\r\n\r\nexport type InjectedProps = {\r\n    userId : string\r\n}\r\n\r\n\r\nexport const withRouter2 = <T  extends object> (WrappedComponent: React.ComponentType<T>) => (props: T) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props as T}\r\n            userId={params.userId}\r\n            location={location}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport c from './App.module.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport News from \"./components/MainWindow/News/News\";\r\nimport Music from \"./components/MainWindow/Music/Music\";\r\nimport Friends from \"./components/MainWindow/Friends/Friends\";\r\nimport Settings from \"./components/MainWindow/Settings/Settings\";\r\nimport {MessagesContainer} from \"./components/MainWindow/Messages/MessagesContainer\";\r\nimport {UsersContainer} from \"./components/MainWindow/Users/UsersContainer\";\r\nimport {ProfileContainer} from \"./components/MainWindow/Profile/ProfileContaeiner\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <main className={c.appContent}>\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className={c.appContentWindow}>\r\n                <Routes>\r\n                    <Route path=\"/profile/\" element={<ProfileContainer/>}>\r\n                        <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                    </Route>\r\n\r\n                    <Route path=\"/messages/\" element={<MessagesContainer/>}>\r\n                        <Route path=\":userId\" element={<MessagesContainer/>}/>\r\n                    </Route>\r\n\r\n                    <Route path=\"/users/*\" element={<UsersContainer/>}/>\r\n                    <Route path=\"/news/*\" element={<News/>}/>\r\n                    <Route path=\"/music/*\" element={<Music/>}/>\r\n                    <Route path=\"/settings/*\" element={<Settings/>}/>\r\n                    <Route path=\"/friends/*\" element={<Friends/>}/>\r\n                </Routes>\r\n            </div>\r\n            <Footer/>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {store} from \"./redux/reduxStore\";\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n"],"sourceRoot":""}