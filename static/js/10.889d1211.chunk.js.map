{"version":3,"sources":["components/Login/Login.module.scss","components/Login/Login.tsx"],"names":["module","exports","Login","dispatch","useDispatch","captchaUrl","useSelector","getAuthCaptchaUrlSelector","getAuthIsAuthSelector","to","PATH","PROFILE","className","s","login__block","login__title","LoginReduxForm","onSubmit","formData","login","email","password","rememberMe","captcha","reduxForm","form","handleSubmit","error","input__form","createField","required","Input","type","checkbox__form","src","alt","style","formSummaryError","form__btn"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,aAAe,4BAA4B,YAAc,2BAA2B,eAAiB,8BAA8B,UAAY,2B,iCCD5M,0HA2CeC,UAxBD,WACZ,IAAMC,EAAWC,cAEXC,EAA+BC,YAAYC,KASjD,OARwBD,YAAYE,KAS3B,cAAC,IAAD,CAAUC,GAAIC,IAAKC,UAI1B,0BAASC,UAAWC,IAAEC,aAAtB,UACE,oBAAIF,UAAWC,IAAEE,aAAjB,mBACA,cAACC,EAAD,CAAgBC,SAbH,SAACC,GAChBf,EACEgB,YAAMD,EAASE,MAAOF,EAASG,SAAUH,EAASI,WAAYJ,EAASK,WAWnClB,WAAYA,QAOtD,IA2CMW,EAAiBQ,YAA2C,CAAEC,KAAM,SAAnDD,EAzCnB,SAAC,GAAD,IAAGE,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,MAAOtB,EAAxB,EAAwBA,WAAxB,OACF,uBAAMY,SAAUS,EAAhB,UACE,qBAAKd,UAAWC,IAAEe,YAAlB,SACGC,YAAqC,QAAS,QAAS,CAACC,KAAWC,IAAO,CACzEC,KAAM,WAGV,qBAAKpB,UAAWC,IAAEe,YAAlB,SACGC,YAAqC,WAAY,WAAY,CAACC,KAAWC,IAAO,CAC/EC,KAAM,eAGV,qBAAKpB,UAAWC,IAAEoB,eAAlB,SACGJ,YACC,KACA,aACA,GACAE,IACA,CAAEC,KAAM,YACR,iBAIH3B,GAAc,qBAAK6B,IAAK7B,EAAY8B,IAAI,eACxCR,GAAS,qBAAKf,UAAWwB,IAAMC,iBAAtB,SAAyCV,IAElDtB,GACCwB,YACE,qBACA,UACA,CAACC,KACDC,IACA,CAAEC,KAAM,SAEX3B,GAAc,wBAAQ2B,KAAK,SAAb,yBACf,qBAAKpB,UAAWC,IAAEyB,UAAlB,SACE,wBAAQN,KAAK,SAAb","file":"static/js/10.889d1211.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"Login_login__block__2h76V\",\"login__title\":\"Login_login__title__3yyRU\",\"input__form\":\"Login_input__form__dPp6f\",\"checkbox__form\":\"Login_checkbox__form__3rk2n\",\"form__btn\":\"Login_form__btn__cQeTw\"};","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\n\nimport { createField, Input } from '../../common';\nimport style from '../../common/FormsControls/FormsControls.module.scss';\nimport { LoginFormValuesKeysType } from '../../common/FormsControls/types';\nimport { PATH } from '../../enums';\nimport { login } from '../../redux/authReducer';\nimport { getAuthCaptchaUrlSelector, getAuthIsAuthSelector } from '../../selectors';\nimport { Nullable } from '../../types/Nullable';\nimport { ReturnComponentType } from '../../types/ReturnComponentType';\nimport { required } from '../../utils';\n\nimport s from './Login.module.scss';\nimport { FormDataType, LoginFormOwnProps } from './types';\n\nconst Login = (): ReturnComponentType => {\n  const dispatch = useDispatch();\n\n  const captchaUrl: Nullable<string> = useSelector(getAuthCaptchaUrlSelector);\n  const isAuth: boolean = useSelector(getAuthIsAuthSelector);\n\n  const onSubmit = (formData: FormDataType): void => {\n    dispatch(\n      login(formData.email, formData.password, formData.rememberMe, formData.captcha),\n    );\n  };\n\n  if (isAuth) {\n    return <Navigate to={PATH.PROFILE} />;\n  }\n\n  return (\n    <section className={s.login__block}>\n      <h1 className={s.login__title}>Login</h1>\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n    </section>\n  );\n};\n\nexport default Login;\n\nconst LoginForm: React.FC<\n  InjectedFormProps<FormDataType, LoginFormOwnProps> & LoginFormOwnProps\n> = ({ handleSubmit, error, captchaUrl }): ReturnComponentType => (\n  <form onSubmit={handleSubmit}>\n    <div className={s.input__form}>\n      {createField<LoginFormValuesKeysType>('Email', 'email', [required], Input, {\n        type: 'text',\n      })}\n    </div>\n    <div className={s.input__form}>\n      {createField<LoginFormValuesKeysType>('Password', 'password', [required], Input, {\n        type: 'password',\n      })}\n    </div>\n    <div className={s.checkbox__form}>\n      {createField<LoginFormValuesKeysType>(\n        null,\n        'rememberMe',\n        [],\n        Input,\n        { type: 'checkbox' },\n        'Remember me',\n      )}\n    </div>\n\n    {captchaUrl && <img src={captchaUrl} alt=\"captchaUrl\" />}\n    {error && <div className={style.formSummaryError}>{error}</div>}\n\n    {captchaUrl &&\n      createField<LoginFormValuesKeysType>(\n        'Symbols from image',\n        'captcha',\n        [required],\n        Input,\n        { type: 'text' },\n      )}\n    {captchaUrl && <button type=\"submit\">Get Started</button>}\n    <div className={s.form__btn}>\n      <button type=\"submit\">Login</button>\n    </div>\n  </form>\n);\n\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormOwnProps>({ form: 'Login' })(\n  LoginForm,\n);\n"],"sourceRoot":""}