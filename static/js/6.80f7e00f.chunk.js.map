{"version":3,"sources":["components/Login/Login.module.scss","selectors/usersSelectors.ts","components/MainWindow/Users/Users.module.scss","common/Paginator/Paginator.module.css","components/MainWindow/Users/User/User.module.scss","components/MainWindow/Users/UsersSearchForm/UsersSearchForm.module.scss","common/Paginator/Paginator.tsx","components/MainWindow/Users/User/User.tsx","components/MainWindow/Users/UsersSearchForm/UsersSearchForm.tsx","components/MainWindow/Users/Users.tsx","components/MainWindow/Users/UsersPage.tsx"],"names":["module","exports","getUsers","createSelector","state","usersPage","users","filter","user","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useEffect","className","cn","styles","paginator","DisplayNone","user__btn","onClick","DisplayBlock","page","map","selectedPage","pageNumber","User","dispatch","useDispatch","style","userBlock","to","PATH","PROFILE","id","userPhoto","src","photos","small","userImage","alt","name","followed","userID","unFollow","disabled","some","user__btn_unFollow","follow","userInfo","userName","user__text","userStatus","status","slice","usersSearchFormValidate","values","UsersSearchForm","React","memo","onFilterChanged","useSelector","search","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","isSubmitting","searchForm","searchForm__block","searchForm__item__input","type","placeholder","searchForm__item__select","as","value","s","form__btn","Users","navigate","useNavigate","useSearchParams","searchParams","parsedPage","get","parsedTerm","parsedFriend","actualPage","actualFilter","Number","requestUsers","query","friends","searchResult","UsersPage","Preloader"],"mappings":"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","file":"static/js/6.80f7e00f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"Login_login__block__2ihrM\",\"login__title\":\"Login_login__title__7Ugm-\",\"input__form\":\"Login_input__form__2rUJq\",\"checkbox__form\":\"Login_checkbox__form__3XKIH\",\"form__btn\":\"Login_form__btn__2xfw0\"};","import {AppStateType} from \"../redux/reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\nimport {UserType} from \"../redux/usersReducer\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users: UserType[]) => {\r\n    return users.filter(user => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Users_page__bEb6C\",\"users\":\"Users_users__1UfkQ\",\"searchResult\":\"Users_searchResult__11U_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__PwQWk\",\"pageNumber\":\"Paginator_pageNumber__1k8yn\",\"selectedPage\":\"Paginator_selectedPage__3QcoJ\",\"DisplayNone\":\"Paginator_DisplayNone__3Ynwu\",\"user__btn\":\"Paginator_user__btn__1rLFG\",\"DisplayBlock\":\"Paginator_DisplayBlock__3Nm0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__1JaOT\",\"userPhoto\":\"User_userPhoto__1SFqt\",\"user__btn\":\"User_user__btn__2_P7k\",\"user__btn_unFollow\":\"User_user__btn_unFollow__U6I19\",\"userInfo\":\"User_userInfo__10Pyt\",\"user__text\":\"User_user__text__15s5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"UsersSearchForm_search__3Lonv\",\"searchForm\":\"UsersSearchForm_searchForm__NnuxQ\",\"searchForm__block\":\"UsersSearchForm_searchForm__block__15TOZ\",\"searchForm__item__input\":\"UsersSearchForm_searchForm__item__input__1CP7O\",\"searchForm__item__select\":\"UsersSearchForm_searchForm__item__select__38EZX\",\"form__btn\":\"UsersSearchForm_form__btn__1EfaS\"};","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\"\r\nimport cn from 'classnames'\r\n\r\nexport const Paginator: React.FC<UsersPropsType> = ({\r\n                                                        totalItemsCount,\r\n                                                        pageSize,\r\n                                                        currentPage,\r\n                                                        onPageChanged,\r\n                                                        portionSize = 10\r\n                                                    }) => {\r\n\r\n    const pagesCount = (Math.ceil(totalItemsCount / pageSize))\r\n    const pages: number[] = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    useEffect(() => {\r\n        setPortionNumber(Math.ceil(currentPage / portionSize))\r\n    }, [currentPage])\r\n\r\n    return (\r\n        <div className={cn(styles.paginator)}>\r\n            <div  className={styles.DisplayNone}>\r\n                {\r\n                    portionNumber > 1\r\n                    && <div className={styles.user__btn} onClick={() => setPortionNumber(portionNumber - 1)}>\r\n                        <button>\r\n                            &#10096;\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div  className={styles.DisplayBlock}>\r\n                {\r\n                    portionNumber > 1\r\n                    && <div className={styles.user__btn} onClick={() => setPortionNumber(portionNumber - 1)}>\r\n                        <button>\r\n                            &#10096; &#10096; &#10096;\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    pages\r\n                        .filter(page => (page >= leftPortionPageNumber) && (page <= rightPortionPageNumber))\r\n                        .map(page => {\r\n                            return (\r\n                                <span className={cn({[styles.selectedPage]: currentPage === page}, styles.pageNumber)}\r\n                                      key={page}\r\n                                      onClick={() => onPageChanged(page)}>\r\n                            {page}\r\n                        </span>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n            <div  className={styles.DisplayNone}>\r\n                {\r\n                    portionCount > portionNumber\r\n                    && <div className={styles.user__btn} onClick={() => setPortionNumber(portionNumber + 1)}>\r\n                        <button>\r\n                            &#10097;\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div   className={styles.DisplayBlock}>\r\n                {\r\n                    portionCount > portionNumber\r\n                    && <div className={styles.user__btn} onClick={() => setPortionNumber(portionNumber + 1)}>\r\n                        <button>\r\n                            &#10097; &#10097; &#10097;\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// types=========\r\n\r\ntype UsersPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n","import React from 'react';\r\nimport style from \"./User.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport userImage from \"../../../../assets/images/user.png\";\r\nimport {follow, unFollow, UserType} from \"../../../../redux/usersReducer\";\r\nimport {PATH} from \"../../../../utils/RouterPath/RouterPath\";\r\n\r\nexport const User: React.FC<UsersPropsType> = ({user, followingInProgress}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const followHandler = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    const unfollowHandler = (userID: string) => {\r\n        dispatch(unFollow(userID))\r\n    }\r\n\r\n    return (\r\n        <div className={style.userBlock}>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={`${PATH.PROFILE}/${user.id}`}>\r\n                        <img\r\n                            className={style.userPhoto}\r\n                            src={user.photos.small !== null ? user.photos.small : userImage}\r\n                            alt={`${user.name} photo`}\r\n                        />\r\n                    </NavLink>\r\n                </div>\r\n                {\r\n                    user.followed\r\n                        ? (\r\n                            <div className={style.user__btn} onClick={() => unfollowHandler(user.id)}>\r\n                                <button disabled={followingInProgress.some(id => id === user.id)}>Unfollow\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <div className={style.user__btn_unFollow} onClick={() => followHandler(user.id)}>\r\n                                <button disabled={followingInProgress.some(id => id === user.id)}>\r\n                                    Follow\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n            <div>\r\n                <div className={style.userInfo}>\r\n                    <NavLink to={`${PATH.PROFILE}/${user.id}`}>\r\n                        <div className={style.userName}>\r\n                            User name : <span className={style.user__text}>{user.name}</span>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div className={style.userStatus}>User status :\r\n                        <span className={style.user__text}>\r\n                                {\r\n                                    user.status\r\n                                        ? user.status.slice(0, 50)\r\n                                        : \" empty\"\r\n                                }\r\n                                </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//type\r\n\r\ntype UsersPropsType = {\r\n    user: UserType\r\n    followingInProgress: string[]\r\n}","import React from \"react\";\r\nimport {Form, Formik, Field} from \"formik\";\r\nimport style from './UsersSearchForm.module.scss'\r\n\r\nimport {FilterType} from \"../../../../redux/usersReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\nimport {getUsersFilter} from \"../../../../selectors/usersSelectors\";\r\nimport s from \"../../../Login/Login.module.scss\";\r\n\r\nconst usersSearchFormValidate = (values: { term: string; friend: FriendFormType }) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo(({onFilterChanged}) => {\r\n\r\n    const filter = useSelector<AppStateType, FilterType>(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <div className={style.search}>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {\r\n                    ({isSubmitting}) => (\r\n                        <Form className={style.searchForm}>\r\n                            <div className={style.searchForm__block}>\r\n                                <Field\r\n                                    className={style.searchForm__item__input}\r\n                                    type=\"text\"\r\n                                    name=\"term\"\r\n                                    placeholder=\"Write user name 🔎\"\r\n                                />\r\n                                <Field className={style.searchForm__item__select} name=\"friend\" as=\"select\">\r\n                                    <option value=\"null\">All</option>\r\n                                    <option value=\"true\">Only followed</option>\r\n                                    <option value=\"false\">Only unfollowed</option>\r\n                                </Field>\r\n                            </div>\r\n                            <div className={s.form__btn}>\r\n                                <button type=\"submit\" disabled={isSubmitting}>\r\n                                    Find\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\n//types\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}","import React, {useEffect} from 'react';\r\nimport style from './Users.module.scss'\r\n\r\nimport {FilterType, requestUsers, UserType} from \"../../../redux/usersReducer\";\r\nimport {Paginator} from \"../../../common/Paginator/Paginator\";\r\nimport {User} from \"./User/User\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm/UsersSearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../../selectors/usersSelectors\";\r\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\r\n\r\nexport const Users: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    const parsedPage = searchParams.get('page')\r\n    const parsedTerm = searchParams.get('term')\r\n    const parsedFriend = searchParams.get('friend')\r\n\r\n    const totalUsersCount = useSelector<AppStateType, number>(getTotalUsersCount)\r\n    const currentPage = useSelector<AppStateType, number>(getCurrentPage)\r\n    const pageSize = useSelector<AppStateType, number>(getPageSize)\r\n    const filter = useSelector<AppStateType, FilterType>(getUsersFilter)\r\n    const users = useSelector<AppStateType, Array<UserType>>(getUsers)\r\n    const followingInProgress = useSelector<AppStateType, Array<string>>(getFollowingInProgress)\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsedPage) actualPage = Number(parsedPage)\r\n        if (!!parsedTerm) actualFilter = {...actualFilter, term: parsedTerm as string}\r\n\r\n        switch (parsedFriend) {\r\n            case \"null\" :\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break\r\n            case \"true\" :\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break\r\n            case \"false\" :\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        const query = {} as queryObjType\r\n\r\n        if (!!parsedTerm) query.term = parsedTerm\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n        if (parsedFriend !== null) query.friends = String(parsedFriend)\r\n\r\n        navigate(`?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`)\r\n\r\n    }, [filter, currentPage])\r\n\r\n    return (\r\n        <div className={style.users}>\r\n            <UsersSearchForm\r\n                onFilterChanged={onFilterChanged}\r\n            />\r\n            <div  className={style.searchResult}>\r\n                {\r\n                    users.map(user => {\r\n                            return (\r\n                                <div key={user.id}>\r\n                                    <User\r\n                                        user={user}\r\n                                        followingInProgress={followingInProgress}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n            <Paginator\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n//types====\r\n\r\ntype queryObjType = {\r\n    term: string\r\n    page: string\r\n    friends: string\r\n}\r\n","import React from 'react';\r\nimport style from './Users.module.scss'\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {Users} from './Users';\r\nimport {Preloader} from \"../../../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../../selectors/usersSelectors\";\r\n\r\n\r\nconst UsersPage: React.FC = () => {\r\n\r\n    const isFetching = useSelector<AppStateType, boolean>(getIsFetching)\r\n\r\n    return (\r\n        <section className={style.page}>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UsersPage\r\n"],"sourceRoot":""}