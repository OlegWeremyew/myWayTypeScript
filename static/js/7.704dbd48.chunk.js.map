{"version":3,"sources":["components/Login/Login.module.scss","components/MainWindow/Users/Users.module.scss","components/MainWindow/Users/User/User.module.scss","components/MainWindow/Users/UsersSearchForm/UsersSearchForm.module.scss","components/MainWindow/Users/User/User.tsx","components/MainWindow/Users/UsersSearchForm/UsersSearchForm.tsx","components/MainWindow/Users/Users.tsx","components/MainWindow/Users/UsersPage.tsx"],"names":["module","exports","User","user","followingInProgress","dispatch","useDispatch","className","style","userBlock","to","PATH","PROFILE","id","userPhoto","src","photos","small","userImage","alt","name","followed","user__btn","onClick","userID","unFollow","disabled","some","user__btn_unFollow","follow","userInfo","userName","user__text","userStatus","status","slice","usersSearchFormValidate","values","UsersSearchForm","React","memo","onFilterChanged","filter","useSelector","getUsersFilter","search","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","isSubmitting","searchForm","searchForm__block","searchForm__item__input","type","placeholder","searchForm__item__select","as","value","s","form__btn","Users","navigate","useNavigate","useSearchParams","searchParams","parsedPage","get","parsedTerm","parsedFriend","totalUsersCount","getTotalUsersCount","currentPage","getCurrentPage","pageSize","getPageSize","users","getUsers","getFollowingInProgress","useEffect","actualPage","actualFilter","Number","requestUsers","query","page","friends","navigatePath","searchResult","map","totalItemsCount","onPageChanged","pageNumber","UsersPage","isFetching","getIsFetching"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,aAAe,4BAA4B,YAAc,2BAA2B,eAAiB,8BAA8B,UAAY,2B,oBCA5MD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,qBAAqB,aAAe,8B,oBCAzFD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,wBAAwB,mBAAqB,iCAAiC,SAAW,uBAAuB,WAAa,2B,oBCAnOD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,WAAa,oCAAoC,kBAAoB,2CAA2C,wBAA0B,iDAAiD,yBAA2B,kDAAkD,UAAY,qC,8JCQlUC,EAAiC,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,oBAE5CC,EAAWC,cAUjB,OACI,sBAAKC,UAAWC,IAAMC,UAAtB,UACI,gCACI,8BACI,cAAC,IAAD,CAASC,GAAE,UAAKC,IAAKC,QAAV,YAAqBT,EAAKU,IAArC,SACI,qBACIN,UAAWC,IAAMM,UACjBC,IAA2B,OAAtBZ,EAAKa,OAAOC,MAAiBd,EAAKa,OAAOC,MAAQC,IACtDC,IAAG,UAAKhB,EAAKiB,KAAV,gBAKXjB,EAAKkB,SAEG,qBAAKd,UAAWC,IAAMc,UAAWC,QAAS,kBAnBzCC,EAmB+DrB,EAAKU,QAlBzFR,EAASoB,YAASD,IADE,IAACA,GAmBD,SACI,wBAAQE,SAAUtB,EAAoBuB,MAAK,SAAAd,GAAE,OAAIA,IAAOV,EAAKU,MAA7D,wBAIJ,qBAAKN,UAAWC,IAAMoB,mBAAoBL,QAAS,kBA5BpDC,EA4BwErB,EAAKU,QA3BhGR,EAASwB,YAAOL,IADE,IAACA,GA4BC,SACI,wBAAQE,SAAUtB,EAAoBuB,MAAK,SAAAd,GAAE,OAAIA,IAAOV,EAAKU,MAA7D,yBAOpB,8BACI,sBAAKN,UAAWC,IAAMsB,SAAtB,UACI,cAAC,IAAD,CAASpB,GAAE,UAAKC,IAAKC,QAAV,YAAqBT,EAAKU,IAArC,SACI,sBAAKN,UAAWC,IAAMuB,SAAtB,yBACgB,sBAAMxB,UAAWC,IAAMwB,WAAvB,SAAoC7B,EAAKiB,YAG7D,sBAAKb,UAAWC,IAAMyB,WAAtB,0BACI,sBAAM1B,UAAWC,IAAMwB,WAAvB,SAEY7B,EAAK+B,OACC/B,EAAK+B,OAAOC,MAAM,EAAG,IACrB,uB,qDCnDpCC,EAA0B,SAACC,GAE7B,MADe,IAINC,EAAuCC,IAAMC,MAAK,YAA6C,IAA3CC,EAA0C,EAA1CA,gBAEvDC,EAAqBC,YAAYC,KAWvC,OACI,qBAAKrC,UAAWC,IAAMqC,OAAtB,SACI,cAAC,IAAD,CACIC,oBAAkB,EAClBC,cAAe,CAACC,KAAMN,EAAOM,KAAMC,OAAQC,OAAOR,EAAOO,SACzDE,SAAUf,EACVgB,SAfG,SAACf,EAAD,GAAkG,IAA9EgB,EAA6E,EAA7EA,cACzBX,EAAqB,CACvBM,KAAMX,EAAOW,KACbC,OAA0B,SAAlBZ,EAAOY,OAAoB,KAAyB,SAAlBZ,EAAOY,QAErDR,EAAgBC,GAChBW,GAAc,IAKV,SAOQ,gBAAEC,EAAF,EAAEA,aAAF,OACI,eAAC,IAAD,CAAM/C,UAAWC,IAAM+C,WAAvB,UACI,sBAAKhD,UAAWC,IAAMgD,kBAAtB,UACI,cAAC,IAAD,CACIjD,UAAWC,IAAMiD,wBACjBC,KAAK,OACLtC,KAAK,OACLuC,YAAY,iCAEhB,eAAC,IAAD,CAAOpD,UAAWC,IAAMoD,yBAA0BxC,KAAK,SAASyC,GAAG,SAAnE,UACI,wBAAQC,MAAM,OAAd,iBACA,wBAAQA,MAAM,OAAd,2BACA,wBAAQA,MAAM,QAAd,mCAGR,qBAAKvD,UAAWwD,IAAEC,UAAlB,SACI,wBAAQN,KAAK,SAAShC,SAAU4B,EAAhC,+B,uBClCnBW,EAAkB,WAE3B,IAAM5D,EAAWC,cACX4D,EAAWC,cAHqC,EAKdC,cALc,mBAK/CC,EAL+C,KAOhDC,GAPgD,KAOnCD,EAAaE,IAAI,SAC9BC,EAAaH,EAAaE,IAAI,QAC9BE,EAAeJ,EAAaE,IAAI,UAEhCG,EAA0B/B,YAAYgC,KACtCC,EAAsBjC,YAAYkC,KAClCC,EAAmBnC,YAAYoC,KAC/BrC,EAAqBC,YAAYC,KACjCoC,EAAyBrC,YAAYsC,KACrC7E,EAAqCuC,YAAYuC,KA8CvD,OAnCAC,qBAAU,WACN,IAAIC,EAAaR,EACbS,EAAe3C,EAKnB,OAHM4B,IAAYc,EAAaE,OAAOhB,IAChCE,IAAYa,EAAY,2BAAOA,GAAP,IAAqBrC,KAAMwB,KAEjDC,GACJ,IAAK,OACDY,EAAY,2BAAOA,GAAP,IAAqBpC,OAAQ,OACzC,MACJ,IAAK,OACDoC,EAAY,2BAAOA,GAAP,IAAqBpC,QAAQ,IACzC,MACJ,IAAK,QACDoC,EAAY,2BAAOA,GAAP,IAAqBpC,QAAQ,IAIjD5C,EAASkF,YAAaH,EAAYN,EAAUO,MAC7C,IAEHF,qBAAU,WAEN,IAAMK,EAAQ,GAERhB,IAAYgB,EAAMxC,KAAOwB,GApCT,IAqClBI,IAA2BY,EAAMC,KAAOvC,OAAO0B,IAC9B,OAAjBH,IAAuBe,EAAME,QAAUxC,OAAOuB,IAElD,IAAMkB,EAAY,gBAAYjD,EAAOM,KAAnB,mBAAkCN,EAAOO,OAAzC,iBAAwD2B,GAC1EV,EAASyB,KAEV,CAACjD,EAAQkC,IAGR,sBAAKrE,UAAWC,IAAMwE,MAAtB,UACI,cAAC1C,EAAD,CACIG,gBA1CY,SAACC,GACrBrC,EAASkF,YAPa,EAOWT,EAAUpC,OA2CvC,qBAAKnC,UAAWC,IAAMoF,aAAtB,SAEQZ,EAAMa,KAAI,SAAA1F,GACF,OACI,8BACI,cAAC,EAAD,CACIA,KAAMA,EACNC,oBAAqBA,KAHnBD,EAAKU,SAWnC,cAAC,IAAD,CACIiF,gBAAiBpB,EACjBI,SAAUA,EACVF,YAAaA,EACbmB,cAnEU,SAACC,GACnB3F,EAASkF,YAAaS,EAAYlB,EAAUpC,WCjBrCuD,UAZa,WAExB,IAAMC,EAAsBvD,YAAYwD,KAExC,OACI,0BAAS5F,UAAWC,IAAMiF,KAA1B,UACKS,EAAa,cAAC,IAAD,IAAe,KAC7B,cAAC,EAAD","file":"static/js/7.704dbd48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__block\":\"Login_login__block__2h76V\",\"login__title\":\"Login_login__title__3yyRU\",\"input__form\":\"Login_input__form__dPp6f\",\"checkbox__form\":\"Login_checkbox__form__3rk2n\",\"form__btn\":\"Login_form__btn__cQeTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Users_page__n11Z0\",\"users\":\"Users_users__K2iz2\",\"searchResult\":\"Users_searchResult__3ThpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userBlock\":\"User_userBlock__ZXH-z\",\"userPhoto\":\"User_userPhoto__3oRhX\",\"user__btn\":\"User_user__btn__3yr8R\",\"user__btn_unFollow\":\"User_user__btn_unFollow__qM96s\",\"userInfo\":\"User_userInfo__2kJLk\",\"user__text\":\"User_user__text__4wlZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"UsersSearchForm_search__1ZjOY\",\"searchForm\":\"UsersSearchForm_searchForm__1ISU8\",\"searchForm__block\":\"UsersSearchForm_searchForm__block__2GvvU\",\"searchForm__item__input\":\"UsersSearchForm_searchForm__item__input__3JP42\",\"searchForm__item__select\":\"UsersSearchForm_searchForm__item__select__1VpsQ\",\"form__btn\":\"UsersSearchForm_form__btn__1sDFc\"};","import React from 'react';\r\nimport style from \"./User.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport userImage from \"../../../../assets/images/user.png\";\r\nimport {follow, unFollow, UserType} from \"../../../../redux/usersReducer\";\r\nimport {PATH} from \"../../../../enums\";\r\n\r\nexport const User: React.FC<UsersPropsType> = ({user, followingInProgress}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const followHandler = (userID: string): void => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    const unfollowHandler = (userID: string):void => {\r\n        dispatch(unFollow(userID))\r\n    }\r\n\r\n    return (\r\n        <div className={style.userBlock}>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={`${PATH.PROFILE}/${user.id}`}>\r\n                        <img\r\n                            className={style.userPhoto}\r\n                            src={user.photos.small !== null ? user.photos.small : userImage}\r\n                            alt={`${user.name} photo`}\r\n                        />\r\n                    </NavLink>\r\n                </div>\r\n                {\r\n                    user.followed\r\n                        ? (\r\n                            <div className={style.user__btn} onClick={() => unfollowHandler(user.id)}>\r\n                                <button disabled={followingInProgress.some(id => id === user.id)}>Unfollow\r\n                                </button>\r\n                            </div>\r\n                        ) : (\r\n                            <div className={style.user__btn_unFollow} onClick={() => followHandler(user.id)}>\r\n                                <button disabled={followingInProgress.some(id => id === user.id)}>\r\n                                    Follow\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n            <div>\r\n                <div className={style.userInfo}>\r\n                    <NavLink to={`${PATH.PROFILE}/${user.id}`}>\r\n                        <div className={style.userName}>\r\n                            User name : <span className={style.user__text}>{user.name}</span>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div className={style.userStatus}>User status :\r\n                        <span className={style.user__text}>\r\n                                {\r\n                                    user.status\r\n                                        ? user.status.slice(0, 50)\r\n                                        : \" empty\"\r\n                                }\r\n                                </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//type\r\n\r\ntype UsersPropsType = {\r\n    user: UserType\r\n    followingInProgress: string[]\r\n}","import React from \"react\";\r\nimport {Form, Formik, Field} from \"formik\";\r\nimport style from './UsersSearchForm.module.scss'\r\n\r\nimport {FilterType} from \"../../../../redux/usersReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport s from \"../../../Login/Login.module.scss\";\r\nimport {ReturnComponentType} from \"../../../../types/ReturnComponentType\";\r\nimport {getUsersFilter} from \"../../../../selectors\";\r\n\r\nconst usersSearchFormValidate = (values: { term: string; friend: FriendFormType }) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo(({onFilterChanged}): ReturnComponentType => {\r\n\r\n    const filter: FilterType = useSelector(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }): void => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <div className={style.search}>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n                validate={usersSearchFormValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {\r\n                    ({isSubmitting}) => (\r\n                        <Form className={style.searchForm}>\r\n                            <div className={style.searchForm__block}>\r\n                                <Field\r\n                                    className={style.searchForm__item__input}\r\n                                    type=\"text\"\r\n                                    name=\"term\"\r\n                                    placeholder=\"Write user name 🔎\"\r\n                                />\r\n                                <Field className={style.searchForm__item__select} name=\"friend\" as=\"select\">\r\n                                    <option value=\"null\">All</option>\r\n                                    <option value=\"true\">Only followed</option>\r\n                                    <option value=\"false\">Only unfollowed</option>\r\n                                </Field>\r\n                            </div>\r\n                            <div className={s.form__btn}>\r\n                                <button type=\"submit\" disabled={isSubmitting}>\r\n                                    Find\r\n                                </button>\r\n                            </div>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\n//types\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}","import React, {useEffect} from 'react';\r\nimport style from './Users.module.scss'\r\n\r\nimport {FilterType, requestUsers, UserType} from \"../../../redux/usersReducer\";\r\nimport {User} from \"./User/User\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm/UsersSearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"selectors/usersSelectors/usersSelectors\";\r\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\r\nimport {ReturnComponentType} from \"../../../types/ReturnComponentType\";\r\nimport {Paginator} from \"../../../common\";\r\n\r\nexport const Users: React.FC = (): ReturnComponentType => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    const parsedPage = searchParams.get('page')\r\n    const parsedTerm = searchParams.get('term')\r\n    const parsedFriend = searchParams.get('friend')\r\n\r\n    const totalUsersCount: number = useSelector(getTotalUsersCount)\r\n    const currentPage: number = useSelector(getCurrentPage)\r\n    const pageSize: number = useSelector(getPageSize)\r\n    const filter: FilterType = useSelector(getUsersFilter)\r\n    const users: Array<UserType> = useSelector(getUsers)\r\n    const followingInProgress: Array<string> = useSelector(getFollowingInProgress)\r\n    const pageValue: number = 1\r\n\r\n    const onPageChanged = (pageNumber: number): void => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType): void => {\r\n        dispatch(requestUsers(pageValue, pageSize, filter))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsedPage) actualPage = Number(parsedPage)\r\n        if (!!parsedTerm) actualFilter = {...actualFilter, term: parsedTerm as string}\r\n\r\n        switch (parsedFriend) {\r\n            case \"null\" :\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break\r\n            case \"true\" :\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break\r\n            case \"false\" :\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        const query = {} as queryObjType\r\n\r\n        if (!!parsedTerm) query.term = parsedTerm\r\n        if (currentPage !== pageValue) query.page = String(currentPage)\r\n        if (parsedFriend !== null) query.friends = String(parsedFriend)\r\n\r\n        const navigatePath = `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        navigate(navigatePath)\r\n\r\n    }, [filter, currentPage])\r\n\r\n    return (\r\n        <div className={style.users}>\r\n            <UsersSearchForm\r\n                onFilterChanged={onFilterChanged}\r\n            />\r\n            <div className={style.searchResult}>\r\n                {\r\n                    users.map(user => {\r\n                            return (\r\n                                <div key={user.id}>\r\n                                    <User\r\n                                        user={user}\r\n                                        followingInProgress={followingInProgress}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n            <Paginator\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n//types====\r\n\r\ntype queryObjType = {\r\n    term: string\r\n    page: string\r\n    friends: string\r\n}\r\n","import React from 'react';\r\nimport style from './Users.module.scss'\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {Users} from './Users';\r\nimport {ReturnComponentType} from \"../../../types/ReturnComponentType\";\r\nimport {Preloader} from \"../../../common\";\r\nimport {getIsFetching} from \"../../../selectors\";\r\n\r\n\r\nconst UsersPage: React.FC = (): ReturnComponentType => {\r\n\r\n    const isFetching: boolean = useSelector(getIsFetching)\r\n\r\n    return (\r\n        <section className={style.page}>\r\n            {isFetching ? <Preloader/> : null}\r\n            <Users/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default UsersPage\r\n"],"sourceRoot":""}