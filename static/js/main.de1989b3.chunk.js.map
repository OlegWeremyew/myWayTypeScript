{"version":3,"sources":["components/MainWindow/Messages/Messages.module.css","components/MainWindow/Profile/ProfileInfo/ProfileInfo.module.css","App.module.css","components/MainWindow/Users/Users.module.css","components/MainWindow/Profile/MyPosts/MyPosts.module.css","components/MainWindow/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","components/MainWindow/News/News.module.css","components/MainWindow/Music/Music.module.css","components/MainWindow/Friends/Friends.module.css","components/MainWindow/Settings/Settings.module.css","components/MainWindow/Messages/Message/Message.module.css","components/MainWindow/Messages/DialogItem/DialogsItem.module.css","common/Preloader/Preloader.module.css","components/MainWindow/Profile/Profile.module.css","components/Navbar/Navbar.module.css","Api/api.ts","redux/profileReducer.ts","redux/messagesReducer.ts","redux/sidebarPageReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/reduxStore.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/MainWindow/News/News.tsx","components/MainWindow/Music/Music.tsx","components/MainWindow/Friends/Friends.tsx","components/MainWindow/Settings/Settings.tsx","components/MainWindow/Messages/Message/Message.tsx","components/MainWindow/Messages/DialogItem/DialogsItem.tsx","components/MainWindow/Messages/Messages.tsx","hoc/withAuthRedirect/withAuthRedirect.tsx","components/MainWindow/Messages/MessagesContainer.tsx","assets/images/user.png","components/MainWindow/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","components/MainWindow/Users/UsersContainer.tsx","assets/images/avatar_for_profile.jpg","components/MainWindow/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/MainWindow/Profile/ProfileInfo/ProfileInfo.tsx","components/MainWindow/Profile/MyPosts/Post/Post.tsx","components/MainWindow/Profile/MyPosts/MyPosts.tsx","components/MainWindow/Profile/MyPosts/MyPostsContainer.tsx","components/MainWindow/Profile/Profile.tsx","components/MainWindow/Profile/ProfileContaeiner.tsx","hoc/withRouter/withRouter.tsx","assets/images/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","profileAPI","userId","status","put","authApi","initialState","posts","message","likesCount","id","newPostText","profile","updateNewPostText","newText","type","setStatus","users","name","img","messages","newMessageText","onMessagePostCreator","newMessage","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","toggleIsFetching","toggleFollowingProgress","isAuth","rootReducer","combineReducers","profilePage","state","action","newPost","Date","getTime","messagesPage","sidebar","usersPage","map","m","followed","count","filter","auth","email","login","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","c","nav","item","navData","isActive","activeLink","to","active","Footer","footer","News","news","Music","music","Friends","friends","Settings","settings","Message","props","DialogsItem","path","dialog","src","Messages","dialogsItem","u","dialogs","dialogItem","onChange","e","currentTarget","value","onMessagePost","rows","cols","placeholder","disabled","trim","onClick","addMessage","mapStateToProps","withAuthRedirect","WrappedComponent","connect","restProps","MessagesContainer","compose","dispatch","text","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onPageChanged","photos","small","user","userPhoto","alt","some","unfollow","follow","Preloader","preloader","UsersAPIComponent","pageNumber","getUsers","this","unfollowSuccess","React","Component","UsersContainer","setCurrentPage","items","totalCount","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","onDoubleClick","autoFocus","onBlur","ProfileInfo","avatarBlock","avatar","large","avatarDefault","Post","title","itemText","MyPosts","post","myPosts","onAddPost","MyPostsContainer","Profile","ProfileAPIContainer","getUserProfile","getUserStatus","ProfileContainer","resultCode","params","useParams","location","useLocation","Header","header","logo","loginBlock","HeaderContainer","getAuthUserData","setAuthUserData","Login","App","appContent","appContentWindow","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de1989b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__3WgMj\",\"dialogItem\":\"Messages_dialogItem__3jFPD\",\"dialog\":\"Messages_dialog__GFzRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ground\":\"ProfileInfo_ground__1iuZd\",\"ava\":\"ProfileInfo_ava__1jSav\",\"avatar\":\"ProfileInfo_avatar__22Iyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContent\":\"App_appContent__31heF\",\"appContentWindow\":\"App_appContentWindow__2gnhC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__jEelu\",\"selectedPage\":\"Users_selectedPage__2nEHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__FQQlZ\",\"posts\":\"MyPosts_posts__YPrmi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1LZi-\",\"itemText\":\"Post_itemText__3jxIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2rKXS\",\"loginBlock\":\"Header_loginBlock__1OEPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3XO3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__16Ki9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__20urC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2fVYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__ZkkZz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1KS8B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__2sybv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1Oc1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3Z-pR\",\"ava\":\"Profile_ava__3Hnfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ySm9p\",\"item\":\"Navbar_item__2xv0e\",\"activeLink\":\"Navbar_activeLink__1hYAc\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f5a121b3-d5d2-4866-a73a-ab1418f0e4d8\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n}\r\n\r\nexport const authApi = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../Api/api\";\r\n\r\nexport type PostType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string,\r\n    \"contacts\": {\r\n        \"facebook\": string,\r\n        \"website\": string,\r\n        \"vk\": string,\r\n        \"twitter\": string,\r\n        \"instagram\": string,\r\n        \"youtube\": string,\r\n        \"github\": string,\r\n        \"mainLink\": string\r\n    },\r\n    \"lookingForAJob\": string,\r\n    \"lookingForAJobDescription\": string,\r\n    \"fullName\": string,\r\n    \"userId\": number,\r\n    \"photos\": {\r\n        \"small\": string,\r\n        \"large\": string\r\n    }\r\n} | null\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {message: \"Hello\", likesCount: 12, id: 1},\r\n        {message: \"Dinosaurus are great\", likesCount: 17, id: 2}\r\n    ] as Array<PostType>,\r\n    newPostText: \"\" as string,\r\n    profile: null as ProfileType,\r\n    status: \"\",\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: ActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_POST\": {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: state.newPostText,\r\n                likesCount: 12\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case \"UPDATE_NEW_POST_TEXT\": {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case \"SET-STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ActionTypes = addPostType\r\n    | updateNewPostTextType\r\n    | setUserProfileType\r\n    | setProfileStatusType\r\n\r\nexport type addPostType = ReturnType<typeof addPost>\r\nexport const addPost = () => {\r\n    return {\r\n        type: \"ADD_POST\",\r\n    } as const\r\n}\r\n\r\nexport type updateNewPostTextType = ReturnType<typeof updateNewPostText>\r\nexport const updateNewPostText = (newText: string) => {\r\n    return {\r\n        type: \"UPDATE_NEW_POST_TEXT\",\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nconst setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: \"SET-USER-PROFILE\",\r\n        profile,\r\n    } as const\r\n}\r\n\r\nexport type setProfileStatusType = ReturnType<typeof setStatus>\r\nconst setStatus = (status: string) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        status,\r\n    } as const\r\n}\r\n\r\n// thunks -----------------------------------------------\r\nexport const getUserProfile = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n}\r\n\r\nexport const getUserStatus = (userId: number) => (dispatch: Dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data))\r\n        })\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\n","\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    img: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            name: \"Oleg\",\r\n            id: 1,\r\n            img: \"https://avatars.mds.yandex.net/get-zen_doc/3986249/pub_607ecd1d13c71c1ca8a34192_607ee065330a4f14d551104b/scale_1200\"\r\n        },\r\n        {\r\n            name: \"Diana\",\r\n            id: 2,\r\n            img: \"https://avatars.mds.yandex.net/i?id=64b380ea3aa0d80cad94cb1a24a3b3f5-4233014-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n        {name: \"Fat cat\", id: 3, img: \"https://data.whicdn.com/images/310252363/original.jpg\"},\r\n        {\r\n            name: \"Dimka\",\r\n            id: 4,\r\n            img: \"https://i.pinimg.com/originals/b7/44/46/b744464dd3d970ad96745be8de69d755.jpg\"\r\n        },\r\n        {\r\n            name: \"Ella\",\r\n            id: 5,\r\n            img: \"https://st.depositphotos.com/1023162/5099/i/950/depositphotos_50991807-stock-photo-sexy-woman-in-fashion-sunglasses.jpg\"\r\n        },\r\n        {\r\n            name: \"Makar\",\r\n            id: 6,\r\n            img: \"https://avatars.mds.yandex.net/i?id=55d09aa1629f72a149098b2c3127e039-5222024-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n    ] as Array<UserType>,\r\n    messages: [\r\n        {message: \"Hi\", id: 1},\r\n        {message: \"Ho\", id: 2},\r\n        {message: \"He\", id: 3},\r\n        {message: \"Hu\", id: 4},\r\n        {message: \"Hio\", id: 5},\r\n        {message: \"Hia\", id: 6},\r\n    ] as Array<MessageType>,\r\n    newMessageText: \"\" as string\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const messagesReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\": {\r\n            let newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: state.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: \"\"\r\n            }\r\n        }\r\n        case \"UPDATE_NEW_MESSAGE_TEXT\": {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newMessage\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionTypes = addMessageCreatorType | onMessagePostCreatorType\r\n\r\nexport type addMessageCreatorType = ReturnType<typeof addMessageCreator>\r\nexport const addMessageCreator = () => {\r\n    return {\r\n        type: \"ADD_MESSAGE\",\r\n    } as const\r\n}\r\nexport type onMessagePostCreatorType = ReturnType<typeof onMessagePostCreator>\r\nexport const onMessagePostCreator = (newMessage: string) => {\r\n    return {\r\n        type: \"UPDATE_NEW_MESSAGE_TEXT\",\r\n        newMessage: newMessage\r\n    } as const\r\n}\r\n\r\n\r\n","import {sidebarType} from \"./store\";\r\n\r\nconst initialState = {}\r\n\r\nexport const sidebarReducer = (state: sidebarType  = initialState, action: any) => {\r\n    return state\r\n}","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../Api/api\";\r\n\r\nconst initialState: initialStateType = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as number[],\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: string\r\n    photos: { small: string, large: string }\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nexport type initialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n\r\n\r\nexport const usersReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)\r\n            }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"TOGGLE-IS-FOLLOWING-IN-PROGRESS\": {\r\n            return {\r\n                ...state, followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = followType\r\n    | unFollowType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setTotalUsersCountType\r\n    | setIsFetchingType\r\n    | toggleFollowingProgressType\r\n\r\nexport type followType = ReturnType<typeof followSuccess>\r\nexport const followSuccess = (userID: number) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type unFollowType = ReturnType<typeof unfollowSuccess>\r\nexport const unfollowSuccess = (userID: number) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: \"SET-USERS\",\r\n        users,\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        currentPage,\r\n    } as const\r\n}\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: \"SET-TOTAL-USERS-COUNT\",\r\n        count: totalCount,\r\n    } as const\r\n}\r\n\r\nexport type setIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FETCHING\",\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\nexport type toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (followingInProgress: boolean, userId: number) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FOLLOWING-IN-PROGRESS\",\r\n        followingInProgress,\r\n        userId,\r\n    } as const\r\n}\r\n\r\n//=======================thunk\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n\r\n    return (dispatch: Dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n\r\n    return (dispatch: Dispatch) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number) => {\r\n\r\n    return (dispatch: Dispatch) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n","import {authApi} from \"../Api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type initialStateType = {\r\n    data: dataType\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\n\r\ntype dataType = {\r\n    userId: string\r\n    email: string\r\n    login: string\r\n}\r\n\r\nlet initialState = {\r\n    data: {} as dataType,\r\n    isFetching: true,\r\n    isAuth: false,\r\n}\r\n\r\nexport type ActionType = setUserDataType\r\n    | setToggleIsFetchingType\r\n    | setToggleIsAuthType\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\" : {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    email: action.data.email,\r\n                    login: action.data.login,\r\n                    userId: action.data.userId\r\n                },\r\n                isAuth: true,\r\n            }\r\n        }\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case 'TOGGLE-IS-AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype setUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (userId: string, email: string, login: string) => {\r\n    return {\r\n        type: \"SET-USER-DATA\",\r\n        data: {userId, email, login},\r\n    } as const\r\n}\r\n\r\ntype setToggleIsFetchingType = ReturnType<typeof setToggleIsFetching>\r\nexport const setToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching: isFetching\r\n    } as const\r\n}\r\n\r\ntype setToggleIsAuthType = ReturnType<typeof setToggleIsAuth>\r\nexport const setToggleIsAuth = (isAuth: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-AUTH',\r\n        isAuth: isAuth\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserData = () => (dispatch: Dispatch) => {\r\n    authApi.getAuth()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                dispatch(setAuthUserData(id, email, login))\r\n            }\r\n        })\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {messagesReducer} from \"./messagesReducer\";\r\nimport {sidebarReducer} from \"./sidebarPageReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport c from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/messages\">Message</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/friends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport c from \"./Footer.module.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n<div className={c.footer}>\r\n    Footer\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport c from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className={c.news}>\r\n            News\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport c from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div className={c.music}>\r\n            Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport c from \"./Friends.module.css\"\r\n\r\nconst Friends = () => {\r\n    return(\r\n        <div className={c.friends}>\r\n            Friends\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport c from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={c.settings}>\r\n            Settings\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport c from \"./Message.module.css\"\r\nimport {MessageType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst Message = (props: MessageType) => {\r\n\r\n    return (\r\n        <div className={c.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport c from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst DialogsItem = (props: UserType) => {\r\n\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={c.dialog}>\r\n            <div>\r\n                <img src={props.img}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;","import React, {ChangeEvent} from 'react';\r\nimport c from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport {UsersPropsType} from \"./MessagesContainer\";\r\n\r\nconst Messages = (props: UsersPropsType) => {\r\n\r\n    let dialogsItem = props.messagesPage.users\r\n        .map(u => <DialogsItem key={u.id} name={u.name} id={u.id} img={u.img}/>)\r\n    let message = props.messagesPage.messages\r\n        .map(m => <Message key={m.id} message={m.message} id={m.id}/>)\r\n\r\n    let addMessage = () => {\r\n        props.addMessage()\r\n    }\r\n\r\n    let onMessagePost = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let newText = e.currentTarget.value\r\n        props.onMessagePost(newText)\r\n    }\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogItem}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {message}\r\n                <div>\r\n                    <textarea onChange={onMessagePost} value={props.messagesPage.newMessageText}\r\n                              rows={10} cols={44} placeholder={'Write your message'}/>\r\n                </div>\r\n                <div>\r\n                    <button disabled={props.messagesPage.newMessageText.trim() === ''} onClick={addMessage}>Add\r\n                        message\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(WrappedComponent: React.ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Navigate to={'/login'}/>\r\n        }\r\n        return <WrappedComponent {...restProps as T} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","import React, {ComponentType} from 'react';\r\nimport {addMessageCreator, initialStateType, onMessagePostCreator} from \"../../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    messagesPage: initialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: () => void\r\n    onMessagePost: (text: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) : MapStateToPropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageCreator())\r\n        },\r\n        onMessagePost: (text: string) => {\r\n            text ? dispatch(onMessagePostCreator(text)) :\r\n                dispatch(onMessagePostCreator(\"\"));\r\n        },\r\n    }\r\n}\r\n\r\nexport let MessagesContainer = compose<ComponentType>(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Messages)\r\n","export default __webpack_public_path__ + \"static/media/user.00d92f05.png\";","import React from 'react';\r\nimport c from \"./Users.module.css\";\r\nimport user from \"../../../assets/images/user.png\";\r\nimport {UserType} from \"../../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    toggleFollowingProgress: (followingInProgress: boolean, userId: number) => void\r\n    followingInProgress: Array<any>\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = (Math.ceil(props.totalUsersCount / props.pageSize)) / 200\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n\r\n                    return <span key={p} className={(props.currentPage) === p ? c.selectedPage : \"\"}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(m => <div key={m.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + m.id}>\r\n                            <img src={m.photos.small !== null ? m.photos.small : user} className={c.userPhoto}\r\n                                 alt=\"photo\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                m.followed\r\n                                    ? <button disabled={props.followingInProgress.some(id => id === m.id)}\r\n                                              onClick={() => {\r\n                                                  props.unfollow(m.id)\r\n                                              }}>Unfollow</button>\r\n                                    : <button disabled={props.followingInProgress.some(id => id === m.id)}\r\n                                              onClick={() => {\r\n                                                  props.follow(m.id)\r\n                                              }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{m.name}</div>\r\n                            <div>{m.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"m.location.country\"}</div>\r\n                            <div>{\"m.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.1952935e.gif\";","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.gif\";\r\nimport c from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} className={c.preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React, {ComponentType} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {\r\n    followSuccess,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess,\r\n    UserType\r\n} from \"../../../redux/usersReducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    followSuccess: (userID: number) => void\r\n    unfollowSuccess: (userID: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingProgress: (followingInProgress: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.followSuccess}\r\n                    unfollow={this.props.unfollowSuccess}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\nexport let UsersContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        followSuccess,\r\n        unfollowSuccess,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        getUsers,\r\n    }), withAuthRedirect)(UsersAPIComponent)","export default __webpack_public_path__ + \"static/media/avatar_for_profile.e4c1e159.jpg\";","import React, {ChangeEvent} from 'react';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\ntype stateType = {\r\n    editMode: boolean\r\n    status: string\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<ProfileStatusType> {\r\n\r\n    state: stateType = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>}\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus value={this.state.status}\r\n                        onBlur={this.deactivateEditMode}\r\n                    />\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport c from \"./ProfileInfo.module.css\"\r\nimport avatarDefault from '../../../../assets/images/avatar_for_profile.jpg'\r\nimport {ProfileType} from \"../../../../redux/profileReducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n{/*            <div className={c.ground}>\r\n                <img\r\n                    src=\"https://img.lovepik.com/photo/50066/7884.jpg_wh860.jpg\" alt=\"fon image\" title=\"fon image\"/>\r\n            </div>*/}\r\n            <div className={c.avatarBlock}>\r\n                <div className={c.avatar}>\r\n                    <img alt='ava'\r\n                         src={props.profile && props.profile.photos.large !== null ? props.profile.photos.large : avatarDefault}/>\r\n                </div>\r\n                <ProfileStatus\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../../redux/profileReducer\";\r\n\r\nconst Post = (props: PostType) => {\r\n\r\n    return (\r\n        <div key={props.id} className={c.item}>\r\n            <img\r\n                src=\"https://slovami.net/wp-content/uploads/thumbs_dir/the-most-beautiful-guys-russia-4-1-nwkkkydf2f1mhw9a4ijzfs2ktasvevyjiyi4xibqis.jpg\"\r\n                alt=\"ava\" title=\"ava\"/>\r\n            <div className={c.itemText}>\r\n                {props.message}\r\n                <div>\r\n                    <span>like: {props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport c from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {ProfilePageType} from \"../../../../redux/store\";\r\nimport {UsersPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: UsersPropsType) => {\r\n\r\n    let post = props.profilePage.posts.map(p => <Post key={p.id}\r\n                                                      message={p.message}\r\n                                                      likesCount={p.likesCount}\r\n                                                      id={p.id}/>)\r\n\r\n    let addPost = () => {\r\n        props.onAddPost()\r\n    }\r\n\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let newText = e.currentTarget.value\r\n        props.updateNewPostText(newText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={c.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} value={props.profilePage.newPostText}\r\n                              placeholder={'Write your message'}/>\r\n                </div>\r\n                <div>\r\n                    <button disabled={props.profilePage.newPostText.trim() === ''} onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost, initialStateType, updateNewPostText} from \"../../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: initialStateType\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    onAddPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addPost())\r\n        },\r\n        updateNewPostText: (newText: string) => {\r\n            newText ? dispatch(updateNewPostText(newText)) :\r\n                dispatch(updateNewPostText(\"\"))\r\n        },\r\n    }\r\n}\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n","import React from 'react';\r\nimport c from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {ComponentType} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserStatus,\r\n    getUserProfile,\r\n    ProfileType,\r\n    updateUserStatus\r\n} from \"../../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {compose} from \"redux\";\r\nimport {InjectedProps, withRouter2} from \"../../../hoc/withRouter/withRouter\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n}\r\ntype MapDispatchToProps = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps & InjectedProps\r\n\r\nclass ProfileAPIContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId: string = this.props.userId\r\n        if (!userId) {\r\n            userId = '2';\r\n        }\r\n        this.props.getUserProfile(+userId)\r\n        this.props.getUserStatus(+userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateUserStatus={this.props.updateUserStatus}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport const ProfileContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n    }),\r\n    withRouter2,\r\n    //withAuthRedirect\r\n)(ProfileAPIContainer);\r\n","import React from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\n\r\nexport type locationType = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    state: object | null\r\n}\r\n\r\nexport type WrappedComponentWithRouterPropsType = {\r\n    userId: string\r\n    location: locationType\r\n}\r\n\r\nexport const withRouter = (WrappedComponent: typeof React.Component) => (props: object) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props}\r\n            userId={params.userId}\r\n            location={location}\r\n        />\r\n    );\r\n}\r\n\r\nexport type InjectedProps = {\r\n    userId : string\r\n}\r\n\r\n\r\nexport const withRouter2 = <T  extends object> (WrappedComponent: React.ComponentType<T>) => (props: T) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props as T}\r\n            userId={params.userId}\r\n            location={location}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.cbfad428.png\";","import React from 'react';\r\nimport c from \"./Header.module.css\"\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n\r\n    return (\r\n        <header className={c.header}>\r\n            <img src={logo} alt='logo' title=\"image logo\"/>\r\n            <div className={c.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? props.login\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype HeaderContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, HeaderContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer)\r\n","import React from 'react';\r\n\r\nexport const Login = (props: any) => {\r\n    return (\r\n        <h1>LOGIN</h1>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport c from './App.module.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport News from \"./components/MainWindow/News/News\";\r\nimport Music from \"./components/MainWindow/Music/Music\";\r\nimport Friends from \"./components/MainWindow/Friends/Friends\";\r\nimport Settings from \"./components/MainWindow/Settings/Settings\";\r\nimport {MessagesContainer} from \"./components/MainWindow/Messages/MessagesContainer\";\r\nimport {UsersContainer} from \"./components/MainWindow/Users/UsersContainer\";\r\nimport {ProfileContainer} from \"./components/MainWindow/Profile/ProfileContaeiner\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {Login} from \"./components/Login/Login\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <main className={c.appContent}>\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={c.appContentWindow}>\r\n                <Routes>\r\n                    <Route path=\"/profile/\" element={<ProfileContainer/>}>\r\n                        <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                    </Route>\r\n\r\n                    <Route path=\"/messages/\" element={<MessagesContainer/>}>\r\n                        <Route path=\":userId\" element={<MessagesContainer/>}/>\r\n                    </Route>\r\n\r\n                    <Route path=\"/users/*\" element={<UsersContainer/>}/>\r\n                    <Route path=\"/news/*\" element={<News/>}/>\r\n                    <Route path=\"/music/*\" element={<Music/>}/>\r\n                    <Route path=\"/settings/*\" element={<Settings/>}/>\r\n                    <Route path=\"/friends/*\" element={<Friends/>}/>\r\n\r\n                    <Route path=\"/login\" element={<Login/>}/>\r\n\r\n                </Routes>\r\n            </div>\r\n            <Footer/>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {store} from \"./redux/reduxStore\";\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n"],"sourceRoot":""}