{"version":3,"sources":["components/Navbar/Navbar.module.css","components/MainWindow/Messages/Messages.module.css","App.module.css","components/MainWindow/Profile/MyPosts/MyPosts.module.css","components/MainWindow/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","components/MainWindow/News/News.module.css","components/MainWindow/Music/Music.module.css","components/MainWindow/Friends/Friends.module.css","components/MainWindow/Settings/Settings.module.css","components/MainWindow/Messages/Message/Message.module.css","components/MainWindow/Messages/DialogItem/DialogsItem.module.css","components/MainWindow/Profile/Profile.module.css","components/MainWindow/Profile/ProfileInfo/ProfileInfo.module.css","redux/profileReducer.ts","redux/messagesReducer.ts","redux/state.ts","components/Header/logo.png","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/MainWindow/News/News.tsx","components/MainWindow/Music/Music.tsx","components/MainWindow/Friends/Friends.tsx","components/MainWindow/Settings/Settings.tsx","components/MainWindow/Messages/Message/Message.tsx","components/MainWindow/Messages/DialogItem/DialogsItem.tsx","components/MainWindow/Messages/Messages.tsx","components/MainWindow/Profile/MyPosts/Post/Post.tsx","components/MainWindow/Profile/MyPosts/MyPosts.tsx","components/MainWindow/Profile/ProfileInfo/ProfileInfo.tsx","components/MainWindow/Profile/Profile.tsx","App.tsx","index.tsx"],"names":["module","exports","updateNewPostTextCreator","newText","type","onMessagePostCreator","newMessage","store","_state","profilePage","posts","message","likesCount","id","newPostText","messagesPage","users","name","img","messages","newMessageText","sidebar","_callSubscriber","state","console","log","getState","this","subscribe","observer","dispatch","action","newPost","Date","getTime","push","profileReducer","messagesReducer","Header","className","c","header","src","logo","alt","title","Navbar","nav","item","navData","isActive","activeLink","to","active","Footer","footer","News","news","Music","music","Friends","friends","Settings","settings","Message","props","DialogsItem","path","dialog","Messages","newMessageElement","useRef","dialogsItem","map","u","m","dialogs","dialogItem","onChange","text","current","value","ref","rows","cols","placeholder","onClick","addMessageCreator","Post","itemText","MyPosts","post","p","newPostElement","myPosts","addPostCreator","ProfileInfo","profile","Profile","App","appContent","appContentWindow","element","rerenderEntireTree","ReactDOM","render","bind","document","getElementById"],"mappings":"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","file":"static/js/main.d1683008.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fdz2\",\"item\":\"Navbar_item__1onIf\",\"activeLink\":\"Navbar_activeLink__f94mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__2a5ir\",\"dialogItem\":\"Messages_dialogItem__1fljT\",\"dialog\":\"Messages_dialog__amYKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContent\":\"App_appContent__4mg9X\",\"appContentWindow\":\"App_appContentWindow__dnoS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Dxws\",\"posts\":\"MyPosts_posts__1WTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3IYxb\",\"itemText\":\"Post_itemText__rOuHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3WLj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__mhg74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__37yFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__JnEwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2_1Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__Wu77x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1_lWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__26p68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3rowZ\",\"ava\":\"Profile_ava__3qkus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__2ViAK\",\"ava\":\"ProfileInfo_ava__9e5p9\"};","import {ActionTypes, PostType, ProfilePageType} from \"./state\";\r\n\r\nconst initialState = {}\r\n\r\nexport const profileReducer = (state: ProfilePageType, action: ActionTypes): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_POST\": {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: state.newPostText,\r\n                likesCount: 12\r\n            }\r\n            state.posts.push(newPost)\r\n            state.newPostText = \"\"\r\n            return state\r\n        }\r\n\r\n        case \"UPDATE_NEW_POST_TEXT\": {\r\n            state.newPostText = action.newText\r\n            return state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n/*type ActionType = addPostCreatorType | updateNewPostTextCreatorType*/\r\n\r\nexport type addPostCreatorType = ReturnType<typeof addPostCreator>\r\nexport const addPostCreator = (newText: string) => {\r\n    return {\r\n        type: \"ADD_POST\",\r\n        newText: newText\r\n    } as const\r\n}\r\nexport type updateNewPostTextCreatorType = ReturnType<typeof updateNewPostTextCreator>\r\nexport const updateNewPostTextCreator = (newText: string) => {\r\n    return {\r\n        type: \"UPDATE_NEW_POST_TEXT\",\r\n        newText: newText\r\n    } as const\r\n}\r\n\r\n","import {ActionTypes, MessagesPageType, MessageType} from \"./state\";\r\n\r\nconst initialState = {}\r\n\r\nexport const messagesReducer = (state: MessagesPageType, action: ActionTypes): MessagesPageType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\": {\r\n            let newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: state.newMessageText,\r\n            }\r\n            state.messages.push(newMessage)\r\n            state.newMessageText = \"\"\r\n            return state\r\n        }\r\n        case \"UPDATE_NEW_MESSAGE_TEXT\": {\r\n            state.newMessageText = action.newMessage\r\n            return state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/*type ActionType = addMessageCreatorType | onMessagePostCreatorType*/\r\n\r\nexport type addMessageCreatorType = ReturnType<typeof addMessageCreator>\r\nexport const addMessageCreator = (newMessage: string) => {\r\n    return {\r\n        type: \"ADD_MESSAGE\",\r\n        newMessage: newMessage\r\n    } as const\r\n}\r\nexport type onMessagePostCreatorType = ReturnType<typeof onMessagePostCreator>\r\nexport const onMessagePostCreator = (newMessage: string) => {\r\n    return {\r\n        type: \"UPDATE_NEW_MESSAGE_TEXT\",\r\n        newMessage: newMessage\r\n    } as const\r\n}\r\n\r\n\r\n","//types ===================================================================\r\n\r\nimport {addPostCreatorType, profileReducer, updateNewPostTextCreatorType} from \"./profileReducer\";\r\nimport {addMessageCreatorType, messagesReducer, onMessagePostCreatorType} from \"./messagesReducer\";\r\nimport {sidebarReducer} from \"./sidebarPageReducer\";\r\n\r\nexport type ActionTypes = addPostCreatorType\r\n    | updateNewPostTextCreatorType\r\n    | addMessageCreatorType\r\n    | onMessagePostCreatorType\r\n\r\n\r\nexport type PostType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    img: string\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\nexport type MessagesPageType = {\r\n    users: Array<UserType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\nexport type sidebarType = any\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    messagesPage: MessagesPageType\r\n    sidebar: sidebarType\r\n}\r\n\r\nexport type SubscribeType = (state: RootStateType) => void\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    _callSubscriber: (state: RootStateType) => void\r\n\r\n    getState: () => RootStateType\r\n    subscribe: (observer: SubscribeType) => void\r\n\r\n    /*addPost: (postMessage: string) => void\r\n    updateNewPostText: (newText: string) => void\r\n    addMessage: (AddNewMessage: string) => void\r\n    updateNewMessageText: (newMessageText: string) => void*/\r\n    dispatch: (action: any) => void\r\n}\r\n\r\n//store =======================================================================\r\n\r\nexport let store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {message: \"Hello\", likesCount: 12, id: 1},\r\n                {message: \"Dinosaurus are great\", likesCount: 17, id: 2}\r\n            ],\r\n            newPostText: \"\"\r\n        },\r\n        messagesPage: {\r\n            users: [\r\n                {\r\n                    name: \"Oleg\",\r\n                    id: 1,\r\n                    img: \"https://avatars.mds.yandex.net/get-zen_doc/3986249/pub_607ecd1d13c71c1ca8a34192_607ee065330a4f14d551104b/scale_1200\"\r\n                },\r\n                {\r\n                    name: \"Diana\",\r\n                    id: 2,\r\n                    img: \"https://avatars.mds.yandex.net/i?id=64b380ea3aa0d80cad94cb1a24a3b3f5-4233014-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n                },\r\n                {name: \"Fat cat\", id: 3, img: \"https://data.whicdn.com/images/310252363/original.jpg\"},\r\n                {\r\n                    name: \"Dimka\",\r\n                    id: 4,\r\n                    img: \"https://i.pinimg.com/originals/b7/44/46/b744464dd3d970ad96745be8de69d755.jpg\"\r\n                },\r\n                {\r\n                    name: \"Ella\",\r\n                    id: 5,\r\n                    img: \"https://st.depositphotos.com/1023162/5099/i/950/depositphotos_50991807-stock-photo-sexy-woman-in-fashion-sunglasses.jpg\"\r\n                },\r\n                {\r\n                    name: \"Makar\",\r\n                    id: 6,\r\n                    img: \"https://avatars.mds.yandex.net/i?id=55d09aa1629f72a149098b2c3127e039-5222024-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n                },\r\n            ],\r\n            messages: [\r\n                {message: \"Hi\", id: 1},\r\n                {message: \"Ho\", id: 2},\r\n                {message: \"He\", id: 3},\r\n                {message: \"Hu\", id: 4},\r\n                {message: \"Hio\", id: 5},\r\n                {message: \"Hia\", id: 6},\r\n            ],\r\n            newMessageText: \"\"\r\n        },\r\n        sidebar: {}\r\n    },\r\n    _callSubscriber: (state: RootStateType) => {\r\n        console.log(\"state changed\")\r\n    }, //у димыча onChange называется\r\n\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer: SubscribeType) {\r\n        this._callSubscriber = observer // наблюдатель //у димыча callback называется\r\n    },\r\n    dispatch(action: ActionTypes) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.messagesPage = messagesReducer(this._state.messagesPage, action)\r\n        //sidebarReducer({}, action)\r\n\r\n        this._callSubscriber(this._state)\r\n\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.cbfad428.png\";","import React from 'react';\r\nimport c from\"./Header.module.css\"\r\nimport logo from \"./logo.png\"\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header className={c.header}>\r\n        <img src={logo} alt='logo' title=\"image logo\"/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport c from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/messages\">Message</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/friends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport c from \"./Footer.module.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n<div className={c.footer}>\r\n    Footer\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport c from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className={c.news}>\r\n            News\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport c from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div className={c.music}>\r\n            Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport c from \"./Friends.module.css\"\r\n\r\nconst Friends = () => {\r\n    return(\r\n        <div className={c.friends}>\r\n            Friends\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport c from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={c.settings}>\r\n            Settings\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport c from \"./Message.module.css\"\r\nimport {MessageType} from \"../../../../redux/state\";\r\n\r\nconst Message = (props: MessageType) => {\r\n\r\n    return (\r\n        <div className={c.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport c from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../../../redux/state\";\r\n\r\nconst DialogsItem = (props: UserType) => {\r\n\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={c.dialog}>\r\n            <div>\r\n                <img src={props.img}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;","import React, {useRef} from 'react';\r\nimport c from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport {ActionTypes, MessagesPageType} from \"../../../redux/state\";\r\nimport {addMessageCreator, onMessagePostCreator} from \"../../../redux/messagesReducer\";\r\n\r\ntype MessagesType = {\r\n    state: MessagesPageType\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nconst Messages = (props: MessagesType) => {\r\n\r\n    let newMessageElement = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addMessage = () => {\r\n        let newMessage = newMessageElement.current?.value\r\n        if (newMessage) props.dispatch(addMessageCreator(newMessage))\r\n        if (newMessageElement.current) newMessageElement.current.value = ''\r\n    }\r\n\r\n    let onMessagePost = () => {\r\n        let text = newMessageElement.current?.value\r\n        text ? props.dispatch(onMessagePostCreator(text)) :\r\n            props.dispatch(onMessagePostCreator(\"\"));\r\n    }\r\n\r\n    let dialogsItem = props.state.users.map(u => <DialogsItem key={u.id} name={u.name} id={u.id} img={u.img}/>)\r\n    let message = props.state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>)\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogItem}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {message}\r\n                <div>\r\n                    <textarea onChange={onMessagePost} value={props.state.newMessageText} ref={newMessageElement}\r\n                              rows={10} cols={44} placeholder={'Write your message'}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addMessage}>Add message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport c from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../../redux/state\";\r\n\r\nconst Post = (props: PostType) => {\r\n\r\n    return (\r\n        <div key={props.id} className={c.item}>\r\n            <img\r\n                src=\"https://slovami.net/wp-content/uploads/thumbs_dir/the-most-beautiful-guys-russia-4-1-nwkkkydf2f1mhw9a4ijzfs2ktasvevyjiyi4xibqis.jpg\"\r\n                alt=\"ava\" title=\"ava\"/>\r\n            <div className={c.itemText}>\r\n                {props.message}\r\n                <div>\r\n                    <span>like: {props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {useRef} from 'react';\r\nimport c from \"./MyPosts.module.css\"\r\nimport {ActionTypes, ProfilePageType} from \"../../../../redux/state\";\r\nimport Post from \"./Post/Post\";\r\nimport {addPostCreator, updateNewPostTextCreator} from \"../../../../redux/profileReducer\";\r\n\r\nexport type MyPostMessageType = {\r\n    profilePage: ProfilePageType\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\n\r\nconst MyPosts = (props: MyPostMessageType) => {\r\n\r\n    let post = props.profilePage.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} id={p.id}/>)\r\n\r\n    let newPostElement = useRef<HTMLTextAreaElement>(null);\r\n\r\n    let addPost = () => {\r\n        let newText = newPostElement.current?.value\r\n        if (newText) props.dispatch(addPostCreator(newText))\r\n        if (newPostElement.current) newPostElement.current.value = ''\r\n    }\r\n\r\n    const onPostChange = () => {\r\n        let newText = newPostElement.current?.value\r\n        newText ? props.dispatch(updateNewPostTextCreator(newText)) :\r\n            props.dispatch(updateNewPostTextCreator(\"\"))\r\n    }\r\n\r\n    return (\r\n        <div className={c.myPosts}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}\r\n                              placeholder={'Write your message'}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={c.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport c from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={c.profile}>\r\n            <img\r\n                src=\"https://img.lovepik.com/photo/50066/7884.jpg_wh860.jpg\" alt=\"fone\" title=\"fon image\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from \"./Profile.module.css\"\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ActionTypes, ProfilePageType} from \"../../../redux/state\";\r\n\r\ntype ProfileType = {\r\n    profilePage: ProfilePageType\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nconst Profile = (props: ProfileType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n            <ProfileInfo/>\r\n            <MyPosts profilePage={props.profilePage}\r\n                     dispatch={props.dispatch}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport c from './App.module.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport News from \"./components/MainWindow/News/News\";\r\nimport Music from \"./components/MainWindow/Music/Music\";\r\nimport Friends from \"./components/MainWindow/Friends/Friends\";\r\nimport Settings from \"./components/MainWindow/Settings/Settings\";\r\nimport Messages from \"./components/MainWindow/Messages/Messages\";\r\nimport Profile from \"./components/MainWindow/Profile/Profile\";\r\nimport {ActionTypes, RootStateType} from \"./redux/state\";\r\n\r\ntype AppStateType = {\r\n    state: RootStateType\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nfunction App(props: AppStateType) {\r\n\r\n    const state = props.state\r\n\r\n    return (\r\n        <main className={c.appContent}>\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className={c.appContentWindow}>\r\n                <Routes>\r\n\r\n                    <Route path=\"/profile/*\" element={\r\n                               <Profile\r\n                                   profilePage={state.profilePage}\r\n                                   dispatch={props.dispatch}\r\n                               />}/>\r\n\r\n                    <Route path=\"/messages/*\" element={\r\n                               <Messages\r\n                                   state={state.messagesPage}\r\n                                   dispatch={props.dispatch}\r\n                               />}/>\r\n\r\n                    <Route path=\"/news/*\" element={<News/>}/>\r\n                    <Route path=\"/music/*\" element={<Music/>}/>\r\n                    <Route path=\"/settings/*\" element={<Settings/>}/>\r\n                    <Route path=\"/friends/*\" element={<Friends/>}/>\r\n\r\n                </Routes>\r\n            </div>\r\n            <Footer/>\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {RootStateType, store}  from \"./redux/state\";\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nlet rerenderEntireTree = (state: RootStateType) => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <App\r\n                state={store.getState()}\r\n                dispatch={store.dispatch.bind(store)}\r\n            />\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nrerenderEntireTree(store.getState())\r\n\r\nstore.subscribe(rerenderEntireTree)\r\n\r\n"],"sourceRoot":""}