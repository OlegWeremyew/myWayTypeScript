{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Footer/Footer.module.css","components/MainWindow/News/News.module.css","components/MainWindow/Music/Music.module.css","components/MainWindow/Friends/Friends.module.css","components/MainWindow/Settings/Settings.module.css","components/MainWindow/Messages/Message/Message.module.css","components/MainWindow/Messages/DialogItem/DialogsItem.module.css","common/Preloader/Preloader.module.css","components/MainWindow/Profile/Profile.module.css","Api/api.ts","redux/profileReducer.ts","redux/messagesReducer.ts","redux/sidebarPageReducer.ts","redux/usersReducer.ts","redux/authReducer.ts","redux/AppReducer.ts","redux/reduxStore.ts","components/Navbar/Navbar.tsx","components/Footer/Footer.tsx","components/MainWindow/News/News.tsx","components/MainWindow/Music/Music.tsx","components/MainWindow/Friends/Friends.tsx","components/MainWindow/Settings/Settings.tsx","components/MainWindow/Messages/Message/Message.tsx","components/MainWindow/Messages/DialogItem/DialogsItem.tsx","common/FormsControls/FormsControls.tsx","utils/validators/validators.tsx","components/MainWindow/Messages/AddMessageForm/AddMessageForm.tsx","hoc/withAuthRedirect/withAuthRedirect.tsx","components/MainWindow/Messages/MessagesContainer.tsx","components/MainWindow/Messages/Messages.tsx","assets/images/user.png","components/MainWindow/Users/Users.tsx","assets/images/preloader.gif","common/Preloader/Preloader.tsx","redux/usersSelectors.ts","components/MainWindow/Users/UsersContainer.tsx","assets/images/avatar_for_profile.jpg","components/MainWindow/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/MainWindow/Profile/ProfileInfo/ProfileInfo.tsx","components/MainWindow/Profile/MyPosts/Post/Post.tsx","components/MainWindow/Profile/MyPosts/MyPosts.tsx","components/MainWindow/Profile/MyPosts/MyPostsContainer.tsx","components/MainWindow/Profile/Profile.tsx","components/MainWindow/Profile/ProfileContaeiner.tsx","hoc/withRouter/withRouter.tsx","assets/images/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","App.tsx","index.tsx","common/FormsControls/FormsControls.module.css","components/MainWindow/Messages/Messages.module.css","components/MainWindow/Profile/ProfileInfo/ProfileInfo.module.css","App.module.css","components/MainWindow/Users/Users.module.css","components/MainWindow/Profile/MyPosts/MyPosts.module.css","components/MainWindow/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","profileAPI","userId","status","put","authApi","email","password","rememberMe","post","delete","initialState","posts","message","likesCount","id","profile","setStatus","type","users","name","img","messages","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","setCurrentPage","toggleIsFetching","toggleFollowingProgress","isAuth","setAuthUserData","login","payload","getAuthUserData","dispatch","resultCode","initialized","rootReducer","combineReducers","profilePage","state","action","newPost","Date","getTime","newPostText","filter","f","postId","messagesPage","newMessage","newMessageText","sidebar","usersPage","map","m","followed","count","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","c","nav","item","navData","isActive","activeLink","to","active","Footer","footer","News","news","Music","music","Friends","friends","Settings","settings","Message","props","DialogsItem","path","dialog","src","FormControl","input","meta","child","element","hasError","touched","error","styleError","styles","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","ReduxAddMessageForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","mapStateToProps","withAuthRedirect","WrappedComponent","connect","MessagesContainer","compose","addMessage","addMessageCreator","dialogsItem","u","dialogs","dialogItem","values","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onClick","onPageChanged","photos","small","user","userPhoto","alt","disabled","some","unfollow","follow","Preloader","preloader","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","requestUsers","this","unfollowSuccess","React","Component","UsersContainer","page","items","totalCount","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","updateUserStatus","onStatusChange","autoFocus","onBlur","ProfileInfo","avatarBlock","avatar","large","avatarDefault","Post","title","itemText","MyPosts","memo","myPosts","ReduxAddNewPostForm","onAddPost","AddNewPost","MyPostsContainer","addPost","Profile","ProfileAPIContainer","authorizedUserID","history","getUserProfile","getUserStatus","ProfileContainer","params","useParams","location","useLocation","Header","header","logo","loginBlock","logout","HeaderContainer","Login","LoginReduxForm","formData","style","formSummuryError","LoginAPIContainer","LoginContainer","stopSubmit","_error","App","initializeApp","appContent","appContentWindow","AppContainer","promise","Promise","all","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.845fec7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Fdz2\",\"item\":\"Navbar_item__1onIf\",\"activeLink\":\"Navbar_activeLink__f94mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__mhg74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__37yFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__JnEwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2_1Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__Wu77x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1_lWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__26p68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3C5_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3rowZ\",\"ava\":\"Profile_ava__3qkus\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f5a121b3-d5d2-4866-a73a-ab1418f0e4d8\",\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n}\r\n\r\nexport const authApi = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../Api/api\";\r\nimport {ActionAllType} from \"./reduxStore\";\r\n\r\nexport type ActionProfileTypes = addPostType\r\n    | setUserProfileType\r\n    | setProfileStatusType\r\n    | deletePostType\r\n\r\n\r\nexport type PostType = {\r\n    message: string\r\n    likesCount: number\r\n    id: number\r\n}\r\n\r\nexport type ProfileType = {\r\n    \"aboutMe\": string,\r\n    \"contacts\": {\r\n        \"facebook\": string,\r\n        \"website\": string,\r\n        \"vk\": string,\r\n        \"twitter\": string,\r\n        \"instagram\": string,\r\n        \"youtube\": string,\r\n        \"github\": string,\r\n        \"mainLink\": string\r\n    },\r\n    \"lookingForAJob\": string,\r\n    \"lookingForAJobDescription\": string,\r\n    \"fullName\": string,\r\n    \"userId\": number,\r\n    \"photos\": {\r\n        \"small\": string,\r\n        \"large\": string\r\n    }\r\n} | null\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {message: \"Hello\", likesCount: 12, id: 1},\r\n        {message: \"Dinosaurs are great\", likesCount: 17, id: 2}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType,\r\n    status: \"\",\r\n}\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: ActionProfileTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_POST\": {\r\n            let newPost: PostType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 12\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        }\r\n        case \"DELETED_POST\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(f=>f.id !== action.postId),\r\n            }\r\n        }\r\n\r\n        case \"SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case \"SET-STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport type addPostType = ReturnType<typeof addPost>\r\nexport const addPost = (newPostText: string) => {\r\n    return {\r\n        type: \"ADD_POST\",\r\n        newPostText,\r\n    } as const\r\n}\r\n\r\nexport type deletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => {\r\n    return {\r\n        type: \"DELETED_POST\",\r\n        postId,\r\n    } as const\r\n}\r\n\r\n\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nconst setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: \"SET-USER-PROFILE\",\r\n        profile,\r\n    } as const\r\n}\r\n\r\nexport type setProfileStatusType = ReturnType<typeof setStatus>\r\nconst setStatus = (status: string) => {\r\n    return {\r\n        type: \"SET-STATUS\",\r\n        status,\r\n    } as const\r\n}\r\n\r\n// thunks -----------------------------------------------\r\nexport const getUserProfile = (userId: string) => (dispatch: Dispatch<ActionAllType>) => {\r\n    profileAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n}\r\n\r\nexport const getUserStatus = (userId: string) => (dispatch: Dispatch<ActionAllType>) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data))\r\n        })\r\n}\r\n\r\nexport const updateUserStatus = (status: string) => (dispatch: Dispatch<ActionAllType>) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\n","export type ActionMessageTypes = addMessageCreatorType\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    img: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            name: \"Oleg\",\r\n            id: 1,\r\n            img: \"https://avatars.mds.yandex.net/get-zen_doc/3986249/pub_607ecd1d13c71c1ca8a34192_607ee065330a4f14d551104b/scale_1200\"\r\n        },\r\n        {\r\n            name: \"Diana\",\r\n            id: 2,\r\n            img: \"https://avatars.mds.yandex.net/i?id=64b380ea3aa0d80cad94cb1a24a3b3f5-4233014-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n        {name: \"Fat cat\", id: 3, img: \"https://data.whicdn.com/images/310252363/original.jpg\"},\r\n        {\r\n            name: \"Dimka\",\r\n            id: 4,\r\n            img: \"https://i.pinimg.com/originals/b7/44/46/b744464dd3d970ad96745be8de69d755.jpg\"\r\n        },\r\n        {\r\n            name: \"Ella\",\r\n            id: 5,\r\n            img: \"https://st.depositphotos.com/1023162/5099/i/950/depositphotos_50991807-stock-photo-sexy-woman-in-fashion-sunglasses.jpg\"\r\n        },\r\n        {\r\n            name: \"Makar\",\r\n            id: 6,\r\n            img: \"https://avatars.mds.yandex.net/i?id=55d09aa1629f72a149098b2c3127e039-5222024-images-thumbs&ref=rim&n=33&w=150&h=150\"\r\n        },\r\n    ] as Array<UserType>,\r\n    messages: [\r\n        {message: \"Hi\", id: 1},\r\n        {message: \"Ho\", id: 2},\r\n        {message: \"He\", id: 3},\r\n        {message: \"Hu\", id: 4},\r\n        {message: \"Hio\", id: 5},\r\n        {message: \"Hia\", id: 6},\r\n    ] as Array<MessageType>,\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nexport const messagesReducer = (state: initialStateType = initialState, action: ActionMessageTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\": {\r\n            let newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                message: action.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type addMessageCreatorType = ReturnType<typeof addMessageCreator>\r\nexport const addMessageCreator = (newMessageText: string) => {\r\n    return {\r\n        type: \"ADD_MESSAGE\",\r\n        newMessageText\r\n    } as const\r\n}\r\n\r\n","import {sidebarType} from \"./store\";\r\n\r\nconst initialState = {}\r\n\r\nexport const sidebarReducer = (state: sidebarType  = initialState, action: any) => {\r\n    return state\r\n}","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../Api/api\";\r\nimport {ActionAllType} from \"./reduxStore\";\r\n\r\nexport type ActionUsersTypes = followType\r\n    | unFollowType\r\n    | setUsersType\r\n    | setCurrentPageType\r\n    | setTotalUsersCountType\r\n    | setIsFetchingType\r\n    | toggleFollowingProgressType\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: string\r\n    uniqueUrlName: string\r\n    photos: { small: string, large: string }\r\n    status: string\r\n    followed: boolean\r\n}\r\n\r\nexport type initialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: string[]\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n    users: [] as UserType[],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as string[],\r\n}\r\n\r\nexport const usersReducer = (state: initialStateType = initialState, action: ActionUsersTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)\r\n            }\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {\r\n                ...state, totalUsersCount: action.count\r\n            }\r\n        }\r\n        case \"TOGGLE-IS-FETCHING\": {\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"TOGGLE-IS-FOLLOWING-IN-PROGRESS\": {\r\n            return {\r\n                ...state, followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type followType = ReturnType<typeof followSuccess>\r\nexport const followSuccess = (userID: string) => {\r\n    return {\r\n        type: \"FOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type unFollowType = ReturnType<typeof unfollowSuccess>\r\nexport const unfollowSuccess = (userID: string) => {\r\n    return {\r\n        type: \"UNFOLLOW\",\r\n        userID,\r\n    } as const\r\n}\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: Array<UserType>) => {\r\n    return {\r\n        type: \"SET-USERS\",\r\n        users,\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: \"SET-CURRENT-PAGE\",\r\n        currentPage,\r\n    } as const\r\n}\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {\r\n        type: \"SET-TOTAL-USERS-COUNT\",\r\n        count: totalCount,\r\n    } as const\r\n}\r\n\r\nexport type setIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FETCHING\",\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\nexport type toggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (followingInProgress: boolean, userId: string) => {\r\n    return {\r\n        type: \"TOGGLE-IS-FOLLOWING-IN-PROGRESS\",\r\n        followingInProgress,\r\n        userId,\r\n    } as const\r\n}\r\n\r\n//=======================thunk\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n\r\n    return (dispatch: Dispatch<ActionAllType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        usersAPI.getUsers(page, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const follow = (userId: string) => {\r\n\r\n    return (dispatch: Dispatch<ActionAllType>) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: string) => {\r\n\r\n    return (dispatch: Dispatch<ActionAllType>) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n","import {authApi} from \"../Api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ActionAllType, AppThunkType} from \"./reduxStore\";\r\n\r\nexport type initialStateType = {\r\n    data: dataType\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\n\r\ntype dataType = {\r\n    userId: string\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState = {\r\n    data: {} as dataType,\r\n    isFetching: true,\r\n    isAuth: false,\r\n}\r\n\r\nexport type ActionAuthReducerType = setUserDataType\r\n    | setToggleIsFetchingType\r\n    | setToggleIsAuthType\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: ActionAuthReducerType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\" : {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    email: action.payload.email,\r\n                    login: action.payload.login,\r\n                    userId: action.payload.userId,\r\n                },\r\n                isAuth: action.payload.isAuth\r\n            }\r\n        }\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case 'TOGGLE-IS-AUTH':\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype setUserDataType = ReturnType<typeof setAuthUserData>\r\nexport const setAuthUserData = (userId: string, email: string, login: string, isAuth: boolean) => {\r\n    return {\r\n        type: \"SET-USER-DATA\",\r\n        payload: {\r\n            userId,\r\n            email,\r\n            login,\r\n            isAuth\r\n        },\r\n    } as const\r\n}\r\n\r\ntype setToggleIsFetchingType = ReturnType<typeof setToggleIsFetching>\r\nexport const setToggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching: isFetching\r\n    } as const\r\n}\r\n\r\ntype setToggleIsAuthType = ReturnType<typeof setToggleIsAuth>\r\nexport const setToggleIsAuth = (isAuth: boolean) => {\r\n    return {\r\n        type: 'TOGGLE-IS-AUTH',\r\n        isAuth: isAuth\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserData = (): AppThunkType => (dispatch: Dispatch<ActionAllType>) => {\r\n    return authApi.getAuth()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n        })\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): AppThunkType => (dispatch: any) => {\r\n    authApi.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0\r\n                    ? response.data.messages[0]\r\n                    : \"Some error\"\r\n                dispatch(stopSubmit(\"Login\", {_error: message}))\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = () => (dispatch: Dispatch<ActionAllType>) => {\r\n    authApi.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(\"\", \"\", \"\", false))\r\n            }\r\n        })\r\n}\r\n","import {getAuthUserData} from \"./authReducer\";\r\nimport {AppThunkType} from \"./reduxStore\";\r\n\r\nexport type initialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type ActionAppReducerType = initializedSuccessType\r\n\r\nexport const appReducer = (state: initialStateType = initialState, action: ActionAppReducerType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALIZED\" : {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype initializedSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: 'SET-INITIALIZED',\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = (): AppThunkType => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ActionProfileTypes, profileReducer} from \"./profileReducer\";\r\nimport {ActionMessageTypes, messagesReducer} from \"./messagesReducer\";\r\nimport {sidebarReducer} from \"./sidebarPageReducer\";\r\nimport {ActionUsersTypes, usersReducer} from \"./usersReducer\";\r\nimport {ActionAuthReducerType, authReducer} from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport {ActionAppReducerType, appReducer} from \"./AppReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type ActionAllType = ActionProfileTypes\r\n    | ActionMessageTypes\r\n    | ActionUsersTypes\r\n    | ActionAuthReducerType\r\n    | ActionAppReducerType\r\n\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, ActionAllType>","import React from 'react';\r\nimport c from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <nav className={c.nav}>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/messages\">Message</NavLink>\r\n            </div>\r\n            <div className={ `${c.item} ${c.active}` }>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/news\">News</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/music\">Music</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/settings\">Settings</NavLink>\r\n            </div>\r\n            <div className={c.item}>\r\n                <NavLink className={ (navData) => navData.isActive? c.activeLink: \"\"} to=\"/friends\">Friends</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport c from \"./Footer.module.css\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n<div className={c.footer}>\r\n    Footer\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport c from \"./News.module.css\"\r\n\r\nconst News = () => {\r\n    return(\r\n        <div className={c.news}>\r\n            News\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport c from \"./Music.module.css\"\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div className={c.music}>\r\n            Music\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport c from \"./Friends.module.css\"\r\n\r\nconst Friends = () => {\r\n    return(\r\n        <div className={c.friends}>\r\n            Friends\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport c from \"./Settings.module.css\"\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div className={c.settings}>\r\n            Settings\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport c from \"./Message.module.css\"\r\nimport {MessageType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst Message = (props: MessageType) => {\r\n\r\n    return (\r\n        <div className={c.message}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport c from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../../../redux/messagesReducer\";\r\n\r\nconst DialogsItem = (props: UserType) => {\r\n\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={c.dialog}>\r\n            <div>\r\n                <img src={props.img}/>\r\n            </div>\r\n            <div>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsItem;","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, element, ...props}: any) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    const styleError = hasError ? styles.error : \"\"\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + styleError}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    const {input, meta, child, element, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","import React from 'react';\r\n\r\nexport const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {FormMessagesType} from \"../Messages\";\r\n\r\nconst maxLength = maxLengthCreator(30)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormMessagesType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"newMessageText\"}\r\n                    placeholder={\"Write your message\"}\r\n                    validate={[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ReduxAddMessageForm = reduxForm<FormMessagesType>({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(WrappedComponent: React.ComponentType<T>) {\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Navigate to={'/login'}/>\r\n        }\r\n        return <WrappedComponent {...restProps as T} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n","import React, {ComponentType} from 'react';\r\nimport {addMessageCreator, initialStateType} from \"../../../redux/messagesReducer\";\r\nimport {Messages} from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    messagesPage: initialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType) : MapStateToPropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addMessage: (newMessageText: string) => {\r\n            dispatch(addMessageCreator(newMessageText))\r\n        },\r\n    }\r\n}\r\n\r\nexport let MessagesContainer = compose<ComponentType>(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Messages)\r\n","import React, {ChangeEvent} from 'react';\r\nimport c from \"./Messages.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogsItem from \"./DialogItem/DialogsItem\";\r\nimport {UsersPropsType} from \"./MessagesContainer\";\r\nimport {ReduxAddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport type FormMessagesType = {\r\n    newMessageText: string\r\n}\r\n\r\nexport const Messages = (props: UsersPropsType) => {\r\n\r\n    let dialogsItem = props.messagesPage.users\r\n        .map(u => <DialogsItem key={u.id} name={u.name} id={u.id} img={u.img}/>)\r\n    let message = props.messagesPage.messages\r\n        .map(m => <Message key={m.id} message={m.message} id={m.id}/>)\r\n\r\n    const addMessage = (values: FormMessagesType) => {\r\n        props.addMessage(values.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={c.dialogs}>\r\n            <div className={c.dialogItem}>\r\n                {dialogsItem}\r\n            </div>\r\n            <div className={c.messages}>\r\n                {message}\r\n            </div>\r\n            <ReduxAddMessageForm onSubmit={addMessage}/>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/user.00d92f05.png\";","import React from 'react';\r\nimport c from \"./Users.module.css\";\r\nimport user from \"../../../assets/images/user.png\";\r\nimport {UserType} from \"../../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    follow: (userID: string) => void\r\n    unfollow: (userID: string) => void\r\n    toggleFollowingProgress: (followingInProgress: boolean, userId: number) => void\r\n    followingInProgress: Array<any>\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = (Math.ceil(props.totalUsersCount / props.pageSize)) / 200\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n\r\n                    return <span key={p} className={(props.currentPage) === p ? c.selectedPage : \"\"}\r\n                                 onClick={() => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                props.users.map(m => <div key={m.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={\"/profile/\" + m.id}>\r\n                            <img src={m.photos.small !== null ? m.photos.small : user} className={c.userPhoto}\r\n                                 alt=\"photo\"/>\r\n                                </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                m.followed\r\n                                    ? <button disabled={props.followingInProgress.some(id => id === m.id)}\r\n                                              onClick={() => {\r\n                                                  props.unfollow(m.id)\r\n                                              }}>Unfollow</button>\r\n                                    : <button disabled={props.followingInProgress.some(id => id === m.id)}\r\n                                              onClick={() => {\r\n                                                  props.follow(m.id)\r\n                                              }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{m.name}</div>\r\n                            <div>{m.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"m.location.country\"}</div>\r\n                            <div>{\"m.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/preloader.1952935e.gif\";","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.gif\";\r\nimport c from \"./Preloader.module.css\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} className={c.preloader} alt=\"preloader\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {AppStateType} from \"./reduxStore\";\r\nimport {createSelector} from \"reselect\";\r\nimport {UserType} from \"./usersReducer\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users: UserType[]) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React, {ComponentType} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {\r\n    followSuccess,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess,\r\n    UserType\r\n} from \"../../../redux/usersReducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../../redux/usersSelectors\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    followSuccess: (userID: string) => void\r\n    unfollowSuccess: (userID: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    toggleFollowingProgress: (followingInProgress: boolean, userId: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.followSuccess}\r\n                    unfollow={this.props.unfollowSuccess}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nexport let UsersContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        followSuccess,\r\n        unfollowSuccess,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers,\r\n    })\r\n)(UsersAPIComponent)","export default __webpack_public_path__ + \"static/media/avatar_for_profile.e4c1e159.jpg\";","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={e => onStatusChange(e)}\r\n                    autoFocus\r\n                    value={status}\r\n                    onBlur={deactivateEditMode}\r\n                />\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport c from \"./ProfileInfo.module.css\"\r\nimport avatarDefault from '../../../../assets/images/avatar_for_profile.jpg'\r\nimport {ProfileType} from \"../../../../redux/profileReducer\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n{/*            <div className={c.ground}>\r\n                <img\r\n                    src=\"https://img.lovepik.com/photo/50066/7884.jpg_wh860.jpg\" alt=\"fon image\" title=\"fon image\"/>\r\n            </div>*/}\r\n            <div className={c.avatarBlock}>\r\n                <div className={c.avatar}>\r\n                    <img alt='ava'\r\n                         src={props.profile && props.profile.photos.large !== null ? props.profile.photos.large : avatarDefault}/>\r\n                </div>\r\n                <ProfileStatusWithHooks\r\n                    status={props.status}\r\n                    updateUserStatus={props.updateUserStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport c from \"./Post.module.css\"\r\nimport {PostType} from \"../../../../../redux/profileReducer\";\r\n\r\nconst Post = (props: PostType) => {\r\n\r\n    return (\r\n        <div key={props.id} className={c.item}>\r\n            <img\r\n                src=\"https://slovami.net/wp-content/uploads/thumbs_dir/the-most-beautiful-guys-russia-4-1-nwkkkydf2f1mhw9a4ijzfs2ktasvevyjiyi4xibqis.jpg\"\r\n                alt=\"ava\" title=\"ava\"/>\r\n            <div className={c.itemText}>\r\n                {props.message}\r\n                <div>\r\n                    <span>like: {props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport c from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {UsersPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\n\r\ntype AddNewPostFormType = {\r\n    AddNewPost: string\r\n}\r\n\r\nconst maxLength = maxLengthCreator(10)\r\n\r\nexport const MyPosts = React.memo((props: UsersPropsType) => {\r\n\r\n    let post = props.profilePage.posts.map(p => <Post key={p.id}\r\n                                                      message={p.message}\r\n                                                      likesCount={p.likesCount}\r\n                                                      id={p.id}/>)\r\n\r\n    let addPost = (values: AddNewPostFormType) => {\r\n        props.onAddPost(values.AddNewPost)\r\n    }\r\n\r\n    return (\r\n        <div className={c.myPosts}>\r\n            <h3>My posts</h3>\r\n            <ReduxAddNewPostForm onSubmit={addPost}/>\r\n            <div className={c.posts}>\r\n                {post}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<AddNewPostFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"AddNewPost\"}\r\n                    placeholder={\"Write your message\"}\r\n                    validate={[required, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddNewPostForm = reduxForm<AddNewPostFormType>({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n","import React from 'react';\r\nimport {addPost, initialStateType} from \"../../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    profilePage: initialStateType\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n    onAddPost: (newPostText: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\r\n    return {\r\n        onAddPost: (newPostText: string) => {\r\n            dispatch(addPost(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nexport let MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n","import React from 'react';\r\nimport c from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n    return (\r\n        <div className={c.profile}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateUserStatus={props.updateUserStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {ComponentType} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserStatus,\r\n    getUserProfile,\r\n    ProfileType,\r\n    updateUserStatus\r\n} from \"../../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {compose} from \"redux\";\r\nimport {InjectedProps, withRouter2} from \"../../../hoc/withRouter/withRouter\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect/withAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserID: string\r\n}\r\ntype MapDispatchToProps = {\r\n    getUserProfile: (userId: string) => void\r\n    getUserStatus: (userId: string) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToProps & InjectedProps\r\n\r\nclass ProfileAPIContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId: string = this.props.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserID;\r\n            if(!userId){\r\n                //@ts-ignore\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateUserStatus={this.props.updateUserStatus}\r\n\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.data.userId,\r\n    }\r\n}\r\n\r\nexport const ProfileContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateUserStatus,\r\n    }),\r\n    withRouter2,\r\n    withAuthRedirect\r\n)(ProfileAPIContainer);\r\n","import React from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\n\r\nexport type locationType = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    state: object | null\r\n}\r\n\r\nexport type WrappedComponentWithRouterPropsType = {\r\n    userId: string\r\n    location: locationType\r\n}\r\n\r\nexport const withRouter = (WrappedComponent: typeof React.Component) => (props: object) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props}\r\n            userId={params.userId}\r\n            location={location}\r\n        />\r\n    );\r\n}\r\n\r\nexport type InjectedProps = {\r\n    userId : string\r\n}\r\n\r\n\r\nexport const withRouter2 = <T  extends object> (WrappedComponent: React.ComponentType<T>) => (props: T) => {\r\n\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n    return (\r\n\r\n        <WrappedComponent\r\n            {...props as T}\r\n            userId={params.userId}\r\n            location={location}\r\n\r\n        />\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.cbfad428.png\";","import React from 'react';\r\nimport c from \"./Header.module.css\"\r\nimport logo from \"../../assets/images/logo.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logout: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n\r\n    return (\r\n        <header className={c.header}>\r\n            <img src={logo} alt='logo' title=\"image logo\"/>\r\n            <div className={c.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                        : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype HeaderContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype mapDispatchToPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType, HeaderContainerType> {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Header\r\n                isAuth={this.props.isAuth}\r\n                login={this.props.login}\r\n                logout={this.props.logout}\r\n            />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.data.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype LoginPropsType = {\r\n    isAuth?: boolean\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nexport const Login = ({isAuth, login, ...restProps}: LoginPropsType) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={\"Email\"}\r\n                    name={\"email\"}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={\"Password\"}\r\n                    name={\"password\"}\r\n                    type={\"password\"}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    component={\"input\"}\r\n                    name={\"rememberMe\"}\r\n                    type=\"checkbox\"\r\n                /> Remember me\r\n            </div>\r\n            {\r\n                props.error &&\r\n                <div className={style.formSummuryError}>{props.error}</div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: \"Login\"})(LoginForm)\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {Login} from \"./Login\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\ntype LoginContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nclass LoginAPIContainer extends React.Component<LoginContainerType, LoginContainerType> {\r\n\r\n    render() {\r\n        return (\r\n            <Login\r\n            isAuth={this.props.isAuth}\r\n            login={this.props.login}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const LoginContainer = connect(mapStateToProps, {\r\n    login\r\n})(LoginAPIContainer)","import React from 'react';\r\nimport c from './App.module.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport News from \"./components/MainWindow/News/News\";\r\nimport Music from \"./components/MainWindow/Music/Music\";\r\nimport Friends from \"./components/MainWindow/Friends/Friends\";\r\nimport Settings from \"./components/MainWindow/Settings/Settings\";\r\nimport {MessagesContainer} from \"./components/MainWindow/Messages/MessagesContainer\";\r\nimport {UsersContainer} from \"./components/MainWindow/Users/UsersContainer\";\r\nimport {ProfileContainer} from \"./components/MainWindow/Profile/ProfileContaeiner\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {LoginContainer} from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/AppReducer\";\r\nimport {AppStateType} from \"./redux/reduxStore\";\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\n\r\ntype mapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype AppContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nclass App extends React.Component<AppContainerType, AppContainerType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <main className={c.appContent}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={c.appContentWindow}>\r\n                    <Routes>\r\n                        <Route path=\"/profile/\" element={<ProfileContainer/>}>\r\n                            <Route path=\":userId\" element={<ProfileContainer/>}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/messages/\" element={<MessagesContainer/>}>\r\n                            <Route path=\":userId\" element={<MessagesContainer/>}/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/users/*\" element={<UsersContainer/>}/>\r\n                        <Route path=\"/news/*\" element={<News/>}/>\r\n                        <Route path=\"/music/*\" element={<Music/>}/>\r\n                        <Route path=\"/settings/*\" element={<Settings/>}/>\r\n                        <Route path=\"/friends/*\" element={<Friends/>}/>\r\n\r\n                        <Route path=\"/login\" element={<LoginContainer/>}/>\r\n\r\n                    </Routes>\r\n                </div>\r\n                <Footer/>\r\n            </main>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport const AppContainer = connect(mapStateToProps, {\r\n    initializeApp,\r\n})(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {store} from \"./redux/reduxStore\";\r\nimport {AppContainer} from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3bb8c\",\"error\":\"FormsControls_error__17NH9\",\"formSummuryError\":\"FormsControls_formSummuryError__7wSbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Messages_dialogs__2a5ir\",\"dialogItem\":\"Messages_dialogItem__1fljT\",\"dialog\":\"Messages_dialog__amYKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ground\":\"ProfileInfo_ground__tDaWn\",\"ava\":\"ProfileInfo_ava__9e5p9\",\"avatar\":\"ProfileInfo_avatar__WJ8zq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContent\":\"App_appContent__4mg9X\",\"appContentWindow\":\"App_appContentWindow__dnoS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__33a3z\",\"selectedPage\":\"Users_selectedPage__3noiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1Dxws\",\"posts\":\"MyPosts_posts__1WTYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3IYxb\",\"itemText\":\"Post_itemText__rOuHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3WLj3\",\"loginBlock\":\"Header_loginBlock__3D_es\"};"],"sourceRoot":""}